{"version":3,"sources":["history.js","services/httpService.js","services/socketService.js","services/userService.js","store/actions/userActions.js","cmps/Login.jsx","cmps/SignUp.jsx","pages/Home.jsx","services/boardService.js","store/actions/boardActions.js","services/cloudinaryService.js","cmps/BoardMenu.jsx","cmps/BoardPreview.jsx","cmps/BoardList.jsx","cmps/NavMenuFilter.jsx","cmps/NavMenu.jsx","cmps/HistoryNotifications.jsx","cmps/AllReadNotifications.jsx","cmps/UnReadNotifications.jsx","cmps/NavUserNotificationMenu.jsx","cmps/BoardMembers.jsx","cmps/MemberPreview.jsx","cmps/NavBarSearch.jsx","cmps/InviteMemberModal.jsx","styles/setup/variable.js","cmps/ChartBar.jsx","cmps/ChartPay.jsx","cmps/ChartLine.jsx","cmps/ChartModal.jsx","services/soundService.js","cmps/CardComments.jsx","cmps/NavBar.jsx","pages/UserDetails.jsx","pages/DashBoard.jsx","cmps/CardActions.jsx","cmps/CardCommentsList.jsx","cmps/CardDescription.jsx","cmps/CardMembersList.jsx","cmps/CardMembers.jsx","cmps/CardCalendar.jsx","cmps/DueDate.jsx","cmps/ImgModal.jsx","cmps/CardAttachments.jsx","cmps/CardTodoList.jsx","cmps/InterActiveRobot.jsx","cmps/LabelsModal.jsx","cmps/CardLabels.jsx","pages/CardDetails.jsx","cmps/IconPreview.jsx","cmps/CardIconsPreview.jsx","cmps/CardLabelsPreview.jsx","cmps/CardHeaderForm.jsx","cmps/CardMenu.jsx","cmps/CardPreview.jsx","cmps/AddCardForm.jsx","cmps/ListMenu.jsx","cmps/ListTitleForm.jsx","cmps/CardListPreview.jsx","cmps/AddListForm.jsx","pages/Board.jsx","App.js","serviceWorker.js","store/reducers/boardReducer.js","store/reducers/UserReducer.js","store/store.js","index.js"],"names":["history","createBrowserHistory","axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","push","socket","setup","io","terminate","on","eventName","cb","off","emit","login","logout","signup","getUsers","httpService","getById","userId","remove","update","getUserFromSession","clearNotifications","user","notifications","map","notifi","isRead","_id","userCred","_handleLogin","isLogIn","socketService","sessionStorage","clear","setItem","JSON","stringify","session","loadUsers","dispatch","userService","users","setUsers","userCreds","setUser","getUser","userData","type","Login","state","username","password","inputHandler","target","field","name","value","setState","onSubmit","ev","preventDefault","credentials","props","then","catch","className","this","placeholder","autoComplete","onChange","to","React","Component","mapDispatchToProps","connect","SignUp","fullName","isGuest","required","Home","onDemoClick","loggedUser","onClick","component","path","loggedInUser","baseUrl","query","filter","get","params","id","delete","save","board","prm","put","post","setBoards","boardService","boards","clearCurrBoard","setBoard","removeBoard","boardId","saveBoard","savedBoard","uploadImg","UPLOAD_URL","formDataImg","Object","values","files","img","formData","FormData","append","err","Promise","all","BoardMenu","title","editTitleMode","isImgLoading","updateCoverMode","closeBoardMenu","e","closeMenu","node","contains","keyCode","activeEditMode","stopPropagation","handleChange","handleSubmit","onRemoveBoard","openCoverMode","coverMode","closeCoverMode","onUploadImg","background","content","onChangeColor","color","document","addEventListener","removeEventListener","ref","onBlur","autoFocus","spellCheck","onMouseOver","onMouseLeave","hidden","accept","BoardPreview","isModalOpen","openMenu","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","isStarred","onBoardClicked","editable","Fragment","style","getBackground","starToggle","BoardList","addBoardForm","newBoardTitle","escFunction","event","openForm","createNewBoard","handleBlur","addBoardOption","key","NavMenuFilter","onFilter","NavMenu","filteredBoards","onPageChange","filterBy","length","toLowerCase","includes","onHomeBtnClick","currBoard","isMenuActive","starredBoards","Boolean","withRouter","HistoryNotifications","isShown","goBack","idx","AllReadNotifications","showHistory","UnReadNotifications","notifiToShow","markAsRead","onBoardCollab","onInviteDecline","onViewCard","cardId","NavUserNotificationMenu","isHistoryShown","onCloseNotificationMenu","onClearNotification","onNotificationsHistory","prevState","userToUpdate","collabBoardId","members","find","imgUrl","userName","_idx","splice","isNotificationModalOpen","onViewCardNotification","BoardMembers","cardMemberMode","member","charAt","onInvite","MemberPreview","isUserModalOpen","onCloseUserModal","onUserClick","onUserLogOut","NavBarSearch","searchWord","filterLists","filterCards","isSearchOpenModal","onCloseSearchModal","onSearch","cardLists","forEach","cardList","boardTitle","cards","card","text","cardListId","cardListTitle","filterBoards","filterUsers","onBoardClick","onCardClicked","openSearchModal","InviteMemberModal","filteredUsers","isAlreadyInvitesShown","keyword","onCloseInviteMenu","keyWord","activeBoard","findIndex","setTimeout","invitedUserId","sender","createdAt","Date","now","prevProps","isInviteModalOpen","onKeyUp","marginLeft","marginBottom","boardApp","ChartBar","reducerJoinTaskByUser","reduce","acc","checkList","checkBox","isDone","doneBy","doneAt","moment","doneTime","format","graphColors","cssVar","updateUsersDoneTaskData","dateNow","labels","datasets","step","usersDoneCard","colorPalate","dataUserDoneTasks","label","columnColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","options","maintainAspectRatio","ChartPay","updateData","cardLength","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","ChartLine","ChartModal","isCartModalOpen","closeStatisticModal","onChartClick","notification","notifiPing","Audio","volume","play","typingInterval","NavBar","closingCode","socketSubscribers","invData","notifiBoardCollab","assignData","notifiCardAssign","unshift","fromNow","soundService","assingedBy","onMenuClick","onCloseMenu","onUserNotificationClick","onInviteMember","window","onbeforeunload","width","alt","marginRight","UserDetails","match","src","about","DashBoard","CardActions","onLabels","onImages","onTodoAction","openDatePicker","CardCommentsList","comments","comment","minWidth","height","txt","deleteComment","CardComments","userMsg","isTypeActive","onUserType","clearInterval","currUser","CardDescription","isEditMode","description","dynamicClass","onDescClicked","onTextAreaLeave","onTextFocus","onDescEdit","temp_value","onFocus","moveCaretAtEnd","CardMembersList","opacity","letUserIdx","addMember","CardMembers","isAddMemberActive","isMouseHoverUser","onAddMember","assignedUserId","onMouseEnter","onRemoveCardUser","showModal","CardCalendar","date","timeStamp","formatDate","getTime","minDate","onDatePicked","DueDate","isComplete","diffDays","onComplete","getDiffDays","dueDate","Math","ceil","marginTop","fontWeight","ImgModal","scrollTo","top","left","behavior","onCloseImgModal","CardAttachments","isLoading","activeImg","onUpload","uploadedFiles","cdyImgs","file","fileName","original_filename","attachments","onDelete","onImgClick","multiple","CardTodoList","isAddModalShown","newTodoVal","isListFiltered","openTodos","completedTodos","barFillWidth","toggleMode","getBarWidth","totalTodos","todosBarWidth","getTodosStatus","item","todo","onAddTodo","onHideComplete","onTodosScreen","creator","onActionTodo","list","padding","LabelsModal","isErrorShown","onOutSideClick","onClose","onLabelClick","CardLabels","isDeleteBtnShow","innerText","onEnter","onLeave","onRemovelabel","minHeight","borderRadius","fontSize","textAlign","position","contentEditable","suppressContentEditableWarning","CardDetails","currCard","currList","isCalendarActive","isImagesShown","isMembersModalShown","isLabelsModalShown","isActionTodoActive","eventsHandler","getCurrCard","onMembers","onCloseCardDetails","onCardTitle","onTitleBlur","onLabelsClose","IconPreview","icon","num","CardIconsPreview","val","floor","CardLabelsPreview","lable","CardHeaderForm","cardTitle","cardHeader","closeCardMenu","saveCard","offEditCardHeader","CardMenu","isMenuOpen","onDeleteCard","cardIdx","onEditCardHeader","CardPreview","isFocus","parse","showCard","index","animation","draggableId","provided","snapshot","isDragging","innerRef","draggableProps","dragHandleProps","userSelect","histoy","AddCardForm","addCardForm","newCardTitle","createNewCard","onAddCard","ListMenu","onDeleteList","cardlistId","listIdx","onEditListTitle","ListTitleForm","offEditListTitle","CardListPreview","addlistForm","newlistTitle","createNewlist","onAddList","droppableId","isDraggingOver","listTitle","droppableprops","AddListForm","Board","isScrolling","getNewCard","uuid","covers","getNewList","ListId","onDragEnd","result","destination","source","sourcecardList","destcardList","sourcecards","destcards","removed","removedList","onMouseDown","_targetInst","memoizedProps","onMouseUp","onMouseMove","movementX","scrollBy","direction","droppableProps","App","location","hostname","initialState","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.26993e41.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import history from '../history';\r\nimport Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n    \r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data){\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data){\r\n        \r\n        \r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data){\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data){\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method='get', data=null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n          history.push('/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import io from 'socket.io-client';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n  setup,\r\n  terminate,\r\n  on,\r\n  off,\r\n  emit,\r\n};\r\n\r\nfunction setup() {\r\n  socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n\r\n  socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n  socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n  socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  socket.emit(eventName, data);\r\n}\r\n\r\n\r\n","import httpService from './httpService'\r\nimport socketService from './socketService'\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getUserFromSession,\r\n    clearNotifications\r\n}\r\n\r\nfunction getUsers() {\r\n    return httpService.get('user')\r\n}\r\n\r\nfunction getById(userId) {\r\n    return httpService.get(`user/${userId}`)\r\n}\r\n\r\nfunction remove(userId) {\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nfunction update(user) {\r\n    console.log('Update', user);\r\n    \r\n    return httpService.put(`user/${user._id}`, user)\r\n}\r\n\r\nasync function login(userCred) {\r\n    const user = await httpService.post('auth/login', userCred)\r\n    return _handleLogin(user)\r\n}\r\n\r\nasync function signup(userCred) {\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _handleLogin(user)\r\n}\r\n\r\nasync function logout(user) {\r\n    user.isLogIn = false\r\n    await update(user)\r\n    socketService.off(`user-invite-${user._id}`)\r\n    socketService.off(`user-card-assign-${user._id}`)\r\n    let res = await httpService.post('auth/logout');\r\n   sessionStorage.clear();\r\n    return res\r\n}\r\n\r\nfunction clearNotifications(user) {\r\n    user.notifications.map(notifi => notifi.isRead = true)\r\n    update(user)\r\n}\r\n\r\nfunction _handleLogin(user) {\r\n    user.isLogIn = true ;\r\n    update(user)\r\n    socketService.emit('user login')\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}\r\n\r\nasync function getUserFromSession() {\r\n    \r\n\r\n    const session = await httpService.get('auth/session');\r\n    \r\n    return session;\r\n}","import userService from '../../services/userService'\r\nimport socketService from '../../services/socketService'\r\n\r\n\r\nexport function loadUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      const users = await userService.getUsers();\r\n      dispatch(setUsers(users));\r\n    } catch (err) {\r\n\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.remove(userId);\r\n      dispatch(_removeUser(userId));\r\n    } catch (err) {\r\n      console.log('UserActions: err in removeUser', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    const user = await userService.login(userCreds);\r\n    dispatch(setUser(user));\r\n  }\r\n}\r\n\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    const user = await userService.signup(userCreds)\r\n    dispatch(setUser(user))\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  return async dispatch => {\r\n    await userService.logout();\r\n    dispatch(setUser(null));\r\n  }\r\n}\r\n\r\nexport function getUser() {\r\n  return async dispatch => {\r\n    const user = await userService.getUserFromSession();\r\n    dispatch(setUser(user));\r\n  }\r\n}\r\n\r\nexport function update(userData) {\r\n  return async dispatch => {\r\n    const user = await userService.update(userData);\r\n    dispatch(setUser(user));\r\n  }\r\n}\r\n\r\nexport function setUser(user) {\r\n  return { type: 'SET_USER', user }\r\n}\r\n\r\n\r\nfunction setUsers(users) {\r\n  return { type: 'SET_USERS', users }\r\n}\r\n\r\nfunction _removeUser(userId) {\r\n  return { type: 'USER_REMOVE', userId }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../store/actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Login extends React.Component {\r\n\r\n\r\n    state = {\r\n        username: null,\r\n        password: null\r\n    }\r\n\r\n    inputHandler = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const { username, password } = this.state\r\n        const credentials = {\r\n            username,\r\n            password\r\n        }\r\n\r\n        this.props.login(credentials)\r\n            .then(() => {\r\n\r\n                this.props.history.push('/board')\r\n            })\r\n            .catch(console.log('ERROR')) // TODO: Show error modal\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-container flex column space-between align-center\">\r\n                <h2>Login</h2>\r\n                <form className=\"flex column space-between\" onSubmit={this.onSubmit}>\r\n                    <input type=\"text\" placeholder=\"username\" name=\"username\" autoComplete=\"off\" onChange={this.inputHandler} />\r\n                    <input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={this.inputHandler} />\r\n                    <button>Login</button>\r\n                </form>\r\n                <p>Don't have an account?<Link to=\"/signup\">signup</Link></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    login\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Login)","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { signup } from '../store/actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass SignUp extends React.Component {\r\n\r\n\r\n    state = {\r\n        fullName: null,\r\n        password: null,\r\n        username: null\r\n    }\r\n\r\n    inputHandler = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const { fullName, password, username } = this.state\r\n        const credentials = {\r\n            password,\r\n            fullName,\r\n            username,\r\n            isGuest: false\r\n        }\r\n\r\n        this.props.signup(credentials)\r\n            .then(() => this.props.history.push('/board'))\r\n            .catch(res => console.log(res)) //todo Show an error modal\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"signup-container flex column space-between align-center\">\r\n                <h2>Signup</h2>\r\n                <form className=\"flex column space-between\" onSubmit={this.onSubmit}>\r\n                    <input type=\"text\" placeholder=\"Full name\" name=\"fullName\" onChange={this.inputHandler} required />\r\n                    <input type=\"text\" placeholder=\"username\" name=\"username\" onChange={this.inputHandler} required />\r\n                    <input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={this.inputHandler} required />\r\n                    <button>Signup</button>\r\n                </form>\r\n                <p>Already have an account? <Link to=\"/login\">login</Link></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    signup\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp)","import React from 'react';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport Login from '../cmps/Login.jsx'\r\nimport SignUp from '../cmps/SignUp.jsx'\r\nimport { connect } from 'react-redux'\r\nimport { login, getUser } from '../store/actions/userActions.js'\r\n\r\nclass Home extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUser()\r\n            .then(() => {\r\n                if (this.props.loggedUser) this.props.history.push('/board')\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.loggedUser) this.props.history.push('/board')\r\n    }\r\n\r\n    onDemoClick = () => {\r\n        this.props.login({ username: 'guest', password: 'guest' })\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"home-container\">\r\n               \r\n                <div className=\"wallpaper\" />\r\n                <div className=\"home-content-wrapper flex\">\r\n                    <div className=\"home-pitch flex column justify-center align-center\">\r\n                        {/* <h2 className=\"logo\"></h2> */}\r\n                        <div className=\"home-description-wrapper\">\r\n                            <h3 className=\"line-a\">Taskerr</h3>\r\n                            <h3 className=\"line-b\">Like Trello,</h3>\r\n                            <h3 className=\"line-c\">Just better.</h3>\r\n                            <div className=\"demo-btn flex align-center justify-center\" onClick={this.onDemoClick}>Guest mode</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"home-login-container flex justify-center align-center\">\r\n                        <Switch>\r\n                            <Route component={SignUp} path=\"/signup\" />\r\n                            <Route component={Login} path=\"/\" />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    getUser\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import Axios from 'axios';\r\nconst baseUrl = (process.env.NODE_ENV !== 'development') ? '/api/board' : '//localhost:3030/api/board';\r\nconst axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    query,\r\n    get,\r\n    remove,\r\n    save\r\n}\r\n\r\nfunction query(filter) {\r\n    return axios.get(baseUrl, { params: { ...filter } })\r\n        .then(res => res.data)\r\n}\r\n\r\nfunction get(id) {\r\n    return axios.get(`${baseUrl}/${id}`)\r\n        .then(res => res.data)\r\n}\r\n\r\nfunction remove(id) {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nfunction save(board) {\r\n    let prm;\r\n    if (board._id) {\r\n        prm = axios.put(`${baseUrl}/${board._id}`, board)\r\n    } else {\r\n        prm = axios.post(baseUrl, board)\r\n    }\r\n    return prm.then(res => res.data)\r\n}\r\n","import boardService from '../../services/boardService.js';\r\nimport socketService from '../../services/socketService.js'\r\n\r\n\r\nexport function setBoards(filter = '') {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const boards = await boardService.query(filter)\r\n            return dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log('boardAction: error in setBoards:', err);\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport function clearCurrBoard() {\r\n    return async dispatch => {\r\n        try {\r\n            return dispatch({ type: 'RESET_BOARD' })\r\n        } catch (err) {\r\n            console.log('Dont earse currBoard', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function setBoard(id) {\r\n    return async dispatch => {\r\n        try {\r\n            const board = await boardService.get(id)\r\n            return dispatch({ type: 'SET_BOARD', board })\r\n        } catch (err) {\r\n            console.log('boardAction: error in setBoard:', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeBoard(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            await boardService.remove(boardId)\r\n            dispatch({ type: 'REMOVE_BOARD', boardId })\r\n\r\n        } catch (err) {\r\n            console.log('boardAction: error in removeBoard:', err);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function saveBoard(board) {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const type = board._id ? 'UPDATE_BOARD' : 'ADD_BOARD';\r\n            const savedBoard = await boardService.save(board)\r\n            socketService.emit('board updated', board._id);\r\n            return dispatch({ type, board: savedBoard })\r\n        } catch (err) {\r\n            console.log('boardAction: error in saveBoard:', err);\r\n        }\r\n    }\r\n}\r\n","import axios from 'axios'\r\n\r\n/* const axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n */\r\n\r\nexport function uploadImg(ev) {\r\n    const CLOUD_NAME = 'dt3cfrjpr'; \r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`;\r\n\r\n    const dataImg = Object.values(ev.target.files)\r\n\r\n    const formDataImg = dataImg.map(img => {\r\n        const formData = new FormData();\r\n        formData.append('file', img);\r\n        formData.append('upload_preset', 'rvddiiry'); // second parameter is the upload preset (you can find it in cloudinary settings)\r\n        return axios.post(UPLOAD_URL, formData)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => console.log(err))\r\n    })\r\n\r\n    return Promise.all(formDataImg)\r\n\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { saveBoard, removeBoard } from '../store/actions/boardActions.js';\r\nimport { uploadImg } from '../services/cloudinaryService.js';\r\n\r\nclass BoardMenu extends React.Component {\r\n\r\n    state = {\r\n        title: '',\r\n        editTitleMode: false,\r\n        isImgLoading: false,\r\n        updateCoverMode: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.addEventListener(\"keydown\", this.closeBoardMenu, false);\r\n        const { board } = this.props;\r\n        this.setState({ title: board.title })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.removeEventListener(\"keydown\", this.closeBoardMenu, false);\r\n    }\r\n\r\n    closeBoardMenu = (e) => {\r\n        const { closeMenu } = this.props;\r\n        if (!this.node.contains(e.target) || e.keyCode === 27) {\r\n            closeMenu();\r\n        }\r\n    }\r\n\r\n    activeEditMode = (e) => {\r\n        e.stopPropagation()\r\n        this.setState({ editTitleMode: true })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.stopPropagation()\r\n        this.setState({ title: e.target.value })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { saveBoard, closeMenu, clearCurrBoard } = this.props;\r\n        let { board } = this.props\r\n        board.title = this.state.title;\r\n        saveBoard(board)\r\n            .then(() => clearCurrBoard())\r\n        this.setState({ editTitleMode: false })\r\n        closeMenu();\r\n    }\r\n\r\n    onRemoveBoard = (e) => {\r\n        e.stopPropagation();\r\n        const { board, removeBoard } = this.props;\r\n        removeBoard(board._id);\r\n    }\r\n\r\n    openCoverMode = () => {\r\n        this.setState({ coverMode: true })\r\n    }\r\n\r\n    closeCoverMode = () => {\r\n        this.setState({ coverMode: false })\r\n    }\r\n\r\n    onUploadImg = (ev) => {\r\n        const { saveBoard, closeMenu, clearCurrBoard } = this.props;\r\n        this.setState({ isImgLoading: true })\r\n        let { board } = this.props\r\n        uploadImg(ev)\r\n            .then(res => {\r\n                board.background.content = res[0].url\r\n                saveBoard(board)\r\n                    .then(() => clearCurrBoard())\r\n                this.setState({ isImgLoading: false })\r\n                closeMenu();\r\n            })\r\n            .catch(() => this.setState({ isImgLoading: false }))\r\n    }\r\n\r\n    onChangeColor = (color) => {\r\n        const { saveBoard, closeMenu, clearCurrBoard } = this.props;\r\n        let { board } = this.props\r\n        board.background.color = color\r\n        board.background.content = '';\r\n        saveBoard(board)\r\n            .then(() => clearCurrBoard())\r\n        closeMenu();\r\n    }\r\n\r\n    render() {\r\n        const { editTitleMode, title, isImgLoading, coverMode } = this.state\r\n\r\n        return (\r\n            <div ref={node => this.node = node} className={`board-menu-container flex column space-between ${isImgLoading && 'box-shadow-off'}`}>\r\n                {isImgLoading ? <div className=\"loading\"></div> :\r\n                    <>\r\n                        {!editTitleMode ? <>\r\n                            <div onClick={this.activeEditMode}>Edit Title</div>\r\n                            <div className=\"update-cover-btn\" onClick={(e) => e.stopPropagation()} onMouseOver={this.openCoverMode} onMouseLeave={this.closeCoverMode}>Update cover\r\n                            {coverMode && <div className=\"change-cover-wrap flex column\">\r\n                                    <div className=\"color-palette flex\">\r\n                                        <div onClick={() => this.onChangeColor('#e74c3c')}>⬤</div>\r\n                                        <div onClick={() => this.onChangeColor('#e67e22')}>⬤</div>\r\n                                        <div onClick={() => this.onChangeColor('#f1c40f')}>⬤</div>\r\n                                        <div onClick={() => this.onChangeColor('#27ae60')}>⬤</div>\r\n                                        <div onClick={() => this.onChangeColor('#2980b9')}>⬤</div>\r\n                                        <div onClick={() => this.onChangeColor('#8e44ad')}>⬤</div>\r\n                                    </div>\r\n                                    <label>\r\n                                        <div className=\"upload-pic-btn\">Upload Image\r\n                                         <input onChange={this.onUploadImg} type=\"file\" hidden accept=\"image/png, image/jpeg\" />\r\n                                        </div>\r\n                                    </label>\r\n                                </div>}\r\n                            </div>\r\n                            <div className=\"delete-btn\" onClick={this.onRemoveBoard}>Delete Board</div>\r\n                        </> :\r\n                            <form className=\"flex\" onSubmit={this.handleSubmit}>\r\n                                <input value={title} onChange={this.handleChange} onBlur={this.handleSubmit} onClick={(e) => e.stopPropagation()} autoFocus spellCheck=\"false\" />\r\n                            </form>}\r\n                    </>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n    removeBoard\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(BoardMenu)","import React from 'react';\r\nimport BoardMenu from './BoardMenu.jsx'\r\n\r\nexport default class BoardPreview extends React.Component {\r\n\r\n    state = {\r\n        isModalOpen: false\r\n    }\r\n\r\n    getBackground(board) {\r\n        return board.background.content ? {\r\n            backgroundImage: \"url(\" + `${board.background.content}` + \")\",\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'no-repeat'\r\n        } : { background: board.background.color }\r\n    }\r\n\r\n    starToggle(board, ev) {\r\n        const { saveBoard, clearCurrBoard } = this.props;\r\n\r\n        ev.stopPropagation()\r\n        board.isStarred = !board.isStarred;\r\n        saveBoard(board)\r\n            .then(() => clearCurrBoard())\r\n    }\r\n\r\n    openMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({ isModalOpen: true });\r\n\r\n    }\r\n\r\n    closeMenu = () => {\r\n        this.setState({ isModalOpen: false })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { isModalOpen } = this.state\r\n        const { board, onBoardClicked, clearCurrBoard, editable } = this.props\r\n\r\n        return (\r\n            < React.Fragment >\r\n                <div className=\"board\" onClick={() => onBoardClicked(board._id)} style={this.getBackground(board)}>\r\n                    <h3>{board.title}</h3>\r\n                    {editable && <div className={`fs24 ${board.isStarred ? 'starred' : 'not-starred'}`} onClick={(ev) => this.starToggle(board, ev)} />}\r\n                    {editable && <div className=\"menu-btn\" onClick={this.openMenu} />}\r\n                    {isModalOpen && <BoardMenu closeMenu={this.closeMenu} board={board} clearCurrBoard={clearCurrBoard} />}\r\n                </div>\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport BoardPreview from './BoardPreview.jsx'\r\n\r\nexport default class BoardList extends React.Component {\r\n    state = {\r\n        addBoardForm: false,\r\n        newBoardTitle: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    escFunction = (event) => {\r\n        if (event.keyCode === 27) {\r\n            this.setState({ addBoardForm: false, newBoardTitle: '' })\r\n        }\r\n    }\r\n\r\n    openForm = () => {\r\n        this.setState({ addBoardForm: true });\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ newBoardTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.createNewBoard();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        if (this.state.newBoardTitle) this.createNewBoard();\r\n        else this.setState({ addBoardForm: false });\r\n    }\r\n\r\n    createNewBoard() {\r\n        const board = { title: this.state.newBoardTitle }\r\n        this.props.saveBoard(board)\r\n        this.setState({ addBoardForm: false, newBoardTitle: '' })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { boards, onBoardClicked, saveBoard, addBoardOption, clearCurrBoard, history, editable } = this.props;\r\n        const { addBoardForm, newBoardTitle } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                {boards.map(board => <BoardPreview history={history} key={board._id} board={board} onBoardClicked={onBoardClicked} saveBoard={saveBoard} clearCurrBoard={clearCurrBoard} editable={editable} />)}\r\n                {addBoardOption && <div className=\"board add-board flex justify-center align-center\" onClick={this.openForm} >\r\n                    {!addBoardForm ? <h3>Create new board</h3> :\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <input placeholder=\"Board title...\" value={newBoardTitle} onChange={this.handleChange} autoFocus onBlur={this.handleBlur} />\r\n                        </form>\r\n                    }\r\n                </div>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport class NavMenuFilter extends React.Component {\r\n\r\n    inputHandler = ({ target }) => {\r\n        this.props.onFilter(target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"nav-menu-filter flex justify-center align-center\">\r\n                <input className=\"board-search\" autoComplete=\"off\" type=\"text\" name=\"keyword\" placeholder=\"Search a board\" onChange={this.inputHandler} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport BoardList from '../cmps/BoardList';\r\nimport { NavMenuFilter } from '../cmps/NavMenuFilter';\r\nimport { connect } from 'react-redux';\r\nimport { setBoards, setBoard } from '../store/actions/boardActions.js';\r\n\r\nclass NavMenu extends React.Component {\r\n\r\n    state = {\r\n        filteredBoards: null,\r\n    }\r\n   \r\n    onBoardClicked = (id) => {\r\n        this.props.history.push(`/board/${id}`)\r\n        this.props.setBoard(id)\r\n        this.props.onPageChange();\r\n    }\r\n\r\n    onFilter = (filterBy) => {\r\n\r\n        if (!filterBy.length) {\r\n            this.setState({ filteredBoards: null })\r\n            return\r\n        }\r\n        const { boards } = this.props\r\n        const filteredBoards = boards.filter(board => board.title.toLowerCase().includes(filterBy.toLowerCase()));\r\n\r\n        this.setState({ filteredBoards })\r\n    }\r\n\r\n    onHomeBtnClick = () => {\r\n        this.props.history.push(`/board`)\r\n        this.props.onPageChange();\r\n    }\r\n\r\n    render() {\r\n        const { currBoard, boards, isMenuActive } = this.props\r\n        const { filteredBoards } = this.state\r\n        let starredBoards = boards.filter(board => board.isStarred);\r\n\r\n        return (\r\n            <div className={`nav-menu flex column  ${(isMenuActive)? \"nav-open\": \"\"}`} >\r\n                {currBoard &&\r\n                    <div className=\"home-button flex align-center justify-center cursor\" onClick={() => this.onHomeBtnClick()} >\r\n                        <div className=\"dashboard-btn\"></div>\r\n                        <div className=\"flex align-center justify-center\">Dashboard</div>\r\n                    </div>}\r\n                <NavMenuFilter  onFilter={(filterBy) => this.onFilter(filterBy)} />\r\n\r\n                <div className=\"nav-boards-preview-wrapper flex column\">\r\n                    <div className=\"nav-board-preview-overlay\"></div>\r\n\r\n                    {filteredBoards && <h3 className=\"list-header\">Searched Boards</h3>}\r\n                    {filteredBoards && !filteredBoards.length && <h4 className=\"no-match\">- There is no matches</h4>}\r\n                    {filteredBoards && <div className=\"boards-container flex column align-center\">\r\n                        <BoardList boards={filteredBoards} onBoardClicked={this.onBoardClicked} />\r\n                    </div>}\r\n\r\n\r\n                    {Boolean(boards.length) && <div>\r\n                        {Boolean(starredBoards.length) && <>\r\n                            <h3 className=\"list-header\">Starred</h3>\r\n                            <div className=\"boards-container flex column align-center\">\r\n                                <BoardList boards={starredBoards} onBoardClicked={this.onBoardClicked} />\r\n                            </div> </>}\r\n                        <div>\r\n                            <h3 className=\"list-header\">All Boards</h3>\r\n                        </div>\r\n                        <div className=\"boards-container flex column align-center\">\r\n                            <BoardList boards={boards} onBoardClicked={this.onBoardClicked} />\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setBoards,\r\n    setBoard\r\n}\r\nexport default connect(null, mapDispatchToProps)(withRouter(NavMenu))","import React from 'react'\r\n\r\nexport function HistoryNotifications(props) {\r\n    const { notifications , history , isShown  } = props\r\n    return (\r\n        //  <div className={`nav-user-notifications-container ${isShown? 'open-moadl' : ''} flex column align-center`}>\r\n        <>\r\n            <div className=\"notifications-header flex align-center justify-center\">\r\n                <div className=\"history-back-btn\" onClick={()=>props.goBack()}></div>\r\n                <h3>History</h3>\r\n            </div>\r\n\r\n            <div className=\"nav-notifications-wrapper flex column align-center\">\r\n                {notifications.map((notifi, idx) => {\r\n                    return <div className=\"user-notification flex align-center space-between\"\r\n                        key={idx} onClick={(ev) => {\r\n                            ev.stopPropagation()\r\n                            history.push(`${notifi.url}`)\r\n                            }}>\r\n                        <p>{notifi.content}</p>\r\n                    </div>\r\n\r\n                })}\r\n            </div>\r\n        </>\r\n        // </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport function AllReadNotifications(props) {\r\n    return (\r\n        <div className=\"notifications-all-read flex column align-center\">\r\n            <img className=\"notification-nodata\" />\r\n            <h3>All set! No Unread Notifications</h3>\r\n            <span className=\"notifi-history-btn\" onClick={()=>props.showHistory()}>View history</span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nexport function UnReadNotifications(props) {\r\n\r\n    let notifiToShow = props.user.notifications.filter(notifi => !notifi.isRead)\r\n\r\n    return (\r\n        <div className=\"nav-notifications-wrapper flex column align-center\">\r\n            <span className=\"card-notification-clear\" onClick={() => props.markAsRead()}></span>\r\n            {notifiToShow.map((notifi, idx) => {\r\n                if (notifi.type === 'board-collab') {\r\n                    return <div className=\"user-notification flex align-start\" key={idx}>\r\n                        <p>{notifi.data}</p>\r\n                        <div className=\"board-collab-btns flex column space-around\">\r\n                            <button onClick={()=> props.onBoardCollab(notifi , idx)}>Join</button>\r\n                            <button onClick={()=> props.onInviteDecline(idx)}>Decline</button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                else if(notifi.type === 'card-assign'){\r\n                    return <div className=\"user-notification flex column\" key={idx}>\r\n                        <p className=\"card-assign-content\">{notifi.data}</p>\r\n                        <Link className=\"notification-card-link\" onClick={()=> props.onViewCard(idx)} to={`/board/${notifi.boardId}/${notifi.cardId}`}>View Card</Link>\r\n                    </div>\r\n                }\r\n                else {\r\n                    return <div className=\"user-notification flex align-center space-between\" key={idx}>\r\n                        <p>{notifi.data}</p>\r\n                        <Link className=\"notification-link\" to={notifi.url}>Details</Link>\r\n                    </div>\r\n                }\r\n\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport userService from '../services/userService'\r\nimport boardService from '../services/boardService'\r\nimport { HistoryNotifications } from './HistoryNotifications'\r\nimport { AllReadNotifications } from './AllReadNotifications';\r\nimport { UnReadNotifications } from './UnReadNotifications';\r\nimport { saveBoard } from '../store/actions/boardActions.js'\r\nimport { getUser, update, setUser } from '../store/actions/userActions'\r\n\r\n\r\nclass NavUserNotificationMenu extends Component {\r\n\r\n    state = {\r\n        // user: null,\r\n        isHistoryShown: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUser()\r\n        document.addEventListener(\"mousedown\", this.onCloseNotificationMenu, false);\r\n        document.addEventListener(\"keydown\", this.onCloseNotificationMenu, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.onCloseNotificationMenu, false);\r\n        document.removeEventListener(\"keydown\", this.onCloseNotificationMenu, false);\r\n    }\r\n\r\n    onCloseNotificationMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.props.onCloseNotificationMenu();\r\n        }\r\n    }\r\n\r\n\r\n    onClearNotification = () => {\r\n        const { loggedUser } = this.props\r\n        userService.clearNotifications(loggedUser)\r\n        this.props.update(loggedUser)\r\n    }\r\n\r\n    onNotificationsHistory = () => {\r\n        this.setState(prevState => ({ isHistoryShown: !prevState.isHistoryShown }))\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    onBoardCollab = async (notifi, idx) => {\r\n        const userToUpdate = { ...this.props.loggedUser }\r\n        const board = await boardService.get(notifi.collabBoardId)\r\n        let user = board.members.find(user => user._id === userToUpdate._id);\r\n        if (!user) {\r\n            board.members.push({\r\n                _id: userToUpdate._id,\r\n                imgUrl: userToUpdate.imgUrl,\r\n                userName: userToUpdate.userName,\r\n                fullName: userToUpdate.fullName\r\n            });\r\n        }\r\n        userToUpdate.notifications = userToUpdate.notifications.filter((notifi, _idx) => _idx !== idx);\r\n        await this.props.update(userToUpdate)\r\n        await this.props.saveBoard(board)\r\n        this.props.onCloseNotificationMenu()\r\n\r\n        if(!user) this.props.history.push(`/board/${board._id}`)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    onInviteDecline = (idx) => {\r\n        const { loggedUser } = this.props\r\n        loggedUser.notifications.splice(idx, 1)\r\n        this.props.update(loggedUser)\r\n    }\r\n\r\n    render() {\r\n        const { loggedUser, isNotificationModalOpen } = this.props\r\n        const { isHistoryShown } = this.state\r\n        let notifiToShow = loggedUser.notifications.filter(notifi => !notifi.isRead)\r\n\r\n        return (\r\n            <div ref={node => this.node = node}>\r\n\r\n                {<div className={`nav-user-notifications-container ${(isNotificationModalOpen) ? \"modal-open\" : \"\"} flex column align-center`}>\r\n                    {isHistoryShown && <HistoryNotifications isShown={isNotificationModalOpen} goBack={this.onNotificationsHistory} notifications={loggedUser.notifications} history={this.props.history} />}\r\n                    {!isHistoryShown &&\r\n                        <>\r\n                            <div className=\"notifications-header\"><h3>Notifications</h3></div>\r\n                            {!notifiToShow.length ?\r\n\r\n                                <AllReadNotifications showHistory={this.onNotificationsHistory} />\r\n                                :\r\n                                <UnReadNotifications onViewCard={(idx)=>this.props.onViewCardNotification(idx)} onInviteDecline={this.onInviteDecline} markAsRead={this.onClearNotification} notifications={notifiToShow} onBoardCollab={this.onBoardCollab} user={loggedUser} />\r\n                            }\r\n                        </>}\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n    getUser,\r\n    update,\r\n    setUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavUserNotificationMenu)","import React from 'react'\r\n\r\nexport function BoardMembers(props) {\r\n    const { board, history, cardMemberMode } = props\r\n    \r\n    return (\r\n        <div className=\"nav-board-members flex align-center\">\r\n\r\n            {board.members.map((member, idx) => {\r\n\r\n                if (member.imgUrl) {\r\n                    return <div key={idx} className=\"board-member\" style={{\r\n                        backgroundImage: \"url(\" + `${member.imgUrl}` + \")\",\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat'\r\n                    }} onClick={() => history.push(`/user/${member._id}`)}>\r\n                        <div className=\"board-member-tooltip\">\r\n                            <p>{member.fullName}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                }\r\n                else {\r\n                    return <h3 className=\"nav-user-profile flex justify-center align-center\">{member.fullName.charAt(0)}</h3>\r\n                }\r\n            })}\r\n            {!cardMemberMode && <button className=\"nav-user-profile invite flex align-center justify-center index-1\" onClick={() => props.onInvite()}><div className=\"plus-white flex align-center justify-center\"></div></button>}\r\n            <div className=\"flex align-center\">\r\n          {/* <h3 style={{marginLeft:\"15px\" , border:\"none\"}} className=\"nav-user-board-indicator\">{user.userName} | {board.title}</h3> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport userService from '../services/userService.js'\r\nimport socketService from '../services/socketService.js';\r\n\r\n\r\nexport class MemberPreview extends Component {\r\n\r\n    state = {\r\n        isUserModalOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.onCloseUserModal, false);\r\n        document.addEventListener(\"keydown\", this.onCloseUserModal, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.onCloseUserModal, false);\r\n        document.removeEventListener(\"keydown\", this.onCloseUserModal, false);\r\n    }\r\n\r\n    onCloseUserModal = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.setState({ isUserModalOpen: false });\r\n        }\r\n    }\r\n\r\n    onUserClick = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState(prevState => ({ isUserModalOpen: !prevState.isUserModalOpen }))\r\n    }\r\n\r\n    onUserLogOut = async (ev) => {\r\n        ev.stopPropagation()\r\n        const { history , user } = this.props\r\n        await userService.logout(user) \r\n        socketService.emit('user log-out-ui')\r\n        history.push('/')\r\n    }\r\n\r\n    render() {\r\n\r\n        const { user, history } = this.props\r\n        const { onUserClick, onUserLogOut } = this\r\n        const { isUserModalOpen } = this.state\r\n\r\n        return (\r\n            <div className=\"user-preview\" ref={node => this.node = node} onClick={onUserClick}>\r\n                {user.imgUrl ?\r\n                    <div className=\"board-member\" style={{\r\n                        backgroundImage: \"url(\" + `${user.imgUrl}` + \")\",\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat'\r\n                    }}>\r\n                    </div>\r\n                    :\r\n                    <h3 className=\"nav-user-profile flex justify-center align-center\">{user.fullName.charAt(0)}</h3>}\r\n\r\n                {<div className={`member-modal ${isUserModalOpen ? \"modal-open\" : \"\"}`}>\r\n                    <div onClick={() => history.push(`/user/${user._id}`)}> My details </div>\r\n                    <div onClick={(ev) => onUserLogOut(ev)}>Log Out</div>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport BoardList from '../cmps/BoardList';\r\nimport { NavMenuFilter } from '../cmps/NavMenuFilter'\r\n\r\nexport default class NavBarSearch extends React.Component {\r\n\r\n    state = {\r\n        users: null,\r\n        searchWord: \"\",\r\n        filterLists: [],\r\n        filterCards: [],\r\n        isSearchOpenModal: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.onCloseSearchModal, false);\r\n        document.addEventListener(\"keydown\", this.onCloseSearchModal, false);\r\n        this.loadUsers()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.onCloseSearchModal, false);\r\n        document.removeEventListener(\"keydown\", this.onCloseSearchModal, false);\r\n    }\r\n\r\n    loadUsers = () => {\r\n        //TODO load users light array from the server\r\n    }\r\n\r\n    openSearchModal() {\r\n        this.setState({ isSearchOpenModal: true });\r\n    }\r\n\r\n    onCloseSearchModal = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.setState({ isSearchOpenModal: false });\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ searchWord: value }, () => this.onSearch())\r\n    }\r\n\r\n    onSearch = () => {\r\n        const { searchWord } = this.state\r\n        const { currBoard, boards } = this.props\r\n\r\n        if (!searchWord.length) {\r\n            this.setState({ filterBoards: [], filterLists: [], filterCards: [], filterUsers: [] })\r\n            return;\r\n        }\r\n        \r\n        if (currBoard) {\r\n            let filterLists = []\r\n            currBoard.cardLists.forEach(cardList => {\r\n                if (cardList.title.toLowerCase().includes(searchWord.toLowerCase())) {\r\n                    cardList.boardId = currBoard._id;\r\n                    cardList.boardTitle = currBoard.title;\r\n                    filterLists.push(cardList)\r\n                }\r\n            });\r\n\r\n            let filterCards = []\r\n            currBoard.cardLists.forEach(cardList => {\r\n                cardList.cards.forEach(card => {\r\n                    if (card.text.toLowerCase().includes(searchWord.toLowerCase())) {\r\n                        card.boardId = currBoard._id;\r\n                        card.boardTitle = currBoard.title;\r\n                        card.cardListId = cardList.id;\r\n                        card.cardListTitle = cardList.title;\r\n                        filterCards.push(card)\r\n                    }\r\n                })\r\n            });\r\n            this.setState({ filterLists, filterCards })\r\n        }else if (boards) {\r\n            let filterBoards = boards.filter(board => board.title.toLowerCase().includes(searchWord.toLowerCase()));\r\n            if (!filterBoards.length) filterBoards = boards;\r\n            this.setState({ filterBoards })\r\n            return\r\n        }\r\n    }\r\n\r\n    onBoardClick = (boardId) => {\r\n        this.props.history.push(`/board/${boardId}`);\r\n        this.setState({ isSearchOpenModal: false });\r\n    }\r\n\r\n    onCardClicked = (cardId) => {\r\n        this.props.history.push(`/board/${this.props.currBoard._id}/${cardId}`);\r\n        this.setState({ isSearchOpenModal: false });\r\n    }\r\n\r\n    render() {\r\n        const { searchWord, filterLists, filterCards, filterBoards, isSearchOpenModal } = this.state\r\n        const { currBoard, history } = this.props\r\n        const { onCardClicked } = this\r\n        let starredBoards\r\n        if (filterBoards) starredBoards = filterBoards.filter(board => board.isStarred)\r\n\r\n\r\n        return (\r\n            <div ref={node => this.node = node} className=\" nav-search-result-container flex column\">\r\n\r\n                <input onClick={() => this.openSearchModal()} autoComplete=\"off\" onSubmit={() => this.onSearch} className=\"card-search\" type=\"text\" value={searchWord} name=\"keyword\" placeholder={currBoard? \"Search\" : \"Search\"} onChange={this.handleChange} />\r\n                <div className={`nav-search-result ${(isSearchOpenModal) ? \"open-modal\" : \"\"} flex column`}>\r\n                    {filterBoards && Boolean(filterBoards.length) &&\r\n\r\n                        <div>\r\n                            <h3 className=\"result-header\">Board results</h3>\r\n                            <div className=\"search-results\">\r\n                                {filterBoards.map(board =>\r\n                                    <div key={board._id} className=\"result-preview\" onClick={() => this.onBoardClick(board._id)}>\r\n                                        <div className=\"board-btn\"></div>\r\n                                        <div className=\"header\">{board.title}</div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>}\r\n                    {!Boolean(filterLists.length) && !Boolean(filterCards.length) && filterBoards && !Boolean(filterBoards.length) &&  \r\n                        <div className='empty-search-massage'>\r\n                            <div className=\"search\"></div>\r\n                            <div>Search</div>\r\n                        </div>}\r\n\r\n                    {\r\n                        /* filterLists && Boolean(filterLists.length) &&\r\n                        <>\r\n                            <div className=\"result-header\" >List results</div>\r\n                            <div className=\"search-results\">\r\n                                {filterLists.map(list => (\r\n                                    <div className=\"result-preview\">\r\n                                        <div className=\"list-pic\"></div>\r\n                                        <div className=\"header\">{list.title}</div>\r\n                                        <div className=\"conjunction\">(list)</div>\r\n                                        <div className=\"conjunction\">from</div>\r\n                                        <div className=\"header\">{list.boardTitle}</div>\r\n                                        <div className=\"conjunction\">(board)</div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </> */\r\n                    }\r\n                    {filterCards && Boolean(filterCards.length) &&\r\n                        <>\r\n                            <div className=\"result-header\">{/* Card results */}</div>\r\n                            <div className=\"search-results\">\r\n                                {filterCards.map(card => (\r\n                                    <div className=\"result-preview\" onClick={() => onCardClicked(card.id) }>\r\n                                        <div className=\"card result-icon\" ></div>\r\n                                        <div className=\"text-result\">\r\n                                            <div className=\"header\">{card.text}</div>\r\n                                            {/* <div className=\"conjunction\">(card)</div> */}\r\n                                            <div className=\"conjunction\">in</div>\r\n                                            <div className=\"conjunction\">{card.cardListTitle}</div>\r\n                                            {/* <div className=\"conjunction\">(list)</div> */}\r\n                                            {/* <div className=\"conjunction\">from</div>\r\n                                            <div className=\"header\">{card.boardTitle}</div>\r\n                                            <div className=\"conjunction\">(board)</div> */}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </>}\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { loadUsers , getUser } from '../store/actions/userActions'\r\nimport { connect } from 'react-redux'\r\nimport socketService from '../services/socketService'\r\n\r\nclass InviteMemberModal extends Component {\r\n\r\n    state = {\r\n        filteredUsers: null,\r\n        isAlreadyInvitesShown: false,\r\n        keyword: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadUsers()\r\n        document.addEventListener(\"mousedown\", this.onCloseInviteMenu, false);\r\n        document.addEventListener(\"keydown\", this.onCloseInviteMenu, false);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.onCloseInviteMenu, false);\r\n        document.removeEventListener(\"keydown\", this.onCloseInviteMenu, false);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.users !== this.props.users) {\r\n            \r\n            setTimeout(()=>{this.filterUsers(this.state.keyword)},1500)\r\n    }\r\n}\r\n\r\n    onCloseInviteMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            // this.setState({ isMenuOpen: false })\r\n            this.props.onCloseInviteMenu();\r\n        }\r\n    }\r\n\r\n    inputHandler = ({ target }) => {\r\n        this.setState({keyword: target.value})\r\n        if (!target.value) {\r\n            this.setState({ filteredUsers: null })\r\n            return\r\n        }\r\n\r\n        let keyWord = target.value.toLowerCase()\r\n        const { users } = this.props\r\n        let filteredUsers = users.filter(user => user.userName.includes(keyWord.toLowerCase()))\r\n        this.setState({ filteredUsers })\r\n    }\r\n\r\n    filterUsers = (keyword) => {\r\n        // this.props.loadUsers()\r\n        const { users } = this.props\r\n       keyword = keyword.toLowerCase()\r\n       let filteredUsers = users.filter(user => user.userName.includes(keyword.toLowerCase())) \r\n       this.setState({ filteredUsers })   \r\n    }\r\n\r\n    onInvite = (userId) => {\r\n        let userIdxInBoard = this.props.activeBoard.members.findIndex(user => user._id === userId)\r\n        if (userIdxInBoard !== -1) {\r\n            this.setState({ isAlreadyInvitesShown: true })\r\n            setTimeout(() => {\r\n                this.setState({ isAlreadyInvitesShown: false })\r\n            }, 1500)\r\n            return\r\n        }\r\n        let data = {\r\n            invitedUserId: userId,\r\n            sender: this.props.loggedUser.userName,\r\n            collabBoardId: this.props.activeBoard._id,\r\n            createdAt: Date.now()\r\n        }\r\n        socketService.emit('user invite', data);\r\n    }\r\n\r\n    render() {\r\n        const { filteredUsers, isAlreadyInvitesShown } = this.state\r\n        const { isInviteModalOpen } = this.props\r\n\r\n        return (\r\n            <div ref={node => this.node = node} className={`invite-members-modal ${(isInviteModalOpen) ? 'modal-open' : ''} flex column align-center`}>\r\n                <div className=\"invite-header\"><h3>Invite to collaborate</h3></div>\r\n                {isAlreadyInvitesShown && <p>User already a member!</p>}\r\n                <input type=\"text\" placeholder=\"Enter userName to invite\" onKeyUp={this.inputHandler} />\r\n                {filteredUsers && <div className=\"invite-users-list flex column align-center\">\r\n                    {filteredUsers.map((user, idx) => {\r\n                        return <div key={idx} className=\"user-to-invite flex align-center \">\r\n                            <span className=\"nav-user-profile\" style={{\r\n                                backgroundImage: \"url(\" + `${user.imgUrl}` + \")\",\r\n                                backgroundPosition: 'center',\r\n                                backgroundSize: 'cover',\r\n                                backgroundRepeat: 'no-repeat'\r\n                            }}>\r\n                            </span>\r\n                            <div className=\"flex column\" style={{marginLeft:\"10px\"}}>\r\n                                <h4 style={{marginBottom:\"3px\"}}>{user.fullName}</h4>\r\n                                {user.isLogIn &&\r\n                                    <div className=\"user-status flex align-center\">\r\n                                        <h5 style={{color:\"green\"}}>Online</h5>\r\n                                        {/* <span className=\"user-online\"></span> */}\r\n                                    </div>}\r\n\r\n                                {!user.isLogIn &&\r\n                                    <div className=\"user-status flex align-center\">\r\n                                        <h5 style={{color:\"gray\"}}>Offline</h5>\r\n                                        {/* <span className=\"user-offline\"></span> */}\r\n                                    </div>}\r\n                            </div>\r\n                            <button className=\"user-invite-btn\" onClick={() => this.onInvite(user._id)}>Invite</button>\r\n\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.user.users,\r\n        loggedUser: state.user.loggedInUser,\r\n        activeBoard: state.boardApp.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadUsers,\r\n    getUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InviteMemberModal)","export default {\r\n    $clrChart1: '#3742fa',\r\n    $clrChart2: '#ff4757',\r\n    $clrChart3: '#1e90ff',\r\n    $clrChart4: '#ff6348',\r\n    $clrChart5: '#2ed573',\r\n    $clrChart6: '#ffa502',\r\n    $clrChart7: 'rgb(255, 124, 67)',\r\n    $clrChart8: 'rgb(255, 166, 0)',\r\n    $clrChart9: 'rgb(24, 170, 225)',\r\n    $clrChart10: 'rgb(238, 83, 141)',\r\n}","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport cssVar from '../styles/setup/variable.js'\r\n\r\n\r\n// let data = {\r\n//     labels: ['23/5', '24/5', '25/5', '26/5', '27/5', '28/5', '29/5'],\r\n//     datasets: [\r\n//         {\r\n//             label: 'Dor Ben Itzhak',\r\n//             backgroundColor: cssVar.$clrChart3,\r\n//             borderColor: cssVar.$clrChart3,\r\n//             borderWidth: 1,\r\n//             hoverBackgroundColor: cssVar.$clrChart3,\r\n//             hoverBorderColor: cssVar.$clrChart3,\r\n//             data: [1, 2, 3, 2, 1, 1, 3]\r\n//         },\r\n//         {\r\n//             label: 'Reem Alon',\r\n//             backgroundColor: cssVar.$clrChart6,\r\n//             borderColor: cssVar.$clrChart6,\r\n//             borderWidth: 1,\r\n//             hoverBackgroundColor: cssVar.$clrChart6,\r\n//             hoverBorderColor: cssVar.$clrChart6,\r\n//             data: [3, 2, 5, 1, 6, 5, 2]\r\n//         }\r\n//     ]\r\n// };\r\n\r\n\r\nexport default class ChartBar extends Component {\r\n\r\n    reducerJoinTaskByUser = () => {\r\n        const { currBoard } = this.props\r\n        if (!currBoard) return;\r\n\r\n        return currBoard.cardLists.reduce((acc, cardList) => {\r\n            cardList.cards.forEach(card => {\r\n                card.checkList.forEach(checkBox => {\r\n                    if (checkBox.isDone && checkBox.doneBy) {\r\n                        const doneAt = moment(checkBox.doneTime).format(\"MMM Do\")\r\n                        if (!acc[checkBox.doneBy.userName]) {\r\n                            acc[checkBox.doneBy.userName] = {};\r\n                        }\r\n                        if (!acc[checkBox.doneBy.userName][doneAt]) {\r\n                            acc[checkBox.doneBy.userName][doneAt] = [checkBox]\r\n                        }\r\n                        else {\r\n                            acc[checkBox.doneBy.userName][doneAt].push(checkBox);\r\n                        }\r\n                    }\r\n\r\n                })\r\n            })\r\n            return acc\r\n        }, {})\r\n    }\r\n\r\n    graphColors = () => {\r\n        return [cssVar.$clrChart1, cssVar.$clrChart2, cssVar.$clrChart3, cssVar.$clrChart4, cssVar.$clrChart5, cssVar.$clrChart6, cssVar.$clrChart7, cssVar.$clrChart8, cssVar.$clrChart9, cssVar.$clrChart10]\r\n\r\n    }\r\n\r\n    updateUsersDoneTaskData = () => {\r\n        let data = {};\r\n        const dateNow = Date.now();\r\n        data.labels = [];\r\n        data.datasets = [];\r\n        for (let step = 5; step > 0; step--) {\r\n            const day = 1000 * 60 * 60 * 24;\r\n            data.labels.push(moment(dateNow - (day * (step-1))).format(\"MMM Do\"))\r\n        }\r\n        let usersDoneCard = this.reducerJoinTaskByUser();\r\n        let colorPalate = this.graphColors();\r\n        for (const userId in usersDoneCard) {\r\n            const dataUserDoneTasks = data.labels.map(label => {\r\n                if (usersDoneCard[userId][label]){\r\n                    return usersDoneCard[userId][label].length\r\n                }else return 0;\r\n                    \r\n            })\r\n            const columnColor = colorPalate.splice(0,1)[0]\r\n            data.datasets.push({\r\n                label: userId,\r\n                backgroundColor: columnColor,\r\n                borderColor: columnColor,\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: columnColor,\r\n                hoverBorderColor: columnColor,\r\n                data: dataUserDoneTasks,\r\n            })\r\n        }\r\n        return data;\r\n    }\r\n\r\n\r\n    render() {\r\n        const data = this.updateUsersDoneTaskData();\r\n\r\n        return (\r\n                <div className=\"chart-bar\">\r\n                    <h2>Done tasks by user</h2>\r\n                    <Bar\r\n                        data={data}\r\n                        options={{  \r\n                            maintainAspectRatio: false,\r\n\r\n                        }}\r\n                    />\r\n                </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Pie } from 'react-chartjs-2';\r\nimport cssVar from '../styles/setup/variable.js'\r\n\r\n\r\nlet colorPalate = [cssVar.$clrChart1, cssVar.$clrChart2, cssVar.$clrChart3, cssVar.$clrChart4, cssVar.$clrChart5, cssVar.$clrChart6, cssVar.$clrChart7, cssVar.$clrChart8, cssVar.$clrChart9, cssVar.$clrChart10]\r\n\r\n\r\nexport default class ChartPay extends Component {\r\n\r\n\tupdateData = () => {\r\n\t\tconst { currBoard } = this.props;\r\n\t\tlet data = {\r\n\t\t\tlabels: [],\r\n\t\t\tdatasets: null,\r\n\t\t}\r\n\t\tdata.labels = currBoard.cardLists.map(cardList => cardList.title)\r\n\t\tconst cardLength = currBoard.cardLists.map(cardList => cardList.cards.length)\r\n\t\tdata.datasets = [{\r\n\t\t\tdata: cardLength,\r\n\t\t\tbackgroundColor: colorPalate,\r\n\t\t\thoverBackgroundColor: colorPalate,\r\n\t\t}]\r\n\t\treturn data\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"chart-pay\">\r\n\t\t\t\t<h2>Cards per list</h2>\r\n\t\t\t\t<Pie data={this.updateData()} /* options={{ animation:{animateRotat: true}, }} */ />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};","import React, { Component } from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\nimport cssVar from '../styles/setup/variable.js'\r\n\r\n\r\nconst data = {\r\n    labels: ['23/5', '24/5', '25/5', '26/5', '27/5', '28/5', '29/5'],\r\n    datasets: [\r\n        {\r\n            label: 'Todo',\r\n            fill: false,\r\n            lineTension: 0.5,\r\n            backgroundColor: cssVar.$clrChart9,\r\n            borderColor: cssVar.$clrChart9,\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: cssVar.$clrChart9,\r\n            pointBackgroundColor: cssVar.$clrChart9,\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: cssVar.$clrChart9,\r\n            pointHoverBorderColor: cssVar.$clrChart9,\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [3, 2, 5, 1, 6, 5, 2]\r\n        }, {\r\n            label: 'In progress',\r\n            fill: false,\r\n            lineTension: 0.5,\r\n            backgroundColor: cssVar.$clrChart10,\r\n            borderColor: cssVar.$clrChart10,\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: cssVar.$clrChart10,\r\n            pointBackgroundColor: cssVar.$clrChart10,\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: cssVar.$clrChart10,\r\n            pointHoverBorderColor: cssVar.$clrChart10,\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [3, 4, 1, 3, 4, 5, 6]\r\n        }\r\n    ]\r\n};\r\n\r\n\r\n\r\nexport default class ChartLine extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chart-line\">\r\n                <h2>Task amount to day</h2>\r\n                <Line data={data} />\r\n            </div>\r\n        );\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport ChartBar from '../cmps/ChartBar.jsx';\r\nimport ChartPay from '../cmps/ChartPay.jsx';\r\nimport ChartLine from '../cmps/ChartLine.jsx';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass ChartModal extends Component {\r\n    state = {\r\n        isCartModalOpen: false\r\n    }\r\n    \r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.closeStatisticModal, false);\r\n        document.addEventListener(\"keydown\", this.closeStatisticModal, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.closeStatisticModal, false);\r\n        document.removeEventListener(\"keydown\", this.closeStatisticModal, false);\r\n    }\r\n\r\n    closeStatisticModal = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.setState({ isCartModalOpen: false })\r\n        }\r\n    }\r\n\r\n    onChartClick = () => {\r\n        this.setState(prevState => ({ isCartModalOpen: !prevState.isCartModalOpen }))\r\n    }\r\n\r\n    render() {\r\n        const { isCartModalOpen } = this.state;\r\n        const { currBoard } = this.props\r\n\r\n\r\n        return (\r\n            <div className={`chart-container `}>\r\n                <div className=\"nav-chart-btn chart\" onClick={this.onChartClick}></div>\r\n                <div className={`screen  ${(isCartModalOpen) ? \"modal-open\" : \"\"} `}>\r\n                    <div ref={node => this.node = node} className=\"chart-modal flex wrap\">\r\n                        <ChartPay currBoard={currBoard} />\r\n                        <ChartLine currBoard={currBoard} />\r\n                        <ChartBar currBoard={currBoard} />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartModal)","\r\n\r\nexport default {\r\n    notification\r\n}\r\n\r\nfunction notification(){\r\n    var notifiPing = new Audio('https://res.cloudinary.com/dt3cfrjpr/video/upload/v1590757355/messenger_d1vdx5.mp3');\r\n    notifiPing.volume = 0.15;\r\n    notifiPing.play();\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { CardCommentsList } from './CardCommentsList'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nimport socketService from '../services/socketService'\r\n\r\nlet typingInterval;\r\n\r\nclass CardComments extends Component {\r\n\r\n    state = {\r\n        userMsg: '',\r\n        isTypeActive: false,\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = this.props.card.id\r\n\r\n        socketService.on(`user-type-${id}`, (status) => {\r\n            this.setState({isTypeActive: status})\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const id = this.props.card.id\r\n        socketService.off(`user-type-${id}`)\r\n    }\r\n\r\n    onUserType = ({target}) => {\r\n        \r\n        const id = this.props.card.id\r\n        this.setState({userMsg: target.value})\r\n        clearInterval(typingInterval);\r\n        socketService.emit('user typing' , {id , status: true} )\r\n        typingInterval = setTimeout(()=>{\r\n            socketService.emit('user typing' , {id , status: false} ) \r\n        },550)\r\n\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const {card , board , user} = this.props\r\n        const { userMsg } = this.state\r\n        if(!userMsg) return\r\n\r\n        let data = {\r\n            \r\n            userName: user.userName,\r\n            txt: userMsg,\r\n            imgUrl: user.imgUrl,\r\n            createdAt: Date.now()\r\n            \r\n        }\r\n        card.comments.unshift(data)\r\n        this.props.saveBoard(board)\r\n            .then(() => socketService.emit('board updated', board._id));\r\n        this.setState({userMsg: ''})\r\n    }\r\n\r\n    deleteComment = (idx) => {\r\n        const { card, board } = this.props\r\n        card.comments.splice(idx,1)\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    render() {\r\n        const { currUser, card, board } = this.props\r\n        const {userMsg , isTypeActive} = this.state\r\n        if(!currUser) return ''\r\n        return (\r\n            <div className=\"card-comments\">\r\n                <div className=\"flex align-center\" style={{ marginBottom: \"15px\" }}>\r\n                    <span className=\"comment\" />\r\n                    <h4>Comments</h4>\r\n                </div>\r\n               <div className=\"card-add-comment flex align-center\" style={{ marginLeft: \"40px\", marginBottom: \"15px\" }}>\r\n               {currUser.imgUrl &&   <div className=\"self-profile-comment\" style={{\r\n                        backgroundImage: \"url(\" + `${currUser.imgUrl}` + \")\",\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat'\r\n                    }} >\r\n                    </div>}\r\n                    {!currUser.imgUrl && <h3 style={{marginLeft: \"0px\" , marginRight:\"15px\"}} className=\"card-user-profile flex justify-center align-center\">{currUser.fullName.charAt(0)}</h3>}\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <input className=\"user-text-input\" type=\"text\" placeholder={currUser.userName + \", whats on your mind?\"}\r\n                            onChange={this.onUserType} value={userMsg}  />\r\n                    </form>\r\n                    {isTypeActive && <span className=\"pulse\" />}\r\n                </div>\r\n                < CardCommentsList card={card} user={currUser} deleteComment={this.deleteComment} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currUser: state.user.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardComments)","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport NavMenu from '../cmps/NavMenu'\r\nimport NavUserNotificationMenu from './NavUserNotificationMenu'\r\nimport { connect } from 'react-redux'\r\nimport { setBoards, setBoard } from '../store/actions/boardActions.js'\r\nimport { getUser, update, loadUsers } from '../store/actions/userActions.js'\r\nimport { BoardMembers } from './BoardMembers'\r\nimport { MemberPreview } from './MemberPreview'\r\nimport NavBarSearch from './NavBarSearch'\r\nimport InviteMemberModal from './InviteMemberModal'\r\nimport socketService from '../services/socketService'\r\nimport ChartModal from './ChartModal';\r\nimport moment from 'moment'\r\nimport soundService from '../services/soundService'\r\n\r\nclass NavBar extends React.Component {\r\n\r\n    state = {\r\n        isMenuActive: false,\r\n        isInviteModalOpen: null,\r\n        isNotificationModalOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.onCloseMenu, false);\r\n        document.addEventListener(\"keydown\", this.onCloseMenu, false);\r\n\r\n        window.onbeforeunload = this.closingCode\r\n        socketService.setup()\r\n        socketService.on(`newuserconnect`, () => {\r\n            this.props.loadUsers()\r\n        })\r\n        socketService.on(`user-disconnected`, () => {\r\n            \r\n            this.props.loadUsers()\r\n        })\r\n        socketService.on(`user-disconnected-ui`, () => {\r\n            this.props.loadUsers()\r\n        })\r\n        this.props.getUser()\r\n            .then(() => {\r\n                this.socketSubscribers()\r\n                if (!this.props.loggedUser) this.props.history.push('/')\r\n                else this.props.setBoards()\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.loggedUser !== this.props.loggedUser) {\r\n            this.socketSubscribers()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.onCloseMenu, false);\r\n        document.removeEventListener(\"keydown\", this.onCloseMenu, false);\r\n    }\r\n\r\n\r\n    closingCode = async () => {\r\n        const {loggedUser} = this.props\r\n        const userToUpdate = {...loggedUser}\r\n        userToUpdate.isLogIn = false\r\n        await this.props.update(userToUpdate)\r\n        socketService.emit('user logged-out')\r\n        return null\r\n    }\r\n\r\n    socketSubscribers = () => {\r\n        socketService.off(`user-invite-${this.props.loggedUser._id}`)\r\n        socketService.off(`user-card-assign-${this.props.loggedUser._id}`)\r\n\r\n        if (this.props.loggedUser) {\r\n            socketService.on(`user-invite-${this.props.loggedUser._id}`, (invData) => {\r\n                this.notifiBoardCollab(invData);\r\n            })\r\n            socketService.on(`user-card-assign-${this.props.loggedUser._id}`, (assignData) => {\r\n                this.notifiCardAssign(assignData);\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    notifiBoardCollab = (invData) => {\r\n        this.props.loggedUser.notifications.unshift({\r\n            data: `Exciting news! ${invData.sender} invited you to collaborate in a board.`,\r\n            createdAt: moment(invData.createdAt).fromNow(),\r\n            collabBoardId: invData.collabBoardId,\r\n            isRead: false,\r\n            type: 'board-collab'\r\n        })\r\n        this.props.update(this.props.loggedUser)\r\n        soundService.notification()\r\n    }\r\n\r\n    notifiCardAssign = (assignData) => {\r\n        this.props.loggedUser.notifications.unshift({\r\n            data: `Congratz! you have new card assign by ${assignData.assingedBy}.`,\r\n            type: 'card-assign',\r\n            isRead: false,\r\n            cardId: assignData.cardId,\r\n            boardId: assignData.boardId\r\n        })\r\n        this.props.update(this.props.loggedUser)\r\n        soundService.notification()\r\n    }\r\n\r\n    onMenuClick = () => {\r\n        this.setState(prevState => ({ isMenuActive: !prevState.isMenuActive }))\r\n    }\r\n\r\n    onCloseMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node?.contains(ev.target) || ev.keyCode === 27) {\r\n            this.setState({ isMenuActive: false })\r\n        }\r\n    }\r\n\r\n    onCloseInviteMenu = () => {\r\n        this.setState({ isInviteModalOpen: false })\r\n    }\r\n\r\n    onCloseNotificationMenu = () => {\r\n        this.setState({ isNotificationModalOpen: false })\r\n    }\r\n\r\n    onViewCardNotification = (idx) => {\r\n        const {loggedUser} = this.props\r\n        const userToUpdate = { ...loggedUser }\r\n        userToUpdate.notifications = userToUpdate.notifications.filter((notifi,_idx) => _idx !== idx )\r\n        this.props.update(userToUpdate)\r\n        this.onCloseNotificationMenu()\r\n    }\r\n\r\n    onUserNotificationClick = () => {\r\n        this.setState(prevState => ({ isNotificationModalOpen: !prevState.isNotificationModalOpen }))\r\n    }\r\n\r\n    onInviteMember = () => {\r\n        this.setState(prevState => ({ isInviteModalOpen: !prevState.isInviteModalOpen }))\r\n    }\r\n\r\n    onPageChange = () => {\r\n        this.setState({ isMenuActive: false })\r\n    }\r\n\r\n    render() {\r\n        const { isMenuActive, isNotificationModalOpen, isInviteModalOpen } = this.state\r\n        const { boards, activeBoard, history, loggedUser } = this.props\r\n        const { onCloseInviteMenu, onInviteMember, onCloseNotificationMenu, onPageChange } = this\r\n        let notifiToShow;\r\n        if (loggedUser) {\r\n            notifiToShow = loggedUser.notifications.filter(notifi => !notifi.isRead)\r\n        }\r\n\r\n        if (!loggedUser) return ''\r\n        return (\r\n            <nav className=\"nav-bar flex align-center space-between\" >\r\n                {!activeBoard && <div className=\"img-wrapper\" onClick={() => this.props.history.push('/board')}>\r\n                    <img className=\"logo\" width='60px' alt=\"\" />\r\n                </div>}\r\n\r\n                <div className=\"nav-left-section flex align-center\">\r\n                    {activeBoard &&\r\n                        <div className=\"board-button flex align-center justiry-center space-between cursor\" onClick={this.onMenuClick}>\r\n                            <div style={{ marginRight: \"5px\" }} className=\"board-btn\"></div>\r\n                            <div className=\"board-txt\">Boards</div>\r\n                        </div>}\r\n\r\n                    <div className={`mobile-menu ${(isMenuActive) ? 'modal-open' : \"\"}`} ref={node => this.node = node}>\r\n                        {<NavMenu onPageChange={onPageChange} history={history} isMenuActive={isMenuActive} boards={boards} currBoard={activeBoard} onCloseMenu={this.onCloseMenu} />}\r\n                        {activeBoard && <BoardMembers user={this.props.loggedUser} onInvite={onInviteMember} history={history} board={activeBoard} />}\r\n                    \r\n                        {activeBoard && <InviteMemberModal isInviteModalOpen={isInviteModalOpen} onCloseInviteMenu={onCloseInviteMenu} />}\r\n                    </div>\r\n                    {< NavBarSearch onPageChange={onPageChange} history={history} boards={boards}  currBoard={activeBoard} history={history} />}\r\n                </div>\r\n                <div className=\"nav-right-section flex align-center\">\r\n                    {activeBoard && <ChartModal />}\r\n                    <div>\r\n                        <div /* style={{ backgroundColor: `${notifiToShow.length ? \"rgb(252, 115, 126)\" : \"\"} ` }} */ className=\"nav-notification-btn\" onClick={this.onUserNotificationClick}></div>\r\n                            {Boolean(notifiToShow.length) && <div className=\"notification-indicator\"></div>}\r\n                    </div>\r\n                    {<NavUserNotificationMenu onCloseNotificationMenu={onCloseNotificationMenu} onViewCardNotification={(idx)=>this.onViewCardNotification(idx)} isNotificationModalOpen={isNotificationModalOpen} history={history} user={loggedUser} />}\r\n                    <MemberPreview user={loggedUser} history={history} />\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedUser: state.user.loggedInUser,\r\n        boards: state.boardApp.boards,\r\n        activeBoard: state.boardApp.currBoard,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setBoards,\r\n    setBoard,\r\n    getUser,\r\n    update,\r\n    loadUsers\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavBar))\r\n","import React from 'react';\r\nimport { update, /* getUserById */ } from '../store/actions/userActions.js'\r\nimport { connect } from 'react-redux';\r\nimport userService from '../services/userService.js'\r\n\r\nclass UserDetails extends React.Component {\r\n\r\n    state = {\r\n        user: null\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user;\r\n        const id = this.props.match.params.userId;\r\n        userService.getById(id)\r\n            .then(res => {\r\n                user = res\r\n                if (!user) this.props.history.push('/')\r\n                else {\r\n                    this.setState({ user })\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { user } = this.state;\r\n        if (!user) return <h3>Loading...</h3>\r\n\r\n        return (<div className=\"user-profile-container flex column\">\r\n            <h2>{user.fullName}'s Profile</h2>\r\n            <div></div>\r\n            <img className=\"user-img\" src={user.imgUrl} />\r\n            <p>User Name: {user.userName}</p>\r\n            <p>About:{user.about}</p>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // loggedUser: state.user.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    // getUserById,\r\n    update\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDetails)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport BoardList from '../cmps/BoardList.jsx';\r\nimport { setBoards, saveBoard, clearCurrBoard } from '../store/actions/boardActions.js'\r\nimport { setUser, getUser, update } from '../store/actions/userActions'\r\n\r\nclass DashBoard extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.setBoards()\r\n        this.props.getUser()\r\n    }\r\n\r\n\r\n    onBoardClicked = (id) => {\r\n        this.props.history.push(`/board/${id}`)\r\n    }\r\n\r\n    render() {\r\n        const { boards, saveBoard, clearCurrBoard } = this.props;\r\n        let filteredBoards = boards.filter(board => board.isStarred);\r\n\r\n\r\n        return (\r\n            <div className=\"dashboard\">\r\n                {Boolean(filteredBoards.length) && <section className=\"boards-main-container\">\r\n                    <h3 className=\"starred-title\">Starred</h3>\r\n                    <div className=\"boards-container flex\">\r\n                        <BoardList boards={filteredBoards} onBoardClicked={this.onBoardClicked} saveBoard={saveBoard} clearCurrBoard={clearCurrBoard} editable={true} />\r\n                    </div>\r\n                </section>}\r\n\r\n                <section className=\"boards-main-container\">\r\n                    <h3 className=\"all-board-title\">All Boards</h3>\r\n                    <div className=\"boards-container flex\">\r\n                        <BoardList boards={boards} onBoardClicked={this.onBoardClicked} saveBoard={saveBoard} clearCurrBoard={clearCurrBoard} addBoardOption={true} editable={true} />\r\n                    </div>\r\n                </section>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        boards: state.boardApp.boards,\r\n        loggedUser: state.user.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setBoards,\r\n    saveBoard,\r\n    clearCurrBoard,\r\n    setUser,\r\n    getUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashBoard)","import React from 'react'\r\n\r\nexport function CardActions(props) {\r\n    return (\r\n        <div className=\"card-details-actions flex column align-center\">\r\n\r\n            <h4>Quick actions</h4>\r\n\r\n            {/* <span className=\"card-action-wrapper flex align-center\" onClick={props.onMembers}>\r\n                <span className=\"members \" > </span>\r\n                <h5 className=\"action-title \">Members</h5>\r\n            </span> */}\r\n\r\n            <span className=\"card-action-wrapper flex align-center space-between\" onClick={props.onLabels}>\r\n                <h5 className=\"action-title \">Lables</h5>\r\n                <span className=\"action-label\" > </span>\r\n            </span>\r\n\r\n            <span className=\"card-action-wrapper flex align-center space-between\" onClick={props.onImages} >\r\n                <h5 className=\"action-title \">Images</h5>\r\n                <span className=\"action-image\" > </span>\r\n            </span>\r\n\r\n            <span className=\"card-action-wrapper flex align-center space-between\" onClick={props.onTodoAction}>\r\n                <h5 className=\"action-title \">New todo item</h5>\r\n                <span className=\"action-todos \" > </span>\r\n            </span>\r\n\r\n            <span className=\"card-action-wrapper flex align-center space-between\" onClick={() => props.openDatePicker()}>\r\n                <h5 className=\"action-title \">Set due-Date</h5>\r\n                <span className=\"action-calendar \" > </span>\r\n            </span>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nexport function CardCommentsList(props) {\r\n    const { card, user } = props\r\n    return (\r\n        <div className=\"card-msgs-container\">\r\n            {card.comments.map((comment, idx) => {\r\n                return <div key={idx} className=\"card-comment-wrapper flex align-start\" style={{ marginLeft: \"44px\", width: \"370px\" }}>\r\n                    {user.imgUrl && <div className=\"user-profile-comment\" style={{\r\n                        backgroundImage: \"url(\" + `${comment.imgUrl}` + \")\",\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat',\r\n                        minWidth:\"30px\"\r\n                    }} >\r\n                    </div>}\r\n                    {!user.imgUrl && <h3 style={{ marginLeft: \"0px\", marginRight: \"15px\", width: \"30px\", height: \"30px\" }} className=\"card-user-profile flex justify-center align-center\">{user.fullName.charAt(0)}</h3>}\r\n                    <div style={{width:\"100%\" , marginBottom: \"10px\"}} className=\"flex column align-start\">\r\n                        <p className=\"card-msg-txt\">{comment.txt} </p>\r\n                        <div className=\"flex align-center\">\r\n                            <p className=\"card-msg-time\">{moment(comment.createdAt).fromNow()} </p>\r\n                            <button className=\"card-msg-delete\" onClick={() => props.deleteComment(idx)}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nclass CardDescription extends Component {\r\n\r\n    state = {\r\n        isEditMode: false,\r\n        description: '',\r\n        dynamicClass: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { card, board } = this.props\r\n        this.setState({ description: card.description })\r\n    }\r\n\r\n    onDescClicked = () => {\r\n        this.setState({ isEditMode: true })\r\n    }\r\n\r\n    onTextAreaLeave = () => {\r\n        const { card, board } = this.props\r\n        this.setState({ isEditMode: false, dynamicClass: '' }, () => {\r\n            card.description = this.state.description\r\n            this.props.saveBoard(board)\r\n        })\r\n    }\r\n\r\n    onTextFocus = () => {\r\n        this.setState({ dynamicClass: 'text-area' })\r\n    }\r\n\r\n    onDescEdit = ({ target }) => {\r\n\r\n        this.setState({ description: target.value })\r\n\r\n    }\r\n\r\n    moveCaretAtEnd(ev) {\r\n        var temp_value = ev.target.value\r\n        ev.target.value = ''\r\n        ev.target.value = temp_value\r\n    }\r\n\r\n\r\n    render() {\r\n        const { card } = this.props\r\n        const { isEditMode, description, dynamicClass } = this.state\r\n        return (\r\n            <div className=\"card-details-description\">\r\n                <div className=\"flex \">\r\n                    <span className=\"text\"></span>\r\n                    <h4>Description</h4>\r\n                </div>\r\n                {!isEditMode && <p onClick={this.onDescClicked}>{card.description || 'Add some details about this card'}</p>}\r\n                {isEditMode && <TextareaAutosize className={dynamicClass} onFocus={this.onTextFocus} onBlur={this.onTextAreaLeave} type=\"text\" autoFocus={true}\r\n                    value={description} placeholder=\"Add more details about this card...\" onChange={this.onDescEdit}\r\n                    onFocus={this.moveCaretAtEnd} spellCheck={false} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CardDescription)","import React from 'react'\r\nexport function CardMembersList(props) {\r\n    const { board, card, opacity  } = props\r\n    return (\r\n        <div className={`add-card-member-modal ${opacity} flex align-center`}>\r\n            <div className=\"nav-board-members flex align-center\">\r\n\r\n                {board.members.map((member, idx) => {\r\n                    let dynamicClass = ''\r\n                    if (idx === 0) dynamicClass = 'first-member'\r\n                    let letUserIdx = card.members.findIndex(user => user._id === member._id)\r\n                    if (member.imgUrl) {\r\n                        return <div key={idx} className=\"flex column align-center\">\r\n                            {letUserIdx !== -1 && <div style={{marginLeft: `${!idx? '' : '-2px'}`}} className=\"member-overlay\"> </div>}\r\n                            <div  className={dynamicClass + \" \" + \"board-member\"} style={{\r\n                                backgroundImage: \"url(\" + `${member.imgUrl}` + \")\",\r\n                                backgroundPosition: 'center',\r\n                                backgroundSize: 'cover',\r\n                                backgroundRepeat: 'no-repeat'\r\n                            }} onClick={() => props.addMember(member)}>\r\n                                <div className=\"board-member-tooltip\">\r\n                                    <p>{member.fullName}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    else {\r\n                        return <h3 onClick={() => props.addMember(member)} className=\"card-user-profile flex justify-center align-center\">{member.fullName.charAt(0)}</h3>\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard, setBoard } from '../store/actions/boardActions'\r\nimport { CardMembersList } from './CardMembersList'\r\nimport socketService from '../services/socketService'\r\n\r\nclass CardMembers extends Component {\r\n\r\n    state = {\r\n        isAddMemberActive: false,\r\n        isMouseHoverUser: false\r\n    }\r\n\r\n\r\n    onAddMember = () => {\r\n        this.setState(prevState => ({ isAddMemberActive: !prevState.isAddMemberActive }))\r\n    }\r\n\r\n\r\n    addMember = (member) => {\r\n        \r\n        const { card, board , user } = this.props\r\n        let idx = card.members.findIndex(user => user._id === member._id)\r\n        if (idx !== -1) return\r\n\r\n        card.members.push(member)\r\n        this.props.saveBoard(board)\r\n        this.props.setBoard(board._id)\r\n        let data = {\r\n            assignedUserId: member._id,\r\n            assingedBy: user.userName,\r\n            cardId: card.id,\r\n            boardId: board._id\r\n        }\r\n        socketService.emit('user card assign', data);\r\n    }\r\n\r\n    onMouseEnter = () => {\r\n        this.setState({ isMouseHoverUser: true })\r\n    }\r\n\r\n    onMouseLeave = () => {\r\n        this.setState({ isMouseHoverUser: false })\r\n    }\r\n\r\n    onRemoveCardUser = (idx, ev) => {\r\n        ev.stopPropagation()\r\n        const { card, board } = this.props\r\n        card.members.splice(idx, 1)\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    render() {\r\n        const { card, history, board , showModal} = this.props\r\n        const { isAddMemberActive, isMouseHoverUser } = this.state\r\n        \r\n        return (\r\n            <div style={{ marginBottom: \"30px\", marginLeft: \"42px\" }} className=\"flex column\">\r\n                <h4 className=\"card-members-header\">Card members</h4>\r\n                <div className=\"card-members flex align-center\">\r\n                    {<CardMembersList opacity={(isAddMemberActive || showModal) ? 'opacity-one' : ''} card={card} board={board} history={history} addMember={this.addMember} />}\r\n                    <button className={`card-member-invite '}`} onClick={this.onAddMember}\r\n                    // ${!isAddMemberActive && 'margin-right-26\r\n                        style={{ backgroundColor: `${isAddMemberActive ? \"rgba(110, 253, 141, 0.432)\" : \"rgba(142, 176, 248, 0.267)\"}` }}>\r\n                        {isAddMemberActive ? 'Done' : '+Add'}</button>\r\n                    {card.members.map((member, idx) => {\r\n                        if (member.imgUrl) {\r\n                            return <div key={idx} className=\"profile-tooltip-wraper\" >\r\n                                <div className=\"card-member\" style={{\r\n                                    backgroundImage: \"url(\" + `${member.imgUrl}` + \")\",\r\n                                    backgroundPosition: 'center',\r\n                                    backgroundSize: 'cover',\r\n                                    backgroundRepeat: 'no-repeat'\r\n                                }} onClick={() => history.push(`/user/${member._id}`)} onMouseEnter={this.onMouseEnter}\r\n                                    onMouseLeave={this.onMouseLeave}>\r\n\r\n                                    {isMouseHoverUser && <button onClick={(ev) => this.onRemoveCardUser(idx, ev)} className=\"card-member-remove\"></button>}\r\n                                </div>\r\n                                <div className=\"card-member-tooltip\">\r\n                                    <p>{member.fullName}</p>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        else {\r\n                            return <><h3 className=\"card-user-profile flex justify-center align-center\"onMouseEnter={this.onMouseEnter}\r\n                            onMouseLeave={this.onMouseLeave}> {member.fullName.charAt(0)}</h3>\r\n                            {isMouseHoverUser && <button onClick={(ev) => this.onRemoveCardUser(idx, ev)} className=\"card-member-remove\"></button>}\r\n                                <div className=\"card-member-tooltip\">\r\n                                    <p>{member.fullName}</p>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n    setBoard\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CardMembers)","import React, { Component } from 'react'\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nexport default class CardCalendar extends Component {\r\n\r\n    state = {\r\n        date: new Date(),\r\n        timeStamp: ''\r\n    }\r\n\r\n    onChange = date => this.setState({ date }, this.formatDate)\r\n\r\n    formatDate = () => {\r\n        const { date } = this.state\r\n        let timeStamp = date.getTime()\r\n        this.setState({ timeStamp })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { timeStamp } = this.state\r\n        const { isShown } = this.props\r\n        return (\r\n            <div className={`card-calendar-container ${isShown? 'calendar-fade' : ''}`}>\r\n                <Calendar\r\n                    onChange={this.onChange}\r\n                    value={this.state.date}\r\n                    minDate={new Date()}\r\n                />\r\n                {timeStamp && <div className=\"flex justify-center\" style={{backgroundColor:\"rgba(0, 0, 0, 0.253)\"}}>\r\n                    {/* <h4>Date picked: {formattedDate}</h4> */}\r\n                    <button className=\"date-confirm\" onClick={() => this.props.onDatePicked(timeStamp)}>Confirm</button>\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nclass DueDate extends React.Component {\r\n\r\n    state = {\r\n        isComplete: false,\r\n        diffDays: null,\r\n        timeStamp: null\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getDiffDays()\r\n    }\r\n    \r\n    componentDidUpdate(){\r\n        const { card } = this.props\r\n        if(this.state.timeStamp !== card.dueDate){\r\n            this.getDiffDays()\r\n        } \r\n    }\r\n\r\n    getDiffDays(){\r\n        const { card } = this.props\r\n        let diffDays =  Math.ceil((card.dueDate - Date.now()) / (1000 * 60 * 60 * 24))\r\n        this.setState({diffDays , timeStamp: card.dueDate})\r\n    }\r\n\r\n    onComplete = () => {\r\n        const { board } = this.props\r\n        this.setState(prevState => ({ isComplete: !prevState.isComplete }), () => console.log(this.state.isComplete))\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    render() {\r\n        const { card } = this.props\r\n        const { isComplete , diffDays } = this.state\r\n\r\n        return (\r\n            <div className=\"card-due-date-container\">\r\n                <div className=\"flex \">\r\n                    <span className=\"due-date\"></span>\r\n                    <h4>Due Date</h4>\r\n                </div>\r\n                <div style={{ marginLeft: \"42.5px\", marginTop: \"18px\" }} className=\"flex align-center\">\r\n                    <span className={isComplete ? 'due-date-checkbox-complete' : 'due-date-checkbox'} onClick={this.onComplete}> </span>\r\n                    <p>{moment(card.dueDate).format(\"MMM Do\")}</p>\r\n                    {isComplete && <p className=\"due-date-complete flex align-center\">Complete</p>}\r\n                    {!isComplete && <p className=\"flex align-center\"\r\n                    style={{ backgroundColor: `${diffDays >= 4 ? '#F9A602' : '#EC6B59'}` , marginLeft: \"5px\" , fontWeight: \"600\" , color:\"white\"}} >\r\n                        <span className=\"dueDate\" />{diffDays} Days Left</p>}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(DueDate)\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function ImgModal(props) {\r\n    const {url} = props\r\n    window.scrollTo({\r\n        top: 100,\r\n        left: 100,\r\n        behavior: 'smooth'\r\n      });\r\n      \r\n    return (\r\n        <div className=\"img-screen flex align-center justify-center\">\r\n            <img src={url} width=\"100%\" />\r\n            <span className=\"img-modal-close-btn\" onClick={()=> props.onCloseImgModal()}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { uploadImg } from '../services/cloudinaryService'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nimport ImgModal from './ImgModal'\r\n\r\nclass CardAttachments extends Component {\r\n\r\n    state = {\r\n        isLoading: false,\r\n        activeImg: null\r\n    }\r\n\r\n    onUpload = (ev) => {\r\n        const { board, card } = this.props\r\n        this.setState({ isLoading: true })\r\n        let uploadedFiles = []\r\n        uploadImg(ev)\r\n            .then(cdyImgs => {\r\n                cdyImgs.forEach(file => {\r\n                    let data = {\r\n                        fileName: file.original_filename,\r\n                        format: file.format,\r\n                        url: file.url\r\n                    }\r\n                    uploadedFiles.push(data)\r\n                })\r\n                uploadedFiles.map(file => {\r\n                    card.attachments.unshift(file)\r\n                    this.props.saveBoard(board)\r\n                        .then(this.setState({ isLoading: false }))\r\n                })\r\n\r\n            })\r\n    }\r\n\r\n    onDelete = (idx) => {\r\n        const { card, board } = this.props\r\n        card.attachments.splice(idx, 1)\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    onImgClick = (imgUrl) => {\r\n        this.setState({ activeImg: imgUrl })\r\n    }\r\n\r\n    onCloseImgModal = () => {\r\n        this.setState({ activeImg: null })\r\n    }\r\n\r\n    render() {\r\n        const { card, loggedUser } = this.props // take from props\r\n        const { isLoading, activeImg } = this.state\r\n        const attachments = card.attachments\r\n        return (\r\n            <>\r\n                <div className=\"card-details-attachments\">\r\n                    <div className=\"flex \">\r\n                        <span className=\"photo\"></span>\r\n                        <h4 className=\"attachments-header\">Images</h4>\r\n                    </div>\r\n                    <label style={{ marginLeft: \"42px\" }}> Add\r\n                    <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={this.onUpload} hidden multiple />\r\n                    </label>\r\n                    <div style={{ marginTop: \"15px\", marginLeft: \"42px\" }} className=\"attachments-files-container flex align-center space-between\">\r\n                        {attachments && attachments.map((file, idx) => {\r\n                            return <div key={idx} style={{ marginBottom: \"15px\" }} className=\"flex column\" >\r\n                                {file.url && <img src={file.url} width=\"150\" onClick={() => this.onImgClick(file.url)} />}\r\n                                <div className=\"attachment-file-name-wrapper flex align-center space-between\">\r\n                                    {/* <h4 className=\"attachment-file-name\">{file.fileName}.{file.format}</h4> */}\r\n                                    <p className=\"attachment-owner\">Upload by - {loggedUser.userName}</p>\r\n                                    <button className=\"attachment-delete-btn\" onClick={() => this.onDelete(idx)}>Delete</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                    {isLoading && <span style={{ marginLeft: \"55px\" }} className=\"loading\" />}\r\n                </div>\r\n                {activeImg && <ImgModal onCloseImgModal={this.onCloseImgModal} url={activeImg} />}\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activeBoard: state.boardApp.currBoard,\r\n        loggedUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardAttachments)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nimport moment from 'moment'\r\n\r\nclass CardTodoList extends Component {\r\n\r\n    state = {\r\n        isAddModalShown: false,\r\n        newTodoVal: '',\r\n        isListFiltered: false,\r\n        openTodos: null,\r\n        completedTodos: null,\r\n        barFillWidth: null,\r\n        toggleMode: 'Hide'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTodosStatus()\r\n\r\n    }\r\n\r\n    getBarWidth = () => {\r\n        const { card, board } = this.props\r\n        const { openTodos, completedTodos } = this.state\r\n        let totalTodos = openTodos.length + completedTodos.length;\r\n        let barFillWidth = (completedTodos.length / totalTodos) * 100;\r\n        this.setState({ barFillWidth },()=>{\r\n            card.todosBarWidth = barFillWidth\r\n            this.props.saveBoard(board)\r\n        })\r\n    }\r\n\r\n    getTodosStatus = () => {\r\n        const { card, board } = this.props\r\n        let openTodos = card.checkList.filter(item => !item.isDone)\r\n        let completedTodos = card.checkList.filter(item => item.isDone)\r\n        this.setState({ openTodos, completedTodos }, () => {\r\n            this.getBarWidth()\r\n        })\r\n\r\n    }\r\n\r\n    onComplete = (todo) => {\r\n        const { board , user } = this.props;\r\n        todo.isDone = !todo.isDone;\r\n        todo.doneBy = {id: user._id , userName: user.userName , fullName: user.fullName};\r\n        todo.doneTime = Date.now();\r\n\r\n        // this.props.saveBoard(board)\r\n        this.getTodosStatus()\r\n    }\r\n\r\n    onAddTodo = () => {\r\n        this.props.onAddTodo()\r\n    }\r\n\r\n    onHideComplete = () => {\r\n        let toggleMode = ''\r\n        if (this.state.toggleMode === 'Hide') toggleMode = 'Show'\r\n        else toggleMode = 'Hide'\r\n        this.setState(prevState => ({ isListFiltered: !prevState.isListFiltered, toggleMode }))\r\n    }\r\n\r\n    inputHandler = ({ target }) => {\r\n        this.setState({ newTodoVal: target.value })\r\n    }\r\n\r\n    onTodosScreen = () =>{\r\n        this.setState({isAddModalShown: false})\r\n        this.props.onAddTodo()\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        const { card, board, user } = this.props\r\n        let todo = {\r\n            content: this.state.newTodoVal,\r\n            creator: user.userName,\r\n            isDone: false,\r\n            createdAt: Date.now()\r\n        }\r\n        card.checkList.unshift(todo)\r\n        this.props.saveBoard(board)\r\n        this.setState({ isAddModalShown: false, newTodoVal: '' })\r\n        this.getTodosStatus()\r\n        this.props.onAddTodo()\r\n    }\r\n\r\n    render() {\r\n        const { card, board, user , onActionTodo } = this.props\r\n        const { barFillWidth, toggleMode } = this.state\r\n        const { newTodoVal, isAddModalShown, isListFiltered, openTodos, completedTodos } = this.state\r\n        let list = []\r\n        if (isListFiltered) list = card.checkList.filter(item => !item.isDone)\r\n        else list = card.checkList\r\n\r\n        if (!openTodos) return 'loading'\r\n        return (\r\n            <div className=\"card-details-description\">\r\n                <div className=\"flex align-center\" style={{ marginBottom: \"10px\" }}>\r\n                    <span className=\"list\"></span>\r\n                    <h4>Todos</h4>\r\n                    {/* <span className=\"open-todos-indicator\" style={{ marginLeft: \"20px\" }}>{openTodos.length}</span> */}\r\n                    {/* <span className=\"complete-todos-indicator\" style={{ marginLeft: \"30px\" }}>{completedTodos.length}</span> */}\r\n                    <button className=\"todos-hide-complete-btn\" onClick={this.onHideComplete}>{`${toggleMode} (${completedTodos.length}) complete items`}</button>\r\n                </div>\r\n                <div className=\"todos-bar-wrapper\">\r\n                    <span className=\"todos-bar-fill\" style={{ width: `${card.todosBarWidth}%` }} />\r\n                </div>\r\n                <div style={{ marginBottom: \"15px\" }} className=\"todo-add-wrapper flex align-center\">\r\n                    <button className=\"todo-add-btn\" style={{ marginLeft: \"40px\", padding: \"0px\" }}\r\n                        onClick={this.onAddTodo}>+ item</button>\r\n                    {onActionTodo && <div className=\"screen\" onClick={this.onTodosScreen}>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <input className=\"todos-input\" value={newTodoVal} type=\"text\" style={{ marginLeft: \"20px\" }}\r\n                                onChange={this.inputHandler} autoFocus placeholder=\"Add an item\" />\r\n                        </form>\r\n                    </div>}\r\n                    {/* className={`todos-input ${isAddModalShown ? 'fade-input' : ''} `} */}\r\n                </div>\r\n\r\n                <div className=\"todos-container\" style={{ marginLeft: \"40px\", width: \"320px\" }}>\r\n\r\n                    {list.map((todo, idx) => {\r\n                        return <div key={idx} className=\"flex align-center space-between\">\r\n                            <div className=\"todo-item flex align-center space-between\">\r\n\r\n                                <div className={todo.isDone ? 'todo-complete' : '' + \"flex column\"}>\r\n                                    <h3>{todo.content}</h3>\r\n                                    <todoinfo className=\"todo-info\">Added by <tagcolor>{todo.creator}</tagcolor> at <tagcolor>{moment(todo.createdAt).fromNow()}</tagcolor></todoinfo>\r\n                                </div>\r\n                                <span className={todo.isDone ? 'todo-checkbox-complete' : 'todo-checkbox'} onClick={() => this.onComplete(todo)} />\r\n                            </div>\r\n                            {/* {todo.isDone && <button className=\"todos-delete\">Delete</button>} */}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CardTodoList)","import React, { Component } from 'react'\r\n\r\n\r\nexport default class InterActiveRobot extends Component {\r\n\r\n    state = {\r\n        currTxt: '',\r\n        robotClass: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        let data = [\r\n            `Welcome, ${this.props.user.userName}👋`,\r\n            'This is our demo board',\r\n            'For best expirence, open 2 tabs parallaly',\r\n            'Feel free to cantact us ;)🎉',\r\n            \r\n        ]\r\n        this.setState({ currTxt: data[0] })\r\n        let cnt = 1\r\n        let myInterval = setInterval(() => {\r\n            this.setState({ currTxt: data[cnt] })\r\n            cnt++\r\n            if(cnt > data.length){\r\n                clearInterval(myInterval)\r\n                this.setState({ currTxt: null , robotClass: '' })\r\n            } \r\n        }, 2000);\r\n     \r\n        setTimeout(() => {\r\n            this.setState({ robotClass: 'opacity-robot' })\r\n        }, 500);\r\n\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props\r\n        const { currTxt , robotClass} = this.state\r\n\r\n        return (\r\n            <div className={`interactive-robot-container flex justify-center ${robotClass}`} >\r\n                <span className=\"robot\" />\r\n                <span className={`robot-txt-bubble flex align-center justify-center`}>\r\n                    {currTxt && <h3 className={\"first-speech\" + !currTxt ? 'finish-robot' : '' }>{currTxt}</h3>}\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\n\r\nclass LabelsModal extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        isErrorShown: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.addEventListener('click', this.onOutSideClick)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        document.removeEventListener('click', this.onOutSideClick)\r\n    }\r\n\r\n    onOutSideClick = (e) =>{\r\n      \r\n        if (!this.node.contains(e.target)){\r\n            \r\n            this.props.onClose()\r\n        }\r\n    }\r\n\r\n    onLabelClick = (color , title) => {\r\n        const { card , board } = this.props\r\n        let colorIdx = card.labels.findIndex(label => label.color === color)\r\n        if (colorIdx !== -1){\r\n            this.setState({isErrorShown: true})\r\n            setTimeout(()=>{\r\n                this.setState({isErrorShown: false})\r\n            },1500)\r\n             return\r\n        }\r\n        \r\n        let label ={\r\n            title,\r\n            color\r\n        }\r\n        card.labels.push(label)\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    inputHandler = ({ target }) => {\r\n        this.setState({ title: target.value })\r\n    }\r\n\r\n    render() {\r\n        const { title , isErrorShown } = this.state\r\n        return (\r\n            <div ref={node => this.node = node} className=\"card-labels-modal flex column align-center\">\r\n                <h3 className=\"labels-header\">Labels</h3>\r\n                {isErrorShown && <h5>This label already exist</h5>}\r\n\r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#61BD4F\" }}>\r\n                        <input placeholder=\"Opt. Add label titles\" value={'Frontend'} onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#61BD4F' , 'Frontend')}>Set</button>\r\n                </div>\r\n\r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#F2D600\" }}>\r\n                        <input value={'Backend Database'} onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#F2D600','Backend Database')}>Set</button>\r\n                </div>\r\n\r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#FF9F1A\" }}>\r\n                        <input value={'Bugs'} onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#FF9F1A','Bugs')}>Set</button>\r\n                </div>\r\n\r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#EB5A46\" }}>\r\n                        <input value={'TechDebt'} onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#EB5A46','TechDebt')}>Set</button>\r\n                </div>\r\n\r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#0079BF\" }}>\r\n                        <input value={'Server'} onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#0079BF','Server')}>Set</button>\r\n                </div>\r\n                \r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#FF78CB\" }}>\r\n                        <input value={'User management'} onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#FF78CB','User management')}>Set</button>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LabelsModal)","import React, { Component } from 'react'\r\nimport LabelsModal from './LabelsModal'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\n\r\nclass CardLabels extends Component {\r\n\r\n    state = {\r\n        isDeleteBtnShow: false\r\n    }\r\n\r\n    onKeyUp = (idx, ev) => {\r\n        const { card, board, isShown } = this.props\r\n        card.labels[idx].title = ev.target.innerText\r\n    }\r\n\r\n    onBlur = () => {\r\n        const { board } = this.props\r\n\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    onEnter = () => {\r\n        this.setState({ isDeleteBtnShow: true })\r\n    }\r\n\r\n    onLeave = () => {\r\n        this.setState({ isDeleteBtnShow: false })\r\n    }\r\n\r\n    onRemovelabel = (idx) =>{\r\n        const { card , board } = this.props\r\n        card.labels.splice(idx,1)\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const { card, board, isShown } = this.props\r\n        const { isDeleteBtnShow } = this.state\r\n\r\n        return (\r\n            <div className=\"card-details-labels-container flex align-center\">\r\n                {card.labels.map((label, idx) => {\r\n                    return <div onMouseEnter={this.onEnter} onMouseLeave={this.onLeave} key={idx}\r\n                        style={{ backgroundColor: `${label.color}`, minWidth: \"50px\", minHeight: \"15px\", marginRight: \"10px\", borderRadius: \"5px\", marginTop: \"10px\", padding: \"2px\", color: \"white\", fontSize: \"12px\", textAlign: \"center\", position:\"relative\" }}>\r\n                        <h4 onBlur={this.onBlur} contentEditable={true} suppressContentEditableWarning={true} spellCheck={false} onKeyUp={(ev) => this.onKeyUp(idx, ev)}\r\n                         >{label.title}</h4>\r\n                        {isDeleteBtnShow && <button onClick={() => this.onRemovelabel(idx)} className=\"lable-remove\"></button>}\r\n                    </div>\r\n                })}\r\n                {isShown && < LabelsModal onClose={this.props.onClose} card={this.props.card} board={this.props.board} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CardLabels)","import React, { Component } from 'react'\r\nimport { CardActions } from '../cmps/CardActions'\r\nimport CardComments from '../cmps/CardComments'\r\nimport CardDescription from '../cmps/CardDescription'\r\nimport CardMembers from '../cmps/CardMembers'\r\nimport CardCalendar from '../cmps/CardCalendar'\r\nimport  DueDate  from '../cmps/DueDate'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nimport CardAttachments from '../cmps/CardAttachments'\r\nimport InterActiveRobot from '../cmps/InterActiveRobot'\r\nimport CardTodoList from '../cmps/CardTodoList'\r\nimport CardLabels from '../cmps/CardLabels'\r\n\r\nclass CardDetails extends Component {\r\n\r\n\r\n    state = {\r\n        currCard: null,\r\n        currList: null,\r\n        isCalendarActive: false,\r\n        isImagesShown: false,\r\n        isMembersModalShown: false,\r\n        isLabelsModalShown:false,\r\n        isActionTodoActive: false\r\n\r\n    }\r\n\r\n    eventsHandler = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCurrCard()\r\n        window.scrollTo({\r\n            left: 0,\r\n            behavior: 'smooth'\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps) this.getCurrCard()\r\n    }\r\n\r\n    getCurrCard = () => {\r\n        const { cardId, currBoard } = this.props\r\n        let currCard;\r\n        let currList\r\n        currBoard.cardLists.forEach(cardList => {\r\n            cardList.cards.forEach(card => {\r\n                if (card.id === cardId) {\r\n                    currCard = card;\r\n                    currList = cardList;\r\n                }\r\n            })\r\n        })\r\n        this.setState({ currCard, currList },()=> {\r\n            if(currCard.attachments.length) this.setState({isImagesShown: true})\r\n            else if(!currCard.attachments.length) this.setState({isImagesShown: false})\r\n        })\r\n    }\r\n\r\n    openDatePicker = () => {\r\n        \r\n        this.setState(prevState => ({ isCalendarActive: !prevState.isCalendarActive }))\r\n    }\r\n\r\n    onImages = () => {\r\n        this.setState(prevState => ({ isImagesShown: !prevState.isImagesShown }))\r\n    }\r\n\r\n    onMembers = () => {\r\n        this.setState(prevState => ({ isMembersModalShown: !prevState.isMembersModalShown }))\r\n    }\r\n\r\n    onDatePicked = (timeStamp) => {\r\n        \r\n        const { currCard } = this.state\r\n        const { currBoard } = this.props\r\n        currCard.dueDate = timeStamp\r\n        this.setState({ isCalendarActive: false })\r\n        this.props.saveBoard(currBoard)\r\n    }\r\n\r\n    onCloseCardDetails = () => {\r\n        const { currBoard } = this.props\r\n        this.props.history.push(`/board/${currBoard._id}`)\r\n    }\r\n\r\n    onCardTitle = ({target}) => {\r\n        const {currCard} = this.state\r\n        currCard.text = target.innerText\r\n    }\r\n\r\n    onTitleBlur = () =>{\r\n        \r\n        const { currBoard } = this.props\r\n        this.props.saveBoard(currBoard)\r\n    }\r\n    onLabels = () => {\r\n        this.setState(prevState => ({ isLabelsModalShown: !prevState.isLabelsModalShown }))\r\n    }\r\n\r\n    onTodoAction = () => {\r\n        this.setState({ isActionTodoActive: true })\r\n    }\r\n    onAddTodo = () => {\r\n        this.setState(prevState => ({ isActionTodoActive: !prevState.isActionTodoActive }))\r\n    }\r\n\r\n    onLabelsClose = () =>{\r\n        this.setState(prevState => ({ isLabelsModalShown: !prevState.isLabelsModalShown }))\r\n    }\r\n\r\n    render() {\r\n\r\n        const { currCard, currList, isCalendarActive, isImagesShown, isMembersModalShown , isLabelsModalShown , isActionTodoActive} = this.state\r\n        const { currBoard , loggedUser } = this.props\r\n        if (!currCard) return ''\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"screen flex align-center justify-center\" onClick={this.onCloseCardDetails}> </div>\r\n\r\n                <div className=\"card-details-content-wrapper\">\r\n                    <div onClick={this.eventsHandler} className=\"card-details-modal\">\r\n                        <div className=\"card-details-header flex space-between align-center\">\r\n                            <div className=\"flex align-center\">\r\n                                <span className=\"card-icon\"></span>\r\n                                <p spellCheck={false} contentEditable={true} suppressContentEditableWarning={true} className=\"card-details-title\" onBlur={this.onTitleBlur} onKeyUp={this.onCardTitle}>{currCard.text}</p>\r\n                                <p className=\"card-list-parent\">In list: <span>{currList.title}</span></p>\r\n                            </div>\r\n                            <span className=\"cancel\" onClick={this.onCloseCardDetails}></span>\r\n                        </div>\r\n\r\n                        <div className=\"card-details-content-wrapper flex\">\r\n                            <div className=\"card-details-content flex column\">\r\n                                < CardLabels onClose={this.onLabelsClose} card={currCard} board={currBoard} isShown={isLabelsModalShown} />\r\n                                < CardMembers user={loggedUser} history={this.props.history} card={currCard} board={currBoard}\r\n                                    showModal={isMembersModalShown} />\r\n                                {currCard.dueDate && < DueDate card={currCard} board={currBoard} />}\r\n                                < CardDescription card={currCard} board={currBoard} />\r\n                                {(currCard.checkList.length > 0 || isActionTodoActive) && < CardTodoList onAddTodo={this.onAddTodo} onActionTodo={isActionTodoActive} card={currCard} board={currBoard} user={this.props.loggedUser} />}\r\n                                {isImagesShown &&  < CardAttachments card={currCard} board={currBoard} />}\r\n                                < CardComments card={currCard} board={currBoard} user={this.props.loggedUser} />\r\n                            </div>\r\n                            < CardActions onTodoAction={this.onTodoAction} onLabels={this.onLabels} openDatePicker={this.openDatePicker} onImages={this.onImages} onMembers={this.onMembers} />\r\n                            < CardCalendar card={currCard} onDatePicked={this.onDatePicked} isShown={isCalendarActive} />\r\n                            {/* < InterActiveRobot user={this.props.loggedUser} /> */}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedUser: state.user.loggedInUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardDetails)","import React from 'react'\r\n\r\nexport function IconPreview(props) {\r\n\r\n    const { icon, num, color, isDone } = props;\r\n\r\n    return (\r\n        <div className=\"icon flex space-between\">\r\n            <div className={icon}></div>\r\n            <div style={{ color: color }}>{(isDone || isDone === 0) && (isDone + '/')}{num}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { IconPreview } from './IconPreview.jsx'\r\nimport { BoardMembers } from './BoardMembers.jsx'\r\nimport moment from 'moment';\r\n\r\nexport function CardIconsPreview(props) {\r\n    const { card, history } = props\r\n\r\n    function getTime(val) {\r\n        if (Math.floor((val - Date.now()) / (24 * 60 * 60 * 1000)) < 0) return 'Today';\r\n        else if (Math.ceil((val - Date.now()) / (24 * 60 * 60 * 1000)) <= 1) return 'Tomorrow';\r\n        else if (Math.floor((val - Date.now()) / (24 * 60 * 60 * 1000)) < 7) return moment(val).format(\"dddd\");\r\n        else return moment(val).format(\"MMM DD\");\r\n    }\r\n\r\n    function getColor(val) {\r\n        if ((val - Date.now()) <= (24 * 60 * 60 * 1000)) return '#e74c3c';\r\n        else if ((val - Date.now()) <= (4 * 24 * 60 * 60 * 1000)) return '#e67e22';\r\n        else return '#2ecc71';\r\n    }\r\n\r\n    function getDoneTodos(checkList) {\r\n        let done = checkList.reduce((acc, todo) => todo.isDone ? acc + 1 : acc, 0)\r\n        return done;\r\n\r\n    }\r\n\r\n    if (!card) return 'loading'\r\n    return (\r\n        <div className=\"wrap-icons\">\r\n            <div className=\"card-icons flex space-between align-center\">\r\n                {card.dueDate && <IconPreview color={getColor(card.dueDate)} icon={'clock-blue'} num={getTime(card.dueDate)} />}\r\n                <div className=\"items-wrap flex\">\r\n                    {/* {Boolean(card.attachments.length) && <IconPreview icon={'attachments'} num={card.attachments.length} />} */}\r\n                    {Boolean(card.comments.length) && <IconPreview icon={'conversation-blue'} num={card.comments.length} />}\r\n                    {Boolean(card.checkList.length) && <IconPreview icon={'checklist-blue'} num={card.checkList.length} isDone={getDoneTodos(card.checkList)} />}\r\n                </div>\r\n            </div>\r\n            <div className=\"members-placeholder\">\r\n                {Boolean(card.members.length) && <BoardMembers history={history} board={card} cardMemberMode={true} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport function CardLabelsPreview(props) {\r\n\r\n    const { labels , card } = props;\r\n\r\n\r\n    return (\r\n        <div className=\"card-labels flex\">\r\n            {labels.map((lable, idx) => {\r\n                return (\r\n                    <div key={idx} className=\"card-label-style\" \r\n                    style={{ background: lable.color , marginTop:`${(card.attachments.length > 0)?\"0px\" : \"5px\"}`}} />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport class CardHeaderForm extends Component {\r\n\r\n    state = {\r\n        cardTitle: this.props.cardHeader,\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     document.addEventListener(\"mousedown\", this.closeCardMenu, false);\r\n    //     document.addEventListener(\"keydown\", this.closeCardMenu, false);\r\n    // }\r\n\r\n    // componentWillUnmount() {\r\n    //     document.removeEventListener(\"mousedown\", this.closeCardMenu, false);\r\n    //     document.removeEventListener(\"keydown\", this.closeCardMenu, false);\r\n    // }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    closeCardMenu = (e) => {\r\n        if (e.keyCode === 27) {\r\n            this.props.closeMenu();\r\n        }\r\n    }\r\n\r\n    activeEditMode = (e) => {\r\n        e.stopPropagation()\r\n        this.setState({ editTitleMode: true })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.stopPropagation()\r\n        this.setState({ title: e.target.value })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        let { card } = this.props\r\n        card.title = this.state.title;\r\n        this.props.saveCard(card);\r\n        this.setState({ editTitleMode: false })\r\n        this.props.closeMenu();\r\n    }\r\n\r\n\r\n\r\n\r\n    onSubmit = () => {\r\n        this.props.offEditCardHeader(this.props.cardId, this.props.cardListId, this.state.cardTitle)\r\n    }\r\n\r\n    escFunction = (event) => {\r\n        if(event.keyCode === 13){\r\n            this.onSubmit()\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ cardTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.onSubmit();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        this.onSubmit()\r\n    }\r\n\r\n    moveCaretAtEnd(e) {\r\n        var temp_value = e.target.value\r\n        e.target.value = ''\r\n        e.target.value = temp_value\r\n      }\r\n\r\n\r\n    render() {\r\n        const { cardTitle } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <textarea placeholder=\"Edit title\" onClick={ev => ev.stopPropagation()}\r\n                    value={cardTitle} onChange={this.handleChange} autoFocus onFocus={this.moveCaretAtEnd} onBlur={this.handleBlur} spellCheck=\"false\" />\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { saveBoard } from '../store/actions/boardActions.js'\r\n\r\n\r\nclass CardMenu extends Component {\r\n\r\n    state = {\r\n        isMenuOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.addEventListener(\"keydown\", this.closeBoardMenu, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.removeEventListener(\"keydown\", this.closeBoardMenu, false);\r\n    }\r\n\r\n    closeBoardMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.setState({ isMenuOpen: false })\r\n        }\r\n    }\r\n\r\n    openMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({ isMenuOpen: true })\r\n    }\r\n\r\n    onDeleteCard = (cardId, cardListId, ev) => {\r\n        ev.stopPropagation()\r\n        const currBoard = this.props.currBoard;\r\n        const { cardLists } = currBoard;\r\n        const list = cardLists.find(cardList => cardList.id === cardListId);\r\n        const cardIdx = list.cards.findIndex(card => card.id === cardId);\r\n\r\n        list.cards.splice(cardIdx, 1);\r\n        this.props.saveBoard(currBoard);\r\n    }\r\n\r\n    onCloseMenu = (ev) => {\r\n        this.setState({ isMenuOpen: false })\r\n        this.props.onEditCardHeader(ev)\r\n    }\r\n\r\n    render() {\r\n        const { cardId, cardListId } = this.props\r\n        const { onDeleteCard } = this\r\n        const { isMenuOpen } = this.state;\r\n\r\n        return (\r\n            <div ref={node => this.node = node} className=\"card-menu-container\">\r\n                <div className=\"menu-btn hidden\" onClick={(event) => this.openMenu(event)} ></div>\r\n                {isMenuOpen && <div className=\"menu-options card-menu\">\r\n                    <div onClick={(event) => this.onCloseMenu(event)}>Edit Title</div>\r\n                    <div onClick={(event) => onDeleteCard(cardId, cardListId, event)}>Delete Card</div>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardMenu)\r\n","import React, { Component } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { CardIconsPreview } from './CardIconsPreview.jsx'\r\nimport { CardLabelsPreview } from './CardLabelsPreview.jsx'\r\nimport { CardHeaderForm } from './CardHeaderForm.jsx'\r\nimport CardMenu from './CardMenu.jsx'\r\nimport { connect } from 'react-redux';\r\nimport { saveBoard } from '../store/actions/boardActions.js'\r\n\r\n\r\nclass CardPreview extends Component {\r\n\r\n    state = {\r\n        isFocus: false,\r\n    }\r\n\r\n    onEditCardHeader = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({ isFocus: true })\r\n    }\r\n\r\n    offEditCardHeader = (cardId, cardListId, text) => {\r\n        if (!cardId || !cardListId) {\r\n            this.setState({ isFocus: false })\r\n            return\r\n        };\r\n\r\n        const currBoard = JSON.parse(JSON.stringify(this.props.currBoard));\r\n        const { cardLists } = currBoard;\r\n        const list = cardLists.find(cardList => cardList.id === cardListId);\r\n        const card = list.cards.find(card => card.id === cardId)\r\n        card.text = text\r\n        this.setState({ isFocus: false })\r\n        this.props.saveBoard(currBoard);\r\n    }\r\n\r\n\r\n    showCard = (cardId, history, currBoard) => {\r\n        history.push(`/board/${currBoard._id}/${cardId}`)\r\n    };\r\n\r\n    render() {\r\n\r\n        const { index, card, currBoard, cardListId, history, animation } = this.props\r\n        const { showCard, offEditCardHeader, onEditCardHeader } = this;\r\n        return (\r\n            <Draggable key={card.id} draggableId={card.id} index={index} >\r\n                {(provided, snapshot) => {\r\n                    return (\r\n                        <>\r\n                            <div\r\n                                className={`card-preview drag flex column ${snapshot.isDragging ? \"isDragging\" : \"\"} ${animation}`} onClick={() => showCard(card.id, history, currBoard)}\r\n                                ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}\r\n                                style={{\r\n                                    userSelect: \"none\",\r\n                                    ...provided.draggableProps.style\r\n                                }}\r\n                            >\r\n                                <CardMenu cardId={card.id} onEditCardHeader={onEditCardHeader} cardListId={cardListId} />\r\n                                {Boolean(card.attachments.length) && <img src={card.attachments[0].url} alt=\"\" />}\r\n                                {Boolean(card.labels.length) && <CardLabelsPreview card={card} histoy={history} labels={card.labels} />}\r\n                                {(this.state.isFocus) ? <CardHeaderForm cardHeader={card.text} cardListId={cardListId} cardId={card.id} offEditCardHeader={offEditCardHeader} /> : <div className=\"card-text\">{card.text}</div>}\r\n                                <CardIconsPreview card={card} />\r\n                            </div>\r\n                        </>\r\n                    );\r\n                }}\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardPreview)\r\n","import React, { Component } from \"react\";\r\n\r\nexport class AddCardForm extends Component {\r\n    state = {\r\n        addCardForm: false,\r\n        newCardTitle: '',\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    escFunction = (event) => {\r\n        if (event.keyCode === 27) {\r\n            this.setState({ addCardForm: false, newCardTitle: '' })\r\n        }\r\n    }\r\n\r\n    openForm = () => {\r\n        this.setState({ addCardForm: true });\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ newCardTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.createNewCard();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        if (this.state.newCardTitle) this.createNewCard();\r\n        else this.setState({ addCardForm: false });\r\n    }\r\n\r\n    createNewCard() {\r\n        const { title } = { title: this.state.newCardTitle }\r\n        this.props.onAddCard(this.props.cardListId, title)\r\n        this.setState({ addCardForm: false, newCardTitle: '' })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { addCardForm, newCardTitle } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"card-preview flex justify-center align-center\" onClick={this.openForm} >\r\n                    {!addCardForm ? <div>Add card</div> :\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <input placeholder=\"Add card\" value={newCardTitle} onChange={this.handleChange} autoFocus onBlur={this.handleBlur} />\r\n                        </form>}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { saveBoard } from '../store/actions/boardActions.js'\r\n\r\n\r\nclass ListMenu extends Component {\r\n\r\n    state = {\r\n        isMenuOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.addEventListener(\"keydown\", this.closeBoardMenu, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.removeEventListener(\"keydown\", this.closeBoardMenu, false);\r\n    }\r\n\r\n\r\n    closeBoardMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.setState({ isMenuOpen: false })\r\n        }\r\n    }\r\n\r\n\r\n    openMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({ isMenuOpen: true })\r\n    }\r\n\r\n    onDeleteList = (cardlistId, ev) => {\r\n        ev.stopPropagation()\r\n        const { currBoard } = this.props;\r\n        const { cardLists } = currBoard;\r\n        const listIdx = cardLists.findIndex(cardList => cardlistId === cardList.id);\r\n        cardLists.splice(listIdx, 1);\r\n        \r\n        this.props.saveBoard(currBoard);\r\n    }\r\n\r\n    onCloseMenu = (ev) => {\r\n        this.setState({ isMenuOpen: false })\r\n        this.props.onEditListTitle(ev)\r\n    }\r\n\r\n    render() {\r\n        const { onEditListTitle, cardListId } = this.props\r\n        const { onDeleteList } = this\r\n        const { isMenuOpen } = this.state;\r\n\r\n\r\n        return (\r\n            <div ref={node => this.node = node} className=\"list-menu-container\">\r\n                <div className=\"menu-btn\" onClick={(event) => this.openMenu(event)}></div>\r\n                {isMenuOpen && <div className=\"menu-options list-menu \">\r\n                    <div onClick={(event) => this.onCloseMenu(event)}>Edit Title</div>\r\n                    <div onClick={(event) => onDeleteList(cardListId, event)}>Delete List</div>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListMenu)\r\n","import React, { Component } from \"react\";\r\n\r\nexport class ListTitleForm extends Component {\r\n\r\n    state = {\r\n        cardListTitle: this.props.cardList.title\r\n\r\n    }\r\n   \r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.escFunction, false);\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.escFunction, false);\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    handleChange = (ev) => {\r\n        ev.stopPropagation()\r\n        this.setState({ cardListTitle: ev.target.value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        let { card } = this.props\r\n        card.title = this.state.title;\r\n        this.setState({ editTitleMode: false })\r\n        this.onSubmit();\r\n    }\r\n\r\n    onSubmit = () => {\r\n        this.props.offEditListTitle(this.props.cardList.id, this.state.cardListTitle)\r\n    }\r\n\r\n    escFunction = (event) => {\r\n        if (event.keyCode === 27) {\r\n            this.onSubmit()\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ cardListTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.onSubmit();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { cardListTitle } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input placeholder=\"Edit title...\" value={cardListTitle} onChange={this.handleChange} autoFocus onBlur={this.onSubmit} />\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport CardPreview from './CardPreview.jsx'\r\nimport { AddCardForm } from \"./AddCardForm.jsx\";\r\nimport ListMenu from \"./ListMenu.jsx\"\r\nimport { ListTitleForm } from \"./ListTitleForm.jsx\"\r\nimport { connect } from 'react-redux';\r\nimport { saveBoard } from '../store/actions/boardActions.js'\r\n\r\n\r\nclass CardListPreview extends Component {\r\n\r\n    state = {\r\n        addlistForm: false,\r\n        newlistTitle: '',\r\n        isFocus: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    onEditListTitle = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({ isFocus: true })\r\n    }\r\n\r\n    offEditListTitle = (cardListId, title) => {\r\n        if (!cardListId) {\r\n            this.setState({ isFocus: false })\r\n            return\r\n        };\r\n\r\n        const currBoard = this.props.currBoard;\r\n        const { cardLists } = currBoard;\r\n        const list = cardLists.find(cardList => cardList.id === cardListId);\r\n        list.title = title;\r\n        this.props.saveBoard(currBoard);\r\n        this.setState({ isFocus: false })\r\n    }\r\n\r\n    escFunction = (event) => {\r\n        if (event.keyCode === 27) {\r\n            this.setState({ addlistForm: false, newlistTitle: '' })\r\n        }\r\n    }\r\n\r\n    openForm = () => {\r\n        this.setState({ addlistForm: true });\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ newlistTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.createNewlist();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        if (this.state.newlistTitle) this.createNewlist();\r\n        else this.setState({ addlistForm: false });\r\n    }\r\n\r\n    createNewlist() {\r\n        const list = { title: this.state.newlistTitle }\r\n        this.props.onAddList(list)\r\n        this.setState({ addlistForm: false, newlistTitle: '' })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { cardList, index, onAddCard, currBoard, history, animation } = this.props\r\n\r\n        const { onEditListTitle, offEditListTitle } = this\r\n\r\n        return (\r\n            <Draggable key={cardList.id} draggableId={cardList.id} index={index} >\r\n                {(provided, snapshot) => (\r\n                    <div className={`wrap-card-list flex ${animation}`} key={cardList.id}\r\n                        ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                        <Droppable droppableId={cardList.id} key={cardList.id} type={\"card\"}>\r\n                            {(provided, snapshot) => (\r\n                                <div className={`card-list-container flex column ${snapshot.isDraggingOver ? \"light\" : \"\"}`} >\r\n                                    <div className=\"title-content flex space-between \">\r\n                                        {(this.state.isFocus) ? <ListTitleForm listTitle={cardList.title} cardList={cardList} offEditListTitle={offEditListTitle} /> : <h2 className=\"list-title\">{cardList.title}</h2>}\r\n\r\n                                        <ListMenu onEditListTitle={onEditListTitle} cardListId={cardList.id} />\r\n                                    </div>\r\n                                    <div className={\"card-list\"} {...provided.droppableprops} ref={provided.innerRef} >\r\n                                        {cardList.cards.map((card, index) => {\r\n                                            return (\r\n                                                <CardPreview key={card.id} cardListId={cardList.id} currBoard={currBoard} card={card} index={index} history={history} animation={animation} />\r\n                                            );\r\n                                        })}\r\n                                        {provided.placeholder}\r\n                                    </div>\r\n                                    <AddCardForm onAddCard={onAddCard} cardList={cardList} cardListId={cardList.id} />\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardListPreview)","import React, { Component } from \"react\";\r\n\r\nexport class AddListForm extends Component {\r\n    state = {\r\n        addlistForm: false,\r\n        newlistTitle: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    escFunction = (event) => {\r\n        if (event.keyCode === 27) {\r\n            this.setState({ addlistForm: false, newlistTitle: '' })\r\n        }\r\n    }\r\n\r\n    openForm = () => {\r\n        this.setState({ addlistForm: true });\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ newlistTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.createNewlist();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        if (this.state.newlistTitle) this.createNewlist();\r\n        else this.setState({ addlistForm: false });\r\n    }\r\n\r\n    createNewlist() {\r\n        const title = { title: this.state.newlistTitle }\r\n        this.props.onAddList(this.state.newlistTitle)\r\n        this.setState({ addlistForm: false, newlistTitle: '' })\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { addlistForm, newlistTitle } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"add-list\" onClick={this.openForm} >\r\n                    {!addlistForm ? <div className=\"add-list-btn flex justify-center align-center\"><div className=\"plus-white\"></div></div> :\r\n                        <div className=\"screen\">\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <input placeholder=\"Add list ...\" value={newlistTitle} onChange={this.handleChange} autoFocus onBlur={this.handleBlur} />\r\n                            </form>\r\n                        </div>}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport CardDetails from './CardDetails.jsx';\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport CardListPreview from '../cmps/CardListPreview.jsx'\r\nimport { AddListForm } from '../cmps/AddListForm.jsx'\r\nimport { connect } from 'react-redux';\r\nimport uuid from \"uuid/v4\";\r\nimport { clearCurrBoard, setBoards, setBoard, saveBoard, removeBoard } from '../store/actions/boardActions.js'\r\nimport socketService from '../services/socketService'\r\nimport { max } from \"moment\";\r\n\r\n\r\nclass Board extends Component {\r\n\r\n    state = {\r\n        animation: 'animation',\r\n        isScrolling: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { boardId } = this.props.match.params\r\n        this.props.setBoard(boardId)\r\n\r\n        socketService.on(`board-updated-${boardId}`, (id) => {\r\n            this.setState({ animation: 'animation' })\r\n            this.props.setBoard(id)\r\n        })\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        const { boardId } = this.props.match.params\r\n        socketService.off(`board-updated-${boardId}`)\r\n        this.props.clearCurrBoard()\r\n    }\r\n\r\n    getNewCard = (txt) => {\r\n\r\n        return {\r\n            id: uuid(),\r\n            createdAt: Date.now(),\r\n            creator: {},\r\n            description: \"\",\r\n            isStarred: false,\r\n            dueDate: null,\r\n            members: [\r\n            ],\r\n            covers: {\r\n                id: \"\",\r\n                imgUrl: \"\",\r\n                isShown: true\r\n            },\r\n            attachments: [],\r\n            text: txt,\r\n            checkList: [],\r\n            labels: [],\r\n            comments: []\r\n        }\r\n    }\r\n\r\n    getNewList = (title) => {\r\n        return {\r\n            id: uuid(),\r\n            title: title,\r\n            createdAt: Date.now(),\r\n            creator: null,\r\n            cards: []\r\n        }\r\n    }\r\n\r\n    onAddList = async (title = \"\") => {\r\n        this.setState({ animation: 'animation' })\r\n        const { currBoard } = this.props\r\n        const { cardLists } = currBoard;\r\n        cardLists.push(this.getNewList(title));\r\n        await this.props.saveBoard(currBoard)\r\n        window.scrollTo({\r\n            left: 100000,\r\n            behavior: 'smooth'\r\n        });\r\n    }\r\n\r\n    onAddCard = async (ListId, txt = \"\") => {\r\n        this.setState({ animation: 'animation' })\r\n        const { currBoard } = this.props\r\n        const { cardLists } = currBoard;\r\n        const list = cardLists.find(cardList => cardList.id === ListId);\r\n        list.cards.push(this.getNewCard(txt))\r\n        await this.props.saveBoard(currBoard)\r\n    }\r\n\r\n    onDragEnd = (result) => {\r\n        this.setState({ animation: '' })\r\n        if (!result.destination) return;\r\n        const { currBoard } = this.props\r\n        const { cardLists } = currBoard\r\n        const { source, destination, type } = result;\r\n\r\n        switch (type) {\r\n            case \"card\":\r\n                const sourcecardList = cardLists.find(list => source.droppableId === list.id);\r\n                const destcardList = cardLists.find(list => destination.droppableId === list.id);\r\n\r\n                const sourcecards = sourcecardList.cards;\r\n                const destcards = destcardList.cards;\r\n                const [removed] = sourcecards.splice(source.index, 1);\r\n                destcards.splice(destination.index, 0, removed);\r\n                this.props.saveBoard(currBoard)\r\n                break;\r\n\r\n            case \"list\":\r\n                const [removedList] = cardLists.splice(source.index, 1);\r\n                cardLists.splice(destination.index, 0, removedList);\r\n                this.props.saveBoard(currBoard)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n    };\r\n\r\n    getBackground(board) {\r\n        return board.background.content ? {\r\n            backgroundImage: \"url(\" + `${board.background.content}` + \")\",\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'no-repeat'\r\n        } : { background: board.background.color }\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        if (e._targetInst.memoizedProps.className === 'card-lists flex ') this.setState({ ...this.state, isScrolling: true });\r\n\r\n    }\r\n    onMouseUp = () => {\r\n        this.setState({ ...this.state, isScrolling: false });\r\n    }\r\n    onMouseMove = ({ movementX }) => {\r\n        if (this.state.isScrolling) window.scrollBy(-movementX, 0);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { onDragEnd, onAddList, onAddCard } = this;\r\n        const { currBoard, history } = this.props;\r\n        const { animation } = this.state;\r\n\r\n        const { cardId } = this.props.match.params;\r\n        if (!currBoard) return <div></div>;\r\n        const { cardLists } = currBoard;\r\n\r\n\r\n        return (\r\n            <div className=\"board-app-container\"  >\r\n                <div className=\"board-background\" style={this.getBackground(currBoard)}></div>\r\n                <div className={`wrap-card-lists flex`} >\r\n                    <DragDropContext onDragEnd={result => onDragEnd(result)} >\r\n                        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n                            {(provided, snapshot) => (\r\n                                <div className={`card-lists flex ${snapshot.isDraggingOver ? \"light\" : \"\"}`}\r\n                                    {...provided.droppableProps} ref={provided.innerRef} onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp} onMouseMove={this.onMouseMove}\r\n                                >\r\n                                    {cardLists.map((cardList, index) => {\r\n                                        return (<CardListPreview currBoard={currBoard} onAddCard={onAddCard} key={cardList.id} cardList={cardList} index={index} history={history} animation={animation} />\r\n                                        );\r\n                                    })}\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                    </DragDropContext>\r\n\r\n                    <AddListForm onAddList={onAddList} />\r\n                </div >\r\n                {cardId && <CardDetails currBoard={currBoard} history={history} cardId={cardId} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setBoards,\r\n    setBoard,\r\n    clearCurrBoard,\r\n    removeBoard,\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board)\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from './pages/Home.jsx'\r\nimport NavBar from './cmps/NavBar.jsx'\r\nimport UserDetails from './pages/UserDetails.jsx'\r\nimport DashBoard from './pages/DashBoard.jsx';\r\nimport Board from './pages/Board.jsx';\r\n// import DndBoard from './pages/DndBoard.jsx';\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <main className=\"app-main-container\">\r\n        <Switch>\r\n          {/* <Route component={DndBoard} path=\"/board/:boardId/:cardId?\" /> */}\r\n          <Route component={Board} path=\"/board/:boardId/:cardId?\" />\r\n          <Route component={UserDetails} path=\"/user/:userId\" />\r\n          <Route component={DashBoard} path=\"/board\" />\r\n          <Route component={Home} path=\"/\" />\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    boards: [],\r\n    currBoard: null\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: action.boards\r\n            }\r\n        case 'SET_BOARD':\r\n\r\n            return {\r\n                ...state,\r\n                currBoard: action.board\r\n            }\r\n\r\n        case 'RESET_BOARD':\r\n            return {\r\n                ...state,\r\n                currBoard: null\r\n            }\r\n\r\n        case 'ADD_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: [...state.boards, action.board]\r\n            }\r\n        case 'UPDATE_BOARD':\r\n            // console.log('updating.........', action.board);\r\n\r\n            return {\r\n                ...state,\r\n                currBoard: action.board,\r\n                boards: state.boards.map(board => {\r\n                    if (board._id === action.board._id) return action.board;\r\n                    return board;\r\n                })\r\n            }\r\n        case 'REMOVE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.filter(board => board._id !== action.boardId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n","// let localLoggedinUser = null;\r\n// if (sessionStorage.user) localLoggedinUser = JSON.parse(sessionStorage.user);\r\n\r\nconst initialState = {\r\n  users: [],\r\n  loggedInUser: null\r\n};\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n \r\n  switch (action.type) {\r\n    case 'SET_USERS':\r\n      return {\r\n        ...state,\r\n        users: action.users\r\n      };\r\n    case 'SET_USER':\r\n     \r\n      \r\n      return {\r\n        ...state,\r\n        loggedInUser: action.user,\r\n      };\r\n    case 'USER_REMOVE':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { boardReducer } from './reducers/boardReducer'\r\nimport { userReducer } from './reducers/UserReducer'\r\n\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({\r\n    boardApp: boardReducer,\r\n    user: userReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store/store.js';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}