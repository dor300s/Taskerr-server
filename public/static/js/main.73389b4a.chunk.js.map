{"version":3,"sources":["history.js","services/httpService.js","services/userService.js","store/actions/userActions.js","cmps/Login.jsx","cmps/SignUp.jsx","pages/Home.jsx","services/boardService.js","services/socketService.js","store/actions/boardActions.js","services/cloudinaryService.js","cmps/BoardMenu.jsx","cmps/BoardPreview.jsx","cmps/BoardList.jsx","cmps/NavMenuFilter.jsx","cmps/NavMenu.jsx","cmps/HistoryNotifications.jsx","cmps/AllReadNotifications.jsx","cmps/UnReadNotifications.jsx","cmps/NavUserNotificationMenu.jsx","cmps/BoardMembers.jsx","cmps/MemberPreview.jsx","cmps/NavBarSearch.jsx","cmps/InviteMemberModal.jsx","cmps/ChartBar.jsx","cmps/ChartPay.jsx","cmps/ChartLine.jsx","cmps/ChartModal.jsx","services/soundService.js","cmps/CardComments.jsx","cmps/NavBar.jsx","pages/UserDetails.jsx","pages/DashBoard.jsx","cmps/CardActions.jsx","cmps/CardCommentsList.jsx","cmps/CardDescription.jsx","cmps/CardMembersList.jsx","cmps/CardMembers.jsx","cmps/CardCalendar.jsx","cmps/DueDate.jsx","cmps/CardAttachments.jsx","cmps/CardTodoList.jsx","cmps/InterActiveRobot.jsx","cmps/LabelsModal.jsx","cmps/CardLabels.jsx","pages/CardDetails.jsx","cmps/IconPreview.jsx","cmps/CardIconsPreview.jsx","cmps/CardLabelsPreview.jsx","cmps/CardHeaderForm.jsx","cmps/CardMenu.jsx","cmps/CardPreview.jsx","cmps/AddCardForm.jsx","cmps/ListMenu.jsx","cmps/ListTitleForm.jsx","cmps/CardListPreview.jsx","cmps/AddListForm.jsx","pages/Board.jsx","App.js","serviceWorker.js","store/reducers/boardReducer.js","store/reducers/UserReducer.js","store/store.js","index.js"],"names":["history","createBrowserHistory","axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","push","login","logout","signup","getUsers","httpService","getById","userId","remove","update","getUserFromSession","clearNotifications","user","notifications","map","notifi","isRead","_id","userCred","_handleLogin","sessionStorage","clear","isLogIn","setItem","JSON","stringify","session","userCreds","dispatch","userService","setUser","getUser","userData","type","setUsers","users","Login","state","username","password","inputHandler","target","field","name","value","setState","onSubmit","ev","preventDefault","credentials","props","then","catch","className","this","placeholder","autoComplete","onChange","to","React","Component","mapDispatchToProps","connect","SignUp","fullName","isGuest","required","Home","onDemoClick","loggedUser","onClick","component","path","loggedInUser","baseUrl","query","filter","get","params","id","delete","save","board","prm","put","post","socket","setup","io","terminate","on","eventName","cb","off","emit","setBoards","boardService","boards","clearCurrBoard","setBoard","removeBoard","boardId","saveBoard","savedBoard","socketService","uploadImg","UPLOAD_URL","formDataImg","Object","values","files","img","formData","FormData","append","err","Promise","all","BoardMenu","title","editTitleMode","isImgLoading","updateCoverMode","closeBoardMenu","e","closeMenu","node","contains","keyCode","activeEditMode","stopPropagation","handleChange","handleSubmit","onRemoveBoard","openCoverMode","coverMode","closeCoverMode","onUploadImg","background","content","onChangeColor","color","document","addEventListener","removeEventListener","ref","onBlur","autoFocus","spellCheck","onMouseOver","onMouseLeave","hidden","accept","BoardPreview","isModalOpen","openMenu","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","isStarred","onBoardClicked","editable","Fragment","style","getBackground","starToggle","BoardList","addBoardForm","newBoardTitle","escFunction","event","openForm","createNewBoard","handleBlur","addBoardOption","key","NavMenuFilter","onFilter","NavMenu","filteredBoards","onCloseMenu","filterBy","length","toLowerCase","includes","onHomeBtnClick","currBoard","isMenuActive","starredBoards","Boolean","withRouter","HistoryNotifications","isShown","goBack","idx","AllReadNotifications","showHistory","UnReadNotifications","notifiToShow","markAsRead","onBoardCollab","onInviteDecline","cardId","NavUserNotificationMenu","isHistoryShown","onCloseNotificationMenu","onClearNotification","onNotificationsHistory","prevState","collabBoardId","userIdxOnBoard","members","findIndex","imgUrl","userName","splice","isNotificationModalOpen","BoardMembers","cardMemberMode","member","charAt","onInvite","MemberPreview","isUserModalOpen","onCloseUserModal","onUserClick","onUserLogOut","NavBarSearch","searchWord","filterLists","filterCards","isSearchOpenModal","loadUsers","onCloseSearchModal","onSearch","filterBoards","cardLists","forEach","cardList","boardTitle","cards","card","text","cardListId","cardListTitle","filterUsers","openSearchModal","InviteMemberModal","filteredUsers","isAlreadyInvitesShown","onCloseInviteMenu","keyWord","activeBoard","setTimeout","invitedUserId","sender","createdAt","Date","now","prevProps","isInviteModalOpen","onKeyUp","boardApp","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","ChartBar","usersData","width","height","options","maintainAspectRatio","ChartPay","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","ChartLine","ChartModal","isCartModalOpen","closeStatisticModal","onChartClick","notification","notifiPing","Audio","volume","play","typingInterval","NavBar","notifiBoardCollab","invData","unshift","moment","fromNow","soundService","notifiCardAssign","assignData","assingedBy","onMenuClick","onUserNotificationClick","onInviteMember","alt","marginRight","UserDetails","match","src","about","DashBoard","CardActions","onLabels","onImages","openDatePicker","CardCommentsList","comments","comment","marginLeft","minWidth","marginBottom","txt","deleteComment","CardComments","userMsg","isTypeActive","onUserType","clearInterval","currUser","CardDescription","isEditMode","description","dynamicClass","onDescClicked","onTextAreaLeave","onTextFocus","onDescEdit","temp_value","onFocus","moveCaretAtEnd","CardMembersList","opacity","letUserIdx","addMember","CardMembers","isAddMemberActive","isMouseHoverUser","onAddMember","assignedUserId","onMouseEnter","onRemoveCardUser","showModal","CardCalendar","date","timeStamp","formatDate","getTime","minDate","onDatePicked","DueDate","isComplete","diffDays","onComplete","getDiffDays","dueDate","Math","ceil","marginTop","format","fontWeight","CardAttachments","isLoading","activeImg","onUpload","uploadedFiles","cdyImgs","file","fileName","original_filename","attachments","onDelete","onImgClick","multiple","CardTodoList","isAddModalShown","newTodoVal","isListFiltered","openTodos","completedTodos","barFillWidth","toggleMode","getBarWidth","totalTodos","todosBarWidth","getTodosStatus","checkList","item","isDone","todo","doneBy","onAddTodo","onHideComplete","creator","list","padding","LabelsModal","isErrorShown","onLabelClick","CardLabels","isDeleteBtnShow","innerText","onEnter","onLeave","onRemovelabel","minHeight","borderRadius","fontSize","textAlign","position","contentEditable","suppressContentEditableWarning","CardDetails","currCard","currList","isCalendarActive","isImagesShown","isMembersModalShown","isLabelsModalShown","eventsHandler","getCurrCard","onMembers","onCloseCardDetails","onCardTitle","onTitleBlur","IconPreview","icon","num","CardIconsPreview","val","floor","reduce","acc","CardLabelsPreview","lable","CardHeaderForm","cardTitle","cardHeader","closeCardMenu","saveCard","offEditCardHeader","CardMenu","isMenuOpen","onDeleteCard","find","cardIdx","onEditCardHeader","CardPreview","isFocus","parse","showCard","index","animation","draggableId","provided","snapshot","isDragging","innerRef","draggableProps","dragHandleProps","userSelect","histoy","AddCardForm","addCardForm","newCardTitle","createNewCard","onAddCard","ListMenu","onDeleteList","cardlistId","listIdx","onEditListTitle","ListTitleForm","offEditListTitle","CardListPreview","addlistForm","newlistTitle","createNewlist","onAddList","droppableId","isDraggingOver","listTitle","droppableprops","AddListForm","Board","getNewCard","uuid","covers","getNewList","window","scrollTo","ListId","onDragEnd","result","destination","source","sourcecardList","destcardList","sourcecards","destcards","removed","removedList","direction","droppableProps","App","location","hostname","initialState","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.73389b4a.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import history from '../history';\r\nimport Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n    \r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data){\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data){\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data){\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data){\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method='get', data=null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n          history.push('/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import httpService from './httpService'\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getUserFromSession,\r\n    clearNotifications\r\n}\r\n\r\nfunction getUsers() {\r\n    return httpService.get('user')\r\n}\r\n\r\nfunction getById(userId) {\r\n    return httpService.get(`user/${userId}`)\r\n}\r\n\r\nfunction remove(userId) {\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nfunction update(user) {\r\n    return httpService.put(`user/${user._id}`, user)\r\n}\r\n\r\nasync function login(userCred) {\r\n    const user = await httpService.post('auth/login', userCred)\r\n    return _handleLogin(user)\r\n}\r\n\r\nasync function signup(userCred) {\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _handleLogin(user)\r\n}\r\n\r\nasync function logout() {\r\n   let res = await httpService.post('auth/logout');\r\n   sessionStorage.clear();\r\n    return res\r\n    \r\n}\r\n\r\nfunction clearNotifications(user) {\r\n    user.notifications.map(notifi => notifi.isRead = true)\r\n    update(user)\r\n}\r\n\r\nfunction _handleLogin(user) {\r\n    user.isLogIn = true ;\r\n    update(user)\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}\r\n\r\nasync function getUserFromSession() {\r\n    \r\n\r\n    const session = await httpService.get('auth/session');\r\n    \r\n    return session;\r\n}\r\n\r\n\r\n/* import Axios from 'axios';\r\nconst userUrl = (process.env.NODE_ENV !== 'development') ? '/api/user' : '//localhost:3030/api/user';\r\nconst authUrl = (process.env.NODE_ENV !== 'development') ? '/api/auth' : '//localhost:3030/api/auth';\r\nconst axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    query,\r\n    get,\r\n    remove,\r\n    update,\r\n    login,\r\n    signup,\r\n    logout,\r\n    session,\r\n    clearNotifications\r\n}\r\n\r\nfunction clearNotifications(user) {\r\n    user.notifications.map(notifi => notifi.isRead = true)\r\n    update(user)\r\n}\r\n\r\nfunction query() {\r\n    return axios.get(userUrl)\r\n        .then(res => res.data)\r\n}\r\n\r\nfunction get(id) {\r\n    return axios.get(`${userUrl}/${id}`)\r\n        .then(res => res.data)\r\n}\r\n\r\n\r\nfunction remove(id) {\r\n    return axios.delete(`${userUrl}/${id}`)\r\n}\r\n\r\nfunction update(user) {\r\n    return axios.put(`${userUrl}/${user._id}`, user)\r\n        .then(res => {\r\n            window.localStorage.setItem('loggedUser', JSON.stringify(res.data));\r\n            return res.data\r\n        })\r\n}\r\n\r\nfunction login(userCreds) {\r\n    return axios.post(`${authUrl}/login`, userCreds)\r\n        .then(res => {\r\n            window.localStorage.setItem('loggedUser', JSON.stringify(res.data));\r\n            return res.data\r\n        })\r\n}\r\nfunction signup(userCreds) {\r\n    return axios.post(`${authUrl}/signup`, userCreds)\r\n        .then(res => res.data)\r\n\r\n}\r\nfunction logout() {\r\n    return axios.post(`${authUrl}/logout`)\r\n        .then(res => res.data)\r\n}\r\n\r\nfunction session() {\r\n    console.log('sesssion');\r\n\r\n    return axios.get(`${authUrl}/session}`)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            return res.data\r\n        })\r\n} */","import userService from '../../services/userService'\r\n\r\nexport function loadUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      const users = await userService.getUsers();\r\n      dispatch(setUsers(users));\r\n    } catch (err) {\r\n\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.remove(userId);\r\n      dispatch(_removeUser(userId));\r\n    } catch (err) {\r\n      console.log('UserActions: err in removeUser', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    const user = await userService.login(userCreds);\r\n    dispatch(setUser(user));\r\n  }\r\n}\r\n\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    const user = await userService.signup(userCreds)\r\n    dispatch(setUser(user))\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  return async dispatch => {\r\n    await userService.logout();\r\n    dispatch(setUser(null));\r\n  }\r\n}\r\n\r\nexport function getUser() {\r\n  return async dispatch => {\r\n    const user = await userService.getUserFromSession();\r\n    dispatch(setUser(user));\r\n  }\r\n}\r\n\r\n/* export function getUserById(id) {\r\n  const user = userService.getById(id);\r\n  console.log('user actionnnnnnnnnn', user);\r\n\r\n} */\r\n\r\n\r\nexport function update(userData) {\r\n  return async dispatch => {\r\n    const user = await userService.update(userData);\r\n    dispatch(setUser(user));\r\n  }\r\n}\r\n\r\nexport function setUser(user) {\r\n  return { type: 'SET_USER', user }\r\n}\r\n\r\n\r\nfunction setUsers(users) {\r\n  return { type: 'SET_USERS', users }\r\n}\r\n\r\nfunction _removeUser(userId) {\r\n  return { type: 'USER_REMOVE', userId }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../store/actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Login extends React.Component {\r\n\r\n\r\n    state = {\r\n        username: null,\r\n        password: null\r\n    }\r\n\r\n    inputHandler = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const { username, password } = this.state\r\n        const credentials = {\r\n            username,\r\n            password\r\n        }\r\n\r\n        this.props.login(credentials)\r\n            .then(() => {\r\n                this.props.history.push('/board')\r\n            })\r\n            .catch(console.log('ERROR')) // TODO: Show error modal\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-container flex column space-between align-center\">\r\n                <h2>Login</h2>\r\n                <form className=\"flex column space-between\" onSubmit={this.onSubmit}>\r\n                    <input type=\"text\" placeholder=\"username\" name=\"username\" autoComplete=\"off\" onChange={this.inputHandler} />\r\n                    <input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={this.inputHandler} />\r\n                    <button>Login</button>\r\n                </form>\r\n                <p>Don't have an account?<Link to=\"/signup\">signup</Link></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    login\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Login)","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { signup } from '../store/actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass SignUp extends React.Component {\r\n\r\n\r\n    state = {\r\n        fullName: null,\r\n        password: null,\r\n        username: null\r\n    }\r\n\r\n    inputHandler = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const { fullName, password, username } = this.state\r\n        const credentials = {\r\n            password,\r\n            fullName,\r\n            username,\r\n            isGuest: false\r\n        }\r\n\r\n        this.props.signup(credentials)\r\n            .then(() => this.props.history.push('/board'))\r\n            .catch(res => console.log(res)) //todo Show an error modal\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"signup-container flex column space-between align-center\">\r\n                <h2>Signup</h2>\r\n                <form className=\"flex column space-between\" onSubmit={this.onSubmit}>\r\n                    <input type=\"text\" placeholder=\"Full name\" name=\"fullName\" onChange={this.inputHandler} required />\r\n                    <input type=\"text\" placeholder=\"username\" name=\"username\" onChange={this.inputHandler} required />\r\n                    <input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={this.inputHandler} required />\r\n                    <button>Signup</button>\r\n                </form>\r\n                <p>Already have an account? <Link to=\"/login\">login</Link></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    signup\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp)","import React from 'react';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport Login from '../cmps/Login.jsx'\r\nimport SignUp from '../cmps/SignUp.jsx'\r\nimport { connect } from 'react-redux'\r\nimport { login, getUser } from '../store/actions/userActions.js'\r\n\r\nclass Home extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.getUser()\r\n            .then(() => {\r\n                if (this.props.loggedUser) this.props.history.push('/board')\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.loggedUser) this.props.history.push('/board')\r\n    }\r\n\r\n    onDemoClick = () => {\r\n        this.props.login({ username: 'guest', password: 'guest' })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"home-container\">\r\n                <div className=\"wallpaper\" />\r\n                <div className=\"home-content-wrapper flex\">\r\n                    <div className=\"home-pitch flex column justify-center align-center\">\r\n                        <h2 className=\"logo\"></h2>\r\n                        <h3 className=\"line-a\">Taskerr</h3>\r\n                        <h3 className=\"line-b\">Like Trello,</h3>\r\n                        <h3 className=\"line-c\">Just better.</h3>\r\n                        <div className=\"demo-btn flex align-center justify-center\" onClick={this.onDemoClick}>Guest mode</div>\r\n                    </div>\r\n                    <div className=\"home-login-container flex justify-center align-center\">\r\n                        <Switch>\r\n                            <Route component={SignUp} path=\"/signup\" />\r\n                            <Route component={Login} path=\"/\" />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n        // return (\r\n        //     <div className=\"waveWrapper waveAnimation\">\r\n        //         <div className=\"waveWrapperInner bgTop\">\r\n        //             <div className=\"wave waveTop\" ></div>\r\n        //         </div>\r\n        //         <div className=\"waveWrapperInner bgMiddle\">\r\n        //             <div className=\"wave waveMiddle\" ></div>\r\n        //         </div>\r\n        //         <div className=\"waveWrapperInner bgBottom\">\r\n        //             <div className=\"wave waveBottom\" ></div>\r\n        //         </div>\r\n        //     </div>\r\n        // )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    getUser\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import Axios from 'axios';\r\nconst baseUrl = (process.env.NODE_ENV !== 'development') ? '/api/board' : '//localhost:3030/api/board';\r\nconst axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    query,\r\n    get,\r\n    remove,\r\n    save\r\n}\r\n\r\nfunction query(filter) {\r\n    return axios.get(baseUrl, { params: { ...filter } })\r\n        .then(res => res.data)\r\n}\r\n\r\nfunction get(id) {\r\n    return axios.get(`${baseUrl}/${id}`)\r\n        .then(res => res.data)\r\n}\r\n\r\nfunction remove(id) {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nfunction save(board) {\r\n    let prm;\r\n    if (board._id) {\r\n        prm = axios.put(`${baseUrl}/${board._id}`, board)\r\n    } else {\r\n        prm = axios.post(baseUrl, board)\r\n    }\r\n    return prm.then(res => res.data)\r\n}\r\n","import io from 'socket.io-client';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n  setup,\r\n  terminate,\r\n  on,\r\n  off,\r\n  emit\r\n};\r\n\r\nfunction setup() {\r\n  socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n\r\n  socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n  socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n  socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  socket.emit(eventName, data);\r\n}\r\n","import boardService from '../../services/boardService.js';\r\nimport socketService from '../../services/socketService.js'\r\n\r\n\r\nexport function setBoards(filter = '') {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const boards = await boardService.query(filter)\r\n            return dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log('boardAction: error in setBoards:', err);\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport function clearCurrBoard() {\r\n    return async dispatch => {\r\n        try {\r\n            return dispatch({ type: 'RESET_BOARD' })\r\n        } catch (err) {\r\n            console.log('Dont earse currBoard', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function setBoard(id) {\r\n    return async dispatch => {\r\n        try {\r\n            const board = await boardService.get(id)\r\n            return dispatch({ type: 'SET_BOARD', board })\r\n        } catch (err) {\r\n            console.log('boardAction: error in setBoard:', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeBoard(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            await boardService.remove(boardId)\r\n            dispatch({ type: 'REMOVE_BOARD', boardId })\r\n\r\n        } catch (err) {\r\n            console.log('boardAction: error in removeBoard:', err);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function saveBoard(board) {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const type = board._id ? 'UPDATE_BOARD' : 'ADD_BOARD';\r\n            const savedBoard = await boardService.save(board)\r\n            socketService.emit('board updated', board._id);\r\n            return dispatch({ type, board: savedBoard })\r\n        } catch (err) {\r\n            console.log('boardAction: error in saveBoard:', err);\r\n        }\r\n    }\r\n}\r\n","import axios from 'axios'\r\n\r\n/* const axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n */\r\n\r\nexport function uploadImg(ev) {\r\n    const CLOUD_NAME = 'dt3cfrjpr'; \r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`;\r\n\r\n    const dataImg = Object.values(ev.target.files)\r\n\r\n    const formDataImg = dataImg.map(img => {\r\n        const formData = new FormData();\r\n        formData.append('file', img);\r\n        formData.append('upload_preset', 'rvddiiry'); // second parameter is the upload preset (you can find it in cloudinary settings)\r\n        return axios.post(UPLOAD_URL, formData)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => console.log(err))\r\n    })\r\n\r\n    return Promise.all(formDataImg)\r\n\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { saveBoard, removeBoard } from '../store/actions/boardActions.js';\r\nimport { uploadImg } from '../services/cloudinaryService.js';\r\n\r\nclass BoardMenu extends React.Component {\r\n\r\n    state = {\r\n        title: '',\r\n        editTitleMode: false,\r\n        isImgLoading: false,\r\n        updateCoverMode: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.addEventListener(\"keydown\", this.closeBoardMenu, false);\r\n        const { board } = this.props;\r\n        this.setState({ title: board.title })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.removeEventListener(\"keydown\", this.closeBoardMenu, false);\r\n    }\r\n\r\n    closeBoardMenu = (e) => {\r\n        const { closeMenu } = this.props;\r\n        if (!this.node.contains(e.target) || e.keyCode === 27) {\r\n            closeMenu();\r\n        }\r\n    }\r\n\r\n    activeEditMode = (e) => {\r\n        e.stopPropagation()\r\n        this.setState({ editTitleMode: true })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.stopPropagation()\r\n        this.setState({ title: e.target.value })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { saveBoard, closeMenu, clearCurrBoard } = this.props;\r\n        let { board } = this.props\r\n        board.title = this.state.title;\r\n        saveBoard(board)\r\n            .then(() => clearCurrBoard())\r\n        this.setState({ editTitleMode: false })\r\n        closeMenu();\r\n    }\r\n\r\n    onRemoveBoard = (e) => {\r\n        e.stopPropagation();\r\n        const { board, removeBoard } = this.props;\r\n        removeBoard(board._id);\r\n    }\r\n\r\n    openCoverMode = () => {\r\n        this.setState({ coverMode: true })\r\n    }\r\n\r\n    closeCoverMode = () => {\r\n        this.setState({ coverMode: false })\r\n    }\r\n\r\n    onUploadImg = (ev) => {\r\n        const { saveBoard, closeMenu, clearCurrBoard } = this.props;\r\n        this.setState({ isImgLoading: true })\r\n        let { board } = this.props\r\n        uploadImg(ev)\r\n            .then(res => {\r\n                board.background.content = res[0].url\r\n                saveBoard(board)\r\n                    .then(() => clearCurrBoard())\r\n                this.setState({ isImgLoading: false })\r\n                closeMenu();\r\n            })\r\n            .catch(() => this.setState({ isImgLoading: false }))\r\n    }\r\n\r\n    onChangeColor = (color) => {\r\n        const { saveBoard, closeMenu, clearCurrBoard } = this.props;\r\n        let { board } = this.props\r\n        board.background.color = color\r\n        board.background.content = '';\r\n        saveBoard(board)\r\n            .then(() => clearCurrBoard())\r\n        closeMenu();\r\n    }\r\n\r\n    render() {\r\n        const { editTitleMode, title, isImgLoading, coverMode } = this.state\r\n\r\n        return (\r\n            <div ref={node => this.node = node} className={`board-menu-container flex column space-between ${isImgLoading && 'box-shadow-off'}`}>\r\n                {isImgLoading ? <div className=\"loading\"></div> :\r\n                    <>\r\n                        {!editTitleMode ? <>\r\n                            <div onClick={this.activeEditMode}>Edit Title</div>\r\n                            <div className=\"update-cover-btn\" onClick={(e) => e.stopPropagation()} onMouseOver={this.openCoverMode} onMouseLeave={this.closeCoverMode}>Update cover\r\n                            {coverMode && <div className=\"change-cover-wrap flex column\">\r\n                                    <div className=\"color-palette flex\">\r\n                                        <div onClick={() => this.onChangeColor('#e74c3c')}>⬤</div>\r\n                                        <div onClick={() => this.onChangeColor('#e67e22')}>⬤</div>\r\n                                        <div onClick={() => this.onChangeColor('#f1c40f')}>⬤</div>\r\n                                        <div onClick={() => this.onChangeColor('#27ae60')}>⬤</div>\r\n                                        <div onClick={() => this.onChangeColor('#2980b9')}>⬤</div>\r\n                                        <div onClick={() => this.onChangeColor('#8e44ad')}>⬤</div>\r\n                                    </div>\r\n                                    <label>\r\n                                        <div className=\"upload-pic-btn\">Upload Image\r\n                                         <input onChange={this.onUploadImg} type=\"file\" hidden accept=\"image/png, image/jpeg\" />\r\n                                        </div>\r\n                                    </label>\r\n                                </div>}\r\n                            </div>\r\n                            <div className=\"delete-btn\" onClick={this.onRemoveBoard}>Delete Board</div>\r\n                        </> :\r\n                            <form className=\"flex\" onSubmit={this.handleSubmit}>\r\n                                <input value={title} onChange={this.handleChange} onBlur={this.handleSubmit} onClick={(e) => e.stopPropagation()} autoFocus spellCheck=\"false\" />\r\n                            </form>}\r\n                    </>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n    removeBoard\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(BoardMenu)","import React from 'react';\r\nimport BoardMenu from './BoardMenu.jsx'\r\n\r\nexport default class BoardPreview extends React.Component {\r\n\r\n    state = {\r\n        isModalOpen: false\r\n    }\r\n\r\n    getBackground(board) {\r\n        return board.background.content ? {\r\n            backgroundImage: \"url(\" + `${board.background.content}` + \")\",\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'no-repeat'\r\n        } : { background: board.background.color }\r\n    }\r\n\r\n    starToggle(board, ev) {\r\n        const { saveBoard, clearCurrBoard } = this.props;\r\n\r\n        ev.stopPropagation()\r\n        board.isStarred = !board.isStarred;\r\n        saveBoard(board)\r\n            .then(() => clearCurrBoard())\r\n    }\r\n\r\n    openMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({ isModalOpen: true });\r\n\r\n    }\r\n\r\n    closeMenu = () => {\r\n        this.setState({ isModalOpen: false })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { isModalOpen } = this.state\r\n        const { board, onBoardClicked, clearCurrBoard, editable } = this.props\r\n\r\n        return (\r\n            < React.Fragment >\r\n                <div className=\"board\" onClick={() => onBoardClicked(board._id)} style={this.getBackground(board)}>\r\n                    <h3>{board.title}</h3>\r\n                    {editable && <div className={`fs24 ${board.isStarred ? 'starred' : 'not-starred'}`} onClick={(ev) => this.starToggle(board, ev)} />}\r\n                    {editable && <div className=\"menu-btn\" onClick={this.openMenu} />}\r\n                    {isModalOpen && <BoardMenu closeMenu={this.closeMenu} board={board} clearCurrBoard={clearCurrBoard} />}\r\n                </div>\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport BoardPreview from './BoardPreview.jsx'\r\n\r\nexport default class BoardList extends React.Component {\r\n    state = {\r\n        addBoardForm: false,\r\n        newBoardTitle: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    escFunction = (event) => {\r\n        if (event.keyCode === 27) {\r\n            this.setState({ addBoardForm: false, newBoardTitle: '' })\r\n        }\r\n    }\r\n\r\n    openForm = () => {\r\n        this.setState({ addBoardForm: true });\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ newBoardTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.createNewBoard();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        if (this.state.newBoardTitle) this.createNewBoard();\r\n        else this.setState({ addBoardForm: false });\r\n    }\r\n\r\n    createNewBoard() {\r\n        const board = { title: this.state.newBoardTitle }\r\n        this.props.saveBoard(board)\r\n        this.setState({ addBoardForm: false, newBoardTitle: '' })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { boards, onBoardClicked, saveBoard, addBoardOption, clearCurrBoard, history, editable } = this.props;\r\n        const { addBoardForm, newBoardTitle } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                {boards.map(board => <BoardPreview history={history} key={board._id} board={board} onBoardClicked={onBoardClicked} saveBoard={saveBoard} clearCurrBoard={clearCurrBoard} editable={editable} />)}\r\n                {addBoardOption && <div className=\"board add-board flex justify-center align-center\" onClick={this.openForm} >\r\n                    {!addBoardForm ? <h3>Create new board</h3> :\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <input placeholder=\"Board title...\" value={newBoardTitle} onChange={this.handleChange} autoFocus onBlur={this.handleBlur} />\r\n                        </form>\r\n                    }\r\n                </div>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport class NavMenuFilter extends React.Component {\r\n\r\n    inputHandler = ({ target }) => {\r\n        this.props.onFilter(target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"nav-menu-filter flex justify-center align-center\">\r\n                <input className=\"board-search\" autoComplete=\"off\" type=\"text\" name=\"keyword\" placeholder=\"Search a board\" onChange={this.inputHandler} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport BoardList from '../cmps/BoardList';\r\nimport { NavMenuFilter } from '../cmps/NavMenuFilter';\r\nimport { connect } from 'react-redux';\r\nimport { setBoards, setBoard } from '../store/actions/boardActions.js';\r\n\r\nclass NavMenu extends React.Component {\r\n\r\n    state = {\r\n        filteredBoards: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.onCloseMenu, false);\r\n        document.addEventListener(\"keydown\", this.onCloseMenu, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.onCloseMenu, false);\r\n        document.removeEventListener(\"keydown\", this.onCloseMenu, false);\r\n    }\r\n\r\n    onCloseMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            // this.setState({ isMenuOpen: false })\r\n            this.props.onCloseMenu();\r\n        }\r\n    }\r\n\r\n    onBoardClicked = (id) => {\r\n        this.props.history.push(`/board/${id}`)\r\n        this.props.setBoard(id)\r\n    }\r\n\r\n    onFilter = (filterBy) => {\r\n        console.log(filterBy);\r\n\r\n        if (!filterBy.length) {\r\n            this.setState({ filteredBoards: null })\r\n            return\r\n        }\r\n        const { boards } = this.props\r\n        const filteredBoards = boards.filter(board => board.title.toLowerCase().includes(filterBy.toLowerCase()));\r\n\r\n        this.setState({ filteredBoards })\r\n    }\r\n\r\n    onHomeBtnClick = () => {\r\n        this.props.history.push(`/board`)\r\n        this.props.onCloseMenu();\r\n    }\r\n\r\n    render() {\r\n        const { currBoard, boards, isMenuActive } = this.props\r\n        const { filteredBoards } = this.state\r\n        let starredBoards = boards.filter(board => board.isStarred);\r\n\r\n        return (\r\n            <div className={`nav-menu flex column ${(isMenuActive)? \"nav-open\": \"\"}`} ref={node => this.node = node}>\r\n                {currBoard &&\r\n                    <div className=\"home-button flex align-center justify-center cursor\" onClick={() => this.onHomeBtnClick()} >\r\n                        <div className=\"dashboard-btn\"></div>\r\n                        <div className=\"flex align-center justify-center\">Dashboard</div>\r\n                    </div>}\r\n                <NavMenuFilter onFilter={(filterBy) => this.onFilter(filterBy)} />\r\n\r\n                <div className=\"nav-boards-preview-wrapper flex column\">\r\n                    <div className=\"nav-board-preview-overlay\"></div>\r\n\r\n                    {filteredBoards && <h3 className=\"label searched-boards-header\">Searched Boards</h3>}\r\n                    {filteredBoards && !filteredBoards.length && <h4 className=\"label no-match\">- There is no matches</h4>}\r\n                    {filteredBoards && <div className=\"boards-container flex column align-center\">\r\n                        <BoardList boards={filteredBoards} onBoardClicked={this.onBoardClicked} />\r\n                    </div>}\r\n\r\n\r\n                    {Boolean(boards.length) && <div>\r\n                        {Boolean(starredBoards.length) && <>\r\n                            <h3 className=\"list-header\">Starred</h3>\r\n                            <div className=\"boards-container flex column align-center\">\r\n                                <BoardList boards={starredBoards} onBoardClicked={this.onBoardClicked} />\r\n                            </div> </>}\r\n                        <div>\r\n                            {/* <h3 className=\"\"></h3> */}\r\n                            <h3 className=\"list-header\">All Boards</h3>\r\n                        </div>\r\n                        <div className=\"boards-container flex column align-center\">\r\n                            <BoardList boards={boards} onBoardClicked={this.onBoardClicked} />\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default withRouter(NavMenu);\r\nconst mapDispatchToProps = {\r\n    setBoards,\r\n    setBoard\r\n}\r\nexport default connect(null, mapDispatchToProps)(withRouter(NavMenu))\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(withRouter(DashBoard))","import React from 'react'\r\n\r\nexport function HistoryNotifications(props) {\r\n    const { notifications , history , isShown  } = props\r\n    return (\r\n        //  <div className={`nav-user-notifications-container ${isShown? 'open-moadl' : ''} flex column align-center`}>\r\n        <>\r\n            <div className=\"notifications-header flex align-center justify-center\">\r\n                <div className=\"history-back-btn\" onClick={()=>props.goBack()}></div>\r\n                <h3>History</h3>\r\n            </div>\r\n\r\n            <div className=\"nav-notifications-wrapper flex column align-center\">\r\n                {notifications.map((notifi, idx) => {\r\n                    return <div className=\"user-notification flex align-center space-between\"\r\n                        key={idx} onClick={(ev) => {\r\n                            ev.stopPropagation()\r\n                            history.push(`${notifi.url}`)\r\n                            }}>\r\n                        <p>{notifi.content}</p>\r\n                    </div>\r\n\r\n                })}\r\n            </div>\r\n        </>\r\n        // </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport function AllReadNotifications(props) {\r\n    return (\r\n        <div className=\"notifications-all-read flex column align-center\">\r\n            <img className=\"notification-nodata\" />\r\n            <h3>All set! No Unread Notifications</h3>\r\n            <span className=\"notifi-history-btn\" onClick={()=>props.showHistory()}>View history</span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nexport function UnReadNotifications(props) {\r\n\r\n    let notifiToShow = props.user.notifications.filter(notifi => !notifi.isRead)\r\n\r\n    return (\r\n        <div className=\"nav-notifications-wrapper flex column align-center\">\r\n            <span className=\"card-notification-clear\" onClick={() => props.markAsRead()}></span>\r\n            {notifiToShow.map((notifi, idx) => {\r\n                if (notifi.type === 'board-collab') {\r\n                    return <div className=\"user-notification flex align-start\" key={idx}>\r\n                        <p>{notifi.data}</p>\r\n                        <div className=\"board-collab-btns flex column space-around\">\r\n                            <button onClick={()=> props.onBoardCollab(notifi , idx)}>Join</button>\r\n                            <button onClick={()=> props.onInviteDecline(idx)}>Decline</button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                else if(notifi.type === 'card-assign'){\r\n                    return <div className=\"user-notification flex column\" key={idx}>\r\n                        <p className=\"card-assign-content\">{notifi.data}</p>\r\n                        <Link className=\"notification-card-link\" to={`/board/${notifi.boardId}/${notifi.cardId}`}>View Card</Link>\r\n                    </div>\r\n                }\r\n                else {\r\n                    return <div className=\"user-notification flex align-center space-between\" key={idx}>\r\n                        <p>{notifi.data}</p>\r\n                        <Link className=\"notification-link\" to={notifi.url}>Details</Link>\r\n                    </div>\r\n                }\r\n\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport userService from '../services/userService'\r\nimport boardService from '../services/boardService'\r\nimport { HistoryNotifications } from './HistoryNotifications'\r\nimport { AllReadNotifications } from './AllReadNotifications';\r\nimport { UnReadNotifications } from './UnReadNotifications';\r\nimport { saveBoard } from '../store/actions/boardActions.js'\r\nimport {getUser , update , setUser} from '../store/actions/userActions'\r\n\r\n\r\nclass NavUserNotificationMenu extends Component {\r\n\r\n    state = {\r\n        // user: null,\r\n        isHistoryShown: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUser()\r\n        document.addEventListener(\"mousedown\", this.onCloseNotificationMenu, false);\r\n        document.addEventListener(\"keydown\", this.onCloseNotificationMenu, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.onCloseNotificationMenu, false);\r\n        document.removeEventListener(\"keydown\", this.onCloseNotificationMenu, false);\r\n    }\r\n\r\n    onCloseNotificationMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.props.onCloseNotificationMenu();\r\n        }\r\n    }\r\n\r\n\r\n    onClearNotification = () => {\r\n        const { loggedUser } = this.props\r\n        userService.clearNotifications(loggedUser)\r\n        this.props.update(loggedUser)\r\n    }\r\n\r\n    onNotificationsHistory = () => {\r\n        this.setState(prevState => ({ isHistoryShown: !prevState.isHistoryShown }))\r\n    }\r\n\r\n    onBoardCollab = (notifi , idx) => {\r\n        const {loggedUser} = this.props\r\n        boardService.get(notifi.collabBoardId)\r\n            .then(res => {\r\n                let userIdxOnBoard = res.members.findIndex(user => user._id === loggedUser._id)\r\n                console.log(userIdxOnBoard);\r\n                \r\n                if(userIdxOnBoard !== -1) {\r\n                    loggedUser.notifications.splice(idx , 1)\r\n                    return\r\n                }\r\n                res.members.push({\r\n                    _id: loggedUser._id ,\r\n                    imgUrl: loggedUser.imgUrl,\r\n                    userName: loggedUser.userName,\r\n                    fullName: loggedUser.fullName\r\n                })\r\n                loggedUser.notifications.splice(idx , 1)\r\n                this.props.update(loggedUser)\r\n                this.props.saveBoard(res)\r\n                this.props.history.push(`/board/${res._id}`)\r\n            },this.props.onCloseNotificationMenu())\r\n            \r\n\r\n        // boardService.get(notifi.collabBoardId)\r\n        //     .then(res => {\r\n        //         res.members.push({\r\n        //             _id: loggedUser._id ,\r\n        //             imgUrl: loggedUser.imgUrl,\r\n        //             userName: loggedUser.userName,\r\n        //             fullName: loggedUser.fullName\r\n        //         })\r\n        //         loggedUser.notifications.splice(idx , 1)\r\n        //         this.props.update(loggedUser)\r\n        //         this.props.saveBoard(res)\r\n        //         this.props.history.push(`/board/${res._id}`)\r\n                \r\n        //     },this.props.onCloseNotificationMenu())\r\n    \r\n}\r\n\r\n    onInviteDecline = (idx) =>{\r\n        const {loggedUser} = this.props\r\n        loggedUser.notifications.splice(idx , 1)\r\n        this.props.update(loggedUser)\r\n    }\r\n\r\n    render() {\r\n        const { loggedUser, isNotificationModalOpen } = this.props\r\n        const { isHistoryShown } = this.state\r\n        let notifiToShow = loggedUser.notifications.filter(notifi => !notifi.isRead)\r\n\r\n        return (\r\n            <div ref={node => this.node = node}>\r\n\r\n                {<div className={`nav-user-notifications-container ${(isNotificationModalOpen) ? \"modal-open\" : \"\"} flex column align-center`}>\r\n                    {isHistoryShown && <HistoryNotifications isShown={isNotificationModalOpen} goBack={this.onNotificationsHistory} notifications={loggedUser.notifications} history={this.props.history} />}\r\n                    {!isHistoryShown &&\r\n                        <>\r\n                            <div className=\"notifications-header\"><h3>Notifications</h3></div>\r\n                            {!notifiToShow.length ?\r\n\r\n                                <AllReadNotifications showHistory={this.onNotificationsHistory} />\r\n                                :\r\n                                <UnReadNotifications onInviteDecline={this.onInviteDecline} markAsRead={this.onClearNotification} notifications={notifiToShow} onBoardCollab={this.onBoardCollab} user={loggedUser} />\r\n                            }\r\n                        </>}\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n    getUser,\r\n    update,\r\n    setUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavUserNotificationMenu)","import React from 'react'\r\n\r\nexport function BoardMembers(props) {\r\n    const { board, history, cardMemberMode } = props\r\n\r\n    return (\r\n        <div className=\"nav-board-members flex align-center\">\r\n\r\n            {board.members.map((member, idx) => {\r\n                if (member.imgUrl) {\r\n                    return <div key={idx} className=\"board-member\" style={{\r\n                        backgroundImage: \"url(\" + `${member.imgUrl}` + \")\",\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat'\r\n                    }} onClick={() => history.push(`/user/${member._id}`)}>\r\n                        <div className=\"board-member-tooltip\">\r\n                            <p>{member.fullName}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                }\r\n                else {\r\n                    return <h3 className=\"nav-user-profile flex justify-center align-center\">{member.fullName.charAt(0)}</h3>\r\n                }\r\n            })}\r\n            {!cardMemberMode && <button className=\"nav-user-profile invite flex align-center justify-center index-1\" onClick={() => props.onInvite()}><div className=\"plus-white flex align-center justify-center\"></div></button>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport userService from '../services/userService.js'\r\n\r\n\r\nexport class MemberPreview extends Component {\r\n\r\n    state = {\r\n        isUserModalOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.onCloseUserModal, false);\r\n        document.addEventListener(\"keydown\", this.onCloseUserModal, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.onCloseUserModal, false);\r\n        document.removeEventListener(\"keydown\", this.onCloseUserModal, false);\r\n    }\r\n\r\n    onCloseUserModal = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.setState({ isUserModalOpen: false });\r\n        }\r\n    }\r\n\r\n    onUserClick = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState(prevState => ({ isUserModalOpen: !prevState.isUserModalOpen }))\r\n    }\r\n\r\n    onUserLogOut = async(ev) => {\r\n        ev.stopPropagation()\r\n        const { history } = this.props\r\n        await userService.logout()\r\n        history.push('/')\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { user, history } = this.props\r\n        const { onUserClick, onUserLogOut } = this\r\n        const { isUserModalOpen } = this.state\r\n\r\n        return (\r\n            <div className=\"user-preview\" ref={node => this.node = node} onClick={onUserClick}>\r\n                {user.imgUrl ?\r\n                    <div className=\"board-member\" style={{\r\n                        backgroundImage: \"url(\" + `${user.imgUrl}` + \")\",\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat'\r\n                    }}>\r\n                    </div>\r\n                    :\r\n                    <h3 className=\"nav-user-profile flex justify-center align-center\">{user.fullName.charAt(0)}</h3>}\r\n\r\n                {<div className={`member-modal ${isUserModalOpen? \"modal-open\": \"\"}`}>\r\n                    <div onClick={() => history.push(`/user/${user._id}`)}> My details </div>\r\n                    <div onClick={(ev) => onUserLogOut(ev)}>Log Out</div>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport BoardList from '../cmps/BoardList';\r\nimport { NavMenuFilter } from '../cmps/NavMenuFilter'\r\n\r\nexport default class NavBarSearch extends React.Component {\r\n\r\n    state = {\r\n        users: null,\r\n        searchWord: \"\",\r\n        filterLists: [],\r\n        filterCards: [],\r\n        isSearchOpenModal: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.onCloseSearchModal, false);\r\n        document.addEventListener(\"keydown\", this.onCloseSearchModal, false);\r\n        this.loadUsers()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.onCloseSearchModal, false);\r\n        document.removeEventListener(\"keydown\", this.onCloseSearchModal, false);\r\n    }\r\n\r\n    loadUsers = () => {\r\n        //TODO load users light array from the server\r\n    }\r\n\r\n    openSearchModal() {\r\n        this.setState({ isSearchOpenModal: true });\r\n    }\r\n\r\n    onCloseSearchModal = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.setState({ isSearchOpenModal: false });\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ searchWord: value }, () => this.onSearch())\r\n    }\r\n\r\n    onBoardClicked = (id) => {\r\n        this.props.history.push(`/board/${id}`)\r\n    }\r\n\r\n    onSearch = () => {\r\n        const { searchWord } = this.state\r\n        const { currBoard, boards } = this.props\r\n\r\n        if (!searchWord.length) {\r\n            this.setState({ filterBoards: [], filterLists: [], filterCards: [], filterUsers: [] })\r\n            return;\r\n        }\r\n        if (boards) {\r\n            let filterBoards = boards.filter(board => board.title.toLowerCase().includes(searchWord.toLowerCase()));\r\n            if (!filterBoards.length) filterBoards = boards;\r\n            this.setState({ filterBoards })\r\n            return\r\n        } else {\r\n            let filterLists = []\r\n            currBoard.cardLists.forEach(cardList => {\r\n                if (cardList.title.toLowerCase().includes(searchWord.toLowerCase())) {\r\n                    cardList.boardId = currBoard._id;\r\n                    cardList.boardTitle = currBoard.title;\r\n                    filterLists.push(cardList)\r\n                }\r\n            });\r\n\r\n            let filterCards = []\r\n            currBoard.cardLists.forEach(cardList => {\r\n                cardList.cards.forEach(card => {\r\n                    if (card.text.toLowerCase().includes(searchWord.toLowerCase())) {\r\n                        card.boardId = currBoard._id;\r\n                        card.boardTitle = currBoard.title;\r\n                        card.cardListId = cardList.id;\r\n                        card.cardListTitle = cardList.title;\r\n                        filterCards.push(card)\r\n                    }\r\n                })\r\n            });\r\n            this.setState({ filterLists, filterCards })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { searchWord, filterLists, filterCards, filterBoards, isSearchOpenModal } = this.state\r\n        const { currBoard, history } = this.props\r\n        let starredBoards\r\n        if (filterBoards) starredBoards = filterBoards.filter(board => board.isStarred)\r\n\r\n\r\n        return (\r\n            <div ref={node => this.node = node} className=\" nav-search-result-container flex column\">\r\n\r\n                <input onClick={() => this.openSearchModal()} autoComplete=\"off\" onSubmit={() => this.onSearch} className=\"card-search\" type=\"text\" value={searchWord} name=\"keyword\" placeholder=\"Search\" onChange={this.handleChange} />\r\n                <div className={`nav-search-result ${(isSearchOpenModal) ? \"open-modal\" : \"\"} flex column`}>\r\n                    {filterBoards && Boolean(filterBoards.length) &&\r\n\r\n                        <div>\r\n                            <h3 className=\"result-header\">Board result</h3>\r\n                            <div className=\"search-results\">\r\n                                {filterBoards.map(board =>\r\n                                    <div className=\"result-preview\" onClick={() => history.push(`/board/${board._id}`)}>\r\n                                        <div className=\"board-btn\"></div>\r\n                                        <div className=\"header\">{board.title}</div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>}\r\n                    {!Boolean(filterLists.length) && !Boolean(filterCards.length) &&\r\n                        <div className='empty-search-massage'>\r\n                            <div className=\"search\"></div>\r\n                            <div>Search</div>\r\n                        </div>}\r\n\r\n                    {\r\n                        /* filterLists && Boolean(filterLists.length) &&\r\n                        <>\r\n                            <div className=\"result-header\" >List results</div>\r\n                            <div className=\"search-results\">\r\n                                {filterLists.map(list => (\r\n                                    <div className=\"result-preview\">\r\n                                        <div className=\"list-pic\"></div>\r\n                                        <div className=\"header\">{list.title}</div>\r\n                                        <div className=\"conjunction\">(list)</div>\r\n                                        <div className=\"conjunction\">from</div>\r\n                                        <div className=\"header\">{list.boardTitle}</div>\r\n                                        <div className=\"conjunction\">(board)</div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </> */\r\n                    }\r\n                    {filterCards && Boolean(filterCards.length) &&\r\n                        <>\r\n                            <div className=\"result-header\">{/* Card results */}</div>\r\n                            <div className=\"search-results\">\r\n                                {filterCards.map(card => (\r\n                                    <div className=\"result-preview\" onClick={() => history.push(`/board/${currBoard._id}/${card.id}`)}>\r\n                                        <div className=\"card result-icon\" ></div>\r\n                                        <div className=\"text-result\">\r\n                                            <div className=\"header\">{card.text}</div>\r\n                                            {/* <div className=\"conjunction\">(card)</div> */}\r\n                                            <div className=\"conjunction\">in</div>\r\n                                            <div className=\"conjunction\">{card.cardListTitle}</div>\r\n                                            {/* <div className=\"conjunction\">(list)</div> */}\r\n                                            {/* <div className=\"conjunction\">from</div>\r\n                                            <div className=\"header\">{card.boardTitle}</div>\r\n                                            <div className=\"conjunction\">(board)</div> */}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </>}\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport { connect } from 'react-redux'\r\nimport socketService from '../services/socketService'\r\n\r\nclass InviteMemberModal extends Component {\r\n\r\n    state = {\r\n        filteredUsers: null,\r\n        isAlreadyInvitesShown: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadUsers()\r\n        document.addEventListener(\"mousedown\", this.onCloseInviteMenu, false);\r\n        document.addEventListener(\"keydown\", this.onCloseInviteMenu, false);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.loggedUser !== this.props.loggedUser)\r\n            this.props.loadUsers()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.onCloseInviteMenu, false);\r\n        document.removeEventListener(\"keydown\", this.onCloseInviteMenu, false);\r\n    }\r\n\r\n    onCloseInviteMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            // this.setState({ isMenuOpen: false })\r\n            this.props.onCloseInviteMenu();\r\n        }\r\n    }\r\n\r\n    inputHandler = ({ target }) => {\r\n        if (!target.value) {\r\n            this.setState({ filteredUsers: null })\r\n            return\r\n        }\r\n\r\n        let keyWord = target.value.toLowerCase()\r\n        const { users } = this.props\r\n        let filteredUsers = users.filter(user => user.userName.includes(keyWord.toLowerCase()))\r\n        this.setState({ filteredUsers })\r\n    }\r\n\r\n    onInvite = (userId) => {\r\n      let userIdxInBoard = this.props.activeBoard.members.findIndex(user => user._id === userId)\r\n      if(userIdxInBoard !== -1){\r\n       this.setState({isAlreadyInvitesShown: true})\r\n       setTimeout(()=>{\r\n        this.setState({isAlreadyInvitesShown: false})\r\n       },1500)\r\n        return\r\n      }\r\n        let data = {\r\n            invitedUserId: userId,\r\n            sender: this.props.loggedUser.userName,\r\n            collabBoardId: this.props.activeBoard._id,\r\n            createdAt: Date.now()\r\n        }\r\n        socketService.emit('user invite', data);\r\n    }\r\n\r\n    render() {\r\n        const { filteredUsers , isAlreadyInvitesShown } = this.state\r\n        const { isInviteModalOpen } = this.props\r\n        console.log(isInviteModalOpen)\r\n\r\n        return (\r\n            <div ref={node => this.node = node} className={`invite-members-modal ${(isInviteModalOpen) ? 'modal-open' : ''} flex column align-center`}>\r\n                <div className=\"invite-header\"><h3>Invite to collaborate</h3></div>\r\n                {isAlreadyInvitesShown && <p>User already a member!</p>}\r\n                <input type=\"text\" placeholder=\"Enter userName to invite\" onKeyUp={this.inputHandler} />\r\n                {filteredUsers && <div className=\"invite-users-list flex column align-center\">\r\n                    {filteredUsers.map((user, idx) => {\r\n                        return <div key={idx} className=\"user-to-invite flex align-center space-between \">\r\n                            <span className=\"nav-user-profile\" style={{\r\n                                backgroundImage: \"url(\" + `${user.imgUrl}` + \")\",\r\n                                backgroundPosition: 'center',\r\n                                backgroundSize: 'cover',\r\n                                backgroundRepeat: 'no-repeat'\r\n                            }}>\r\n                            </span>\r\n                            <h4>{user.fullName}</h4>\r\n                            <button className=\"user-invite-btn\" onClick={() => this.onInvite(user._id)}>Invite</button>\r\n                            {user.isLogIn &&\r\n                                <div className=\"user-status flex column align-center\">\r\n                                    <span className=\"user-online\"></span>\r\n                                    <h5>Online</h5>\r\n                                </div>}\r\n\r\n                            {!user.isLogIn &&\r\n                                <div className=\"user-status flex column align-center\">\r\n                                    <span className=\"user-offline\"></span>\r\n                                    <h5>Offline</h5>\r\n                                </div>}\r\n\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.user.users,\r\n        loggedUser: state.user.loggedInUser,\r\n        activeBoard: state.boardApp.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadUsers\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InviteMemberModal)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport moment from 'moment'\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nlet data = {\r\n    labels: ['23/5', '24/5', '25/5', '26/5', '27/5', '28/5', '29/5'],\r\n    datasets: [\r\n        {\r\n            label: 'Eliyahu Dayan',\r\n            backgroundColor: 'rgba(255,99,132,0.2)',\r\n            borderColor: 'rgba(255,99,132,1)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n            hoverBorderColor: 'rgba(255,99,132,1)',\r\n            data: [3, 4, 1, 3, 4, 5, 6]\r\n        },\r\n        {\r\n            label: 'Dor Ben Itzhak',\r\n            backgroundColor: 'rgba(111,11,11,0.2)',\r\n            borderColor: 'rgba(111,11,11,1)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'rgba(111,11,11,0.4)',\r\n            hoverBorderColor: 'rgba(111,11,11,1)',\r\n            data: [1, 2, 3, 2, 1, 1, 3]\r\n        },\r\n        {\r\n            label: 'Reem Alon',\r\n            backgroundColor: 'rgba(222,22,22,0.2)',\r\n            borderColor: 'rgba(222,22,22,1)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'rgba(222,22,22,0.4)',\r\n            hoverBorderColor: 'rgba(222,22,22,2)',\r\n            data: [3, 2, 5, 1, 6, 5, 2]\r\n        }\r\n    ]\r\n};\r\n\r\n\r\nclass ChartBar extends Component {\r\n\r\n    state = {\r\n        usersData: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ usersData: data })\r\n    }\r\n\r\n    // usersDataGenerator = () => {\r\n    //     let data = {};\r\n    //     const dateNow = Date.now()\r\n    //     data.labels = []\r\n    //     for (let step = 5; step > 0; step--) {\r\n    //         const day = 1000 * 60 * 60 * 24;\r\n    //         data.labels.push(moment(dateNow - (day * step)).format(\"MMM Do\"))\r\n    //     }\r\n    //     ;\r\n    //     let usersDoneCard = this.reducerJoinTaskByUser();\r\n    //     for (const userId in usersDoneCard) {\r\n    //         data.datasets.push({\r\n    //             label: usersDoneCard[userId].doneBy.name,\r\n    //             backgroundColor: 'rgba(111,11,11,0.2)',\r\n    //             borderColor: 'rgba(111,11,11,1)',\r\n    //             borderWidth: 1,\r\n    //             hoverBackgroundColor: 'rgba(111,11,11,0.4)',\r\n    //             hoverBorderColor: 'rgba(111,11,11,1)',\r\n    //             data: [65, 59, 80, 81, 56, 55, 40]\r\n    //         })\r\n    //     }\r\n\r\n    // }\r\n\r\n    // reducerJoinTaskByUser = () => {\r\n    //     const currBoard = this.state;\r\n\r\n    //     return currBoard.cardLists.reducer((acc, cardList) => {\r\n    //         cardList.cards.forEach(card => {\r\n    //             card.checkList.forEach(checkBox => {\r\n    //                 if (checkBox.isDone && checkBox.doneBy) {\r\n    //                     if (!acc[checkBox.doneBy.id]) {\r\n    //                         acc[checkBox.doneBy.id] = []\r\n    //                         acc[checkBox.doneBy.id].push(checkBox);\r\n    //                     } else {\r\n    //                         acc[checkBox.doneBy.id].push(checkBox);\r\n    //                     }\r\n    //                 }\r\n\r\n    //             })\r\n    //         })\r\n    //         return acc\r\n    //     }, {})\r\n    // }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { usersData } = this.state;\r\n\r\n        return (\r\n            <div className=\"chart-bar\">\r\n                <h2>Bar Example (custom size)</h2>\r\n                <Bar\r\n                    data={usersData}\r\n                    width={10}\r\n                    height={5}\r\n                    options={{\r\n                        maintainAspectRatio: false,\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartBar)","import React, { Component } from 'react'\r\nimport {Pie} from 'react-chartjs-2';\r\n\r\nconst data = {\r\n\tlabels: [\r\n\t\t'Todo',\r\n\t\t'In progress',\r\n\t\t'Done'\r\n\t],\r\n\tdatasets: [{\r\n\t\tdata: [300, 50, 100],\r\n\t\tbackgroundColor: [\r\n\t\t'#FF6384',\r\n\t\t'#36A2EB',\r\n\t\t'#FFCE56'\r\n\t\t],\r\n\t\thoverBackgroundColor: [\r\n\t\t'#FF6384',\r\n\t\t'#36A2EB',\r\n\t\t'#FFCE56'\r\n\t\t]\r\n\t}]\r\n};\r\n\r\n\r\n\r\nexport default class ChartPay extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"chart-pay\">\r\n        <h2>Pie Example</h2>\r\n        <Pie data={data} />\r\n      </div>\r\n    );\r\n  }\r\n};","import React, { Component } from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst data = {\r\n    labels: ['23/5', '24/5', '25/5', '26/5', '27/5', '28/5', '29/5'],\r\n    datasets: [\r\n        {\r\n            label: 'Todo',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba($clrChart8,0.4)',\r\n            borderColor: 'rgba($clrChart8,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba($clrChart8,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba($clrChart8,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [3, 2, 5, 1, 6, 5, 2]\r\n        }, {\r\n            label: 'In progress',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba($clrChart7,0.4)',\r\n            borderColor: 'rgba($clrChart7,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba($clrChart7,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba($clrChart7,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [3, 4, 1, 3, 4, 5, 6]\r\n        }, {\r\n            label: 'Done',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba($clrChart6,0.4)',\r\n            borderColor: 'rgba($clrChart6,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba($clrChart6,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba($clrChart6, 1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [1, 2, 3, 2, 1, 1, 3]\r\n        }\r\n    ]\r\n};\r\n\r\n\r\n\r\nexport default class ChartLine extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chart-line\">\r\n                <h2>Line Example</h2>\r\n                <Line data={data} />\r\n            </div>\r\n        );\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport ChartBar from '../cmps/ChartBar.jsx';\r\nimport ChartPay from '../cmps/ChartPay.jsx';\r\nimport ChartLine from '../cmps/ChartLine.jsx';\r\n\r\n\r\nexport default class ChartModal extends Component {\r\n    state = {\r\n        isCartModalOpen: false\r\n    }\r\n    \r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.closeStatisticModal, false);\r\n        document.addEventListener(\"keydown\", this.closeStatisticModal, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.closeStatisticModal, false);\r\n        document.removeEventListener(\"keydown\", this.closeStatisticModal, false);\r\n    }\r\n\r\n    closeStatisticModal = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.setState({ isCartModalOpen: false })\r\n        }\r\n    }\r\n\r\n    onChartClick = () => {\r\n        this.setState(prevState => ({ isCartModalOpen: !prevState.isCartModalOpen }))\r\n    }\r\n\r\n    render() {\r\n        const { isCartModalOpen } = this.state;\r\n\r\n\r\n        return (\r\n            <div className={`chart-container `}>\r\n                <div className=\"nav-chart-btn chart\" onClick={this.onChartClick}></div>\r\n                <div className={`screen  ${(isCartModalOpen) ? \"modal-open\" : \"\"} `}>\r\n                    <div ref={node => this.node = node} className=\"chart-modal flex wrap\">\r\n                        <ChartPay />\r\n                        <ChartLine />\r\n                        {/* <ChartBar /> */}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\n\r\nexport default {\r\n    notification\r\n}\r\n\r\nfunction notification(){\r\n    var notifiPing = new Audio('https://res.cloudinary.com/dt3cfrjpr/video/upload/v1590757355/messenger_d1vdx5.mp3');\r\n    notifiPing.volume = 0.15;\r\n    notifiPing.play();\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { CardCommentsList } from './CardCommentsList'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nimport socketService from '../services/socketService'\r\n\r\nlet typingInterval;\r\n\r\nclass CardComments extends Component {\r\n\r\n    state = {\r\n        userMsg: '',\r\n        isTypeActive: false,\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = this.props.card.id\r\n\r\n        socketService.on(`user-type-${id}`, (status) => {\r\n            console.log('Get Focus Status from server');\r\n            this.setState({isTypeActive: status})\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const id = this.props.card.id\r\n        socketService.off(`user-type-${id}`)\r\n    }\r\n\r\n    onUserType = ({target}) => {\r\n        \r\n        const id = this.props.card.id\r\n        this.setState({userMsg: target.value})\r\n        clearInterval(typingInterval);\r\n        socketService.emit('user typing' , {id , status: true} )\r\n        typingInterval = setTimeout(()=>{\r\n            socketService.emit('user typing' , {id , status: false} ) \r\n        },550)\r\n\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const {card , board , user} = this.props\r\n        const { userMsg } = this.state\r\n        if(!userMsg) return\r\n\r\n        let data = {\r\n            \r\n            userName: user.userName,\r\n            txt: userMsg,\r\n            imgUrl: user.imgUrl,\r\n            createdAt: Date.now()\r\n            \r\n        }\r\n        card.comments.unshift(data)\r\n        this.props.saveBoard(board)\r\n            .then(() => socketService.emit('board updated', board._id));\r\n        this.setState({userMsg: ''})\r\n    }\r\n\r\n    deleteComment = (idx) => {\r\n        const { card, board } = this.props\r\n        card.comments.splice(idx,1)\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    render() {\r\n        const { currUser, card, board } = this.props\r\n        const {userMsg , isTypeActive} = this.state\r\n        if(!currUser) return ''\r\n        return (\r\n            <div className=\"card-comments\">\r\n                <div className=\"flex align-center\" style={{ marginBottom: \"15px\" }}>\r\n                    <span className=\"comment\" />\r\n                    <h4>Comments</h4>\r\n                </div>\r\n               <div className=\"card-add-comment flex align-center\" style={{ marginLeft: \"40px\", marginBottom: \"15px\" }}>\r\n               {currUser.imgUrl &&   <div className=\"self-profile-comment\" style={{\r\n                        backgroundImage: \"url(\" + `${currUser.imgUrl}` + \")\",\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat'\r\n                    }} >\r\n                    </div>}\r\n                    {!currUser.imgUrl && <h3 style={{marginLeft: \"0px\" , marginRight:\"15px\"}} className=\"card-user-profile flex justify-center align-center\">{currUser.fullName.charAt(0)}</h3>}\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <input className=\"user-text-input\" type=\"text\" placeholder={currUser.userName + \", whats on your mind?\"}\r\n                            onChange={this.onUserType} value={userMsg}  />\r\n                    </form>\r\n                    {isTypeActive && <span className=\"pulse\" />}\r\n                </div>\r\n                < CardCommentsList card={card} user={currUser} board={board} deleteComment={this.deleteComment} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currUser: state.user.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardComments)","import React from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n// import boardService from \"../services/boardService.js\"\r\nimport NavMenu from '../cmps/NavMenu'\r\nimport NavUserNotificationMenu from './NavUserNotificationMenu'\r\nimport { connect } from 'react-redux'\r\nimport { setBoards, setBoard } from '../store/actions/boardActions.js'\r\nimport { getUser, update } from '../store/actions/userActions.js'\r\nimport { BoardMembers } from './BoardMembers'\r\nimport { MemberPreview } from './MemberPreview'\r\nimport NavBarSearch from './NavBarSearch'\r\nimport InviteMemberModal from './InviteMemberModal'\r\nimport socketService from '../services/socketService'\r\nimport ChartModal from './ChartModal';\r\nimport moment from 'moment'\r\nimport soundService from '../services/soundService'\r\n\r\nclass NavBar extends React.Component {\r\n\r\n    state = {\r\n        isMenuActive: false,\r\n        isInviteModalOpen: null,\r\n        isNotificationModalOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        socketService.setup()\r\n        this.props.getUser()\r\n            .then(() => {\r\n                if (this.props.loggedUser) {\r\n                    socketService.on(`user-invite-${this.props.loggedUser._id}`, (invData) => {\r\n                        this.notifiBoardCollab(invData);\r\n                    })\r\n\r\n                    socketService.on(`user-card-assign-${this.props.loggedUser._id}`, (assignData) => {\r\n                        this.notifiCardAssign(assignData);\r\n                    })\r\n                }\r\n                if (!this.props.loggedUser) this.props.history.push('/')\r\n                else this.props.setBoards()\r\n            })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n       \r\n    }\r\n\r\n    notifiBoardCollab = (invData) => {\r\n        this.props.loggedUser.notifications.unshift({\r\n            data: `Exciting news! ${invData.sender} invited you to collaborate in a board.`,\r\n            createdAt: moment(invData.createdAt).fromNow(),\r\n            collabBoardId: invData.collabBoardId,\r\n            isRead: false,\r\n            type: 'board-collab'\r\n        })\r\n        this.props.update(this.props.loggedUser)\r\n        soundService.notification()\r\n    }\r\n\r\n    notifiCardAssign = (assignData) => {\r\n        this.props.loggedUser.notifications.unshift({\r\n            data: `Congratz! you have new card assign by ${assignData.assingedBy}.`,\r\n            type: 'card-assign',\r\n            isRead: false,\r\n            cardId: assignData.cardId,\r\n            boardId: assignData.boardId\r\n        })\r\n        this.props.update(this.props.loggedUser)\r\n        soundService.notification()\r\n    }\r\n\r\n    onMenuClick = () => {\r\n        this.setState(prevState => ({ isMenuActive: !prevState.isMenuActive }))\r\n    }\r\n\r\n    onCloseMenu = () => {\r\n        this.setState({ isMenuActive: false })\r\n    }\r\n\r\n    onCloseInviteMenu = () => {\r\n        this.setState({ isInviteModalOpen: false })\r\n    }\r\n\r\n    onCloseNotificationMenu = () => {\r\n        this.setState({ isNotificationModalOpen: false })\r\n    }\r\n\r\n    onUserNotificationClick = () => {\r\n        this.setState(prevState => ({ isNotificationModalOpen: !prevState.isNotificationModalOpen }))\r\n    }\r\n\r\n    onInviteMember = () => {\r\n        this.setState(prevState => ({ isInviteModalOpen: !prevState.isInviteModalOpen }))\r\n    }\r\n\r\n    render() {\r\n        const { isMenuActive, isNotificationModalOpen, isInviteModalOpen } = this.state\r\n        const { boards, activeBoard, history, loggedUser } = this.props\r\n        const { onCloseInviteMenu, onInviteMember, onCloseNotificationMenu } = this\r\n        let notifiToShow;\r\n        if (loggedUser) {\r\n            notifiToShow = loggedUser.notifications.filter(notifi => !notifi.isRead)\r\n        }\r\n\r\n        if (!loggedUser) return <></>\r\n        return (\r\n            <nav className=\"nav-bar flex align-center space-between\" >\r\n                {!activeBoard && <div className=\"img-wrapper\"onClick={() => this.props.history.push('/board')}>\r\n                    <img className=\"logo\" width='60px' alt=\"\" />\r\n                </div>}\r\n                <div className=\"nav-left-section flex align-center\">\r\n                    {activeBoard &&\r\n                        <div className=\"board-button flex align-center justiry-center space-between cursor\" onClick={this.onMenuClick}>\r\n                            <div style={{ marginRight: \"5px\" }} className=\"board-btn\"></div>\r\n                            <div className=\"board-txt\">Boards</div>\r\n                        </div>}\r\n\r\n                    {activeBoard && <BoardMembers onInvite={onInviteMember} history={history} board={activeBoard} />}\r\n                    {activeBoard && <InviteMemberModal isInviteModalOpen={isInviteModalOpen} onCloseInviteMenu={onCloseInviteMenu} />}\r\n                </div>\r\n                {< NavBarSearch /* boards={boards} */ history={history} currBoard={activeBoard} history={history} />}\r\n                {<NavMenu history={history} isMenuActive={isMenuActive} boards={boards} currBoard={activeBoard} onCloseMenu={this.onCloseMenu} />}\r\n                <div className=\"nav-right-section flex align-center\">\r\n                    {/* <button className=\"board-menu\" onClick={() => history.push(`/board`)}>Board Menu</button> */}\r\n                    {activeBoard && <ChartModal />}\r\n                    <span style={{ backgroundColor: `${notifiToShow.length ? \"rgb(252, 115, 126)\" : \"\"} ` }} className=\"nav-notification-btn\" onClick={this.onUserNotificationClick}></span>\r\n                    {<NavUserNotificationMenu onCloseNotificationMenu={onCloseNotificationMenu} isNotificationModalOpen={isNotificationModalOpen} history={history} user={loggedUser} />}\r\n                    <MemberPreview user={loggedUser} history={history} />\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedUser: state.user.loggedInUser,\r\n        boards: state.boardApp.boards,\r\n        activeBoard: state.boardApp.currBoard,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setBoards,\r\n    setBoard,\r\n    getUser,\r\n    update\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavBar))\r\n","import React from 'react';\r\nimport { update, /* getUserById */ } from '../store/actions/userActions.js'\r\nimport { connect } from 'react-redux';\r\nimport userService from '../services/userService.js'\r\n\r\nclass UserDetails extends React.Component {\r\n\r\n    state = {\r\n        user: null\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user;\r\n        const id = this.props.match.params.userId;\r\n        userService.getById(id)\r\n            .then(res => {\r\n                user = res\r\n                if (!user) this.props.history.push('/')\r\n                else {\r\n                    this.setState({ user })\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { user } = this.state;\r\n        if (!user) return <h3>Loading...</h3>\r\n\r\n        return (<div className=\"user-profile-container flex column\">\r\n            <h2>{user.fullName}'s Profile</h2>\r\n            <div></div>\r\n            <img className=\"user-img\" src={user.imgUrl} />\r\n            <p>User Name: {user.userName}</p>\r\n            <p>About:{user.about}</p>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // loggedUser: state.user.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    // getUserById,\r\n    update\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDetails)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport BoardList from '../cmps/BoardList.jsx';\r\nimport { setBoards, saveBoard, clearCurrBoard } from '../store/actions/boardActions.js'\r\nimport socketService from '../services/socketService'\r\nimport moment from 'moment'\r\nimport { setUser, getUser, update } from '../store/actions/userActions'\r\n\r\nclass DashBoard extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.setBoards()\r\n        this.props.getUser()\r\n    }\r\n\r\n\r\n    onBoardClicked = (id) => {\r\n        this.props.history.push(`/board/${id}`)\r\n    }\r\n\r\n    render() {\r\n        const { boards, saveBoard, clearCurrBoard } = this.props;\r\n        let filteredBoards = boards.filter(board => board.isStarred);\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <section className=\"boards-main-container\">\r\n                    {Boolean(filteredBoards.length) && <h3 className=\"starred-title\">Starred</h3>}\r\n                    <div className=\"boards-container flex\">\r\n                        <BoardList boards={filteredBoards} onBoardClicked={this.onBoardClicked} saveBoard={saveBoard} clearCurrBoard={clearCurrBoard} editable={true} />\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"boards-main-container\">\r\n                    <h3 className=\"all-board-title\">All Boards</h3>\r\n                    <div className=\"boards-container flex\">\r\n                        <BoardList boards={boards} onBoardClicked={this.onBoardClicked} saveBoard={saveBoard} clearCurrBoard={clearCurrBoard} addBoardOption={true} editable={true} />\r\n                    </div>\r\n                </section>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        boards: state.boardApp.boards,\r\n        loggedUser: state.user.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setBoards,\r\n    saveBoard,\r\n    clearCurrBoard,\r\n    setUser,\r\n    getUser,\r\n    update\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashBoard)","import React from 'react'\r\n\r\nexport function CardActions(props) {\r\n    return (\r\n        <div className=\"card-details-actions flex column align-center\">\r\n\r\n            <h4>ADD TO CARD</h4>\r\n\r\n            {/* <span className=\"card-action-wrapper flex align-center\" onClick={props.onMembers}>\r\n                <span className=\"members \" > </span>\r\n                <h5 className=\"action-title \">Members</h5>\r\n            </span> */}\r\n\r\n            <span className=\"card-action-wrapper flex align-center\" onClick={props.onLabels}>\r\n                <span className=\"label \" > </span>\r\n                <h5 className=\"action-title \">Lables</h5>\r\n            </span>\r\n\r\n            <span className=\"card-action-wrapper flex align-center\" onClick={props.onImages} >\r\n                <span className=\"attachments \" > </span>\r\n                <h5 className=\"action-title \">Images</h5>\r\n            </span>\r\n\r\n            <span className=\"card-action-wrapper flex align-center\">\r\n                <span className=\"list \" > </span>\r\n                <h5 className=\"action-title \">Todos</h5>\r\n            </span>\r\n\r\n            <span className=\"card-action-wrapper flex align-center\" onClick={() => props.openDatePicker()}>\r\n                <span className=\"clock \" > </span>\r\n                <h5 className=\"action-title \">Due Date</h5>\r\n            </span>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nexport function CardCommentsList(props) {\r\n    const { card, board, user } = props\r\n    return (\r\n        <div className=\"card-msgs-container\">\r\n            {card.comments.map((comment, idx) => {\r\n                return <div key={idx} className=\"card-comment-wrapper flex align-start\" style={{ marginLeft: \"44px\", width: \"370px\" }}>\r\n                    {user.imgUrl && <div className=\"user-profile-comment\" style={{\r\n                        backgroundImage: \"url(\" + `${comment.imgUrl}` + \")\",\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat',\r\n                        minWidth:\"30px\"\r\n                    }} >\r\n                    </div>}\r\n                    {!user.imgUrl && <h3 style={{ marginLeft: \"0px\", marginRight: \"15px\", width: \"30px\", height: \"30px\" }} className=\"card-user-profile flex justify-center align-center\">{user.fullName.charAt(0)}</h3>}\r\n                    <div style={{width:\"100%\" , marginBottom: \"10px\"}} className=\"flex column align-start\">\r\n                        <p className=\"card-msg-txt\">{comment.txt} </p>\r\n                        <div className=\"flex align-center\">\r\n                            <p className=\"card-msg-time\">{moment(comment.createdAt).fromNow()} </p>\r\n                            <button className=\"card-msg-delete\" onClick={() => props.deleteComment(idx)}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nclass CardDescription extends Component {\r\n\r\n    state = {\r\n        isEditMode: false,\r\n        description: '',\r\n        dynamicClass: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { card, board } = this.props\r\n        this.setState({ description: card.description })\r\n    }\r\n\r\n    onDescClicked = () => {\r\n        this.setState({ isEditMode: true })\r\n    }\r\n\r\n    onTextAreaLeave = () => {\r\n        const { card, board } = this.props\r\n        this.setState({ isEditMode: false, dynamicClass: '' }, () => {\r\n            card.description = this.state.description\r\n            this.props.saveBoard(board)\r\n        })\r\n    }\r\n\r\n    onTextFocus = () => {\r\n        this.setState({ dynamicClass: 'text-area' })\r\n    }\r\n\r\n    onDescEdit = ({ target }) => {\r\n\r\n        this.setState({ description: target.value })\r\n\r\n    }\r\n\r\n    moveCaretAtEnd(ev) {\r\n        var temp_value = ev.target.value\r\n        ev.target.value = ''\r\n        ev.target.value = temp_value\r\n    }\r\n\r\n\r\n    render() {\r\n        const { card } = this.props\r\n        const { isEditMode, description, dynamicClass } = this.state\r\n        return (\r\n            <div className=\"card-details-description\">\r\n                <div className=\"flex \">\r\n                    <span className=\"text\"></span>\r\n                    <h4>Description</h4>\r\n                </div>\r\n                {!isEditMode && <p onClick={this.onDescClicked}>{card.description || 'Add some details about this board'}</p>}\r\n                {isEditMode && <TextareaAutosize className={dynamicClass} onFocus={this.onTextFocus} onBlur={this.onTextAreaLeave} type=\"text\" autoFocus={true}\r\n                    value={description} placeholder=\"Add more details about this card...\" onChange={this.onDescEdit}\r\n                    onFocus={this.moveCaretAtEnd} spellCheck={false} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CardDescription)","import React from 'react'\r\nexport function CardMembersList(props) {\r\n    const { board, card, opacity  } = props\r\n    return (\r\n        <div className={`add-card-member-modal ${opacity} flex align-center`}>\r\n            <div className=\"nav-board-members flex align-center\">\r\n\r\n                {board.members.map((member, idx) => {\r\n                    let dynamicClass = ''\r\n                    if (idx === 0) dynamicClass = 'first-member'\r\n                    let letUserIdx = card.members.findIndex(user => user._id === member._id)\r\n                    if (member.imgUrl) {\r\n                        return <div key={idx} className=\"flex column align-center\">\r\n                            {letUserIdx !== -1 && <div style={{marginLeft: `${!idx? '' : '-2px'}`}} className=\"member-overlay\"> </div>}\r\n                            <div  className={dynamicClass + \" \" + \"board-member\"} style={{\r\n                                backgroundImage: \"url(\" + `${member.imgUrl}` + \")\",\r\n                                backgroundPosition: 'center',\r\n                                backgroundSize: 'cover',\r\n                                backgroundRepeat: 'no-repeat'\r\n                            }} onClick={() => props.addMember(member)}>\r\n                                <div className=\"board-member-tooltip\">\r\n                                    <p>{member.fullName}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    else {\r\n                        return <h3 onClick={() => props.addMember(member)} className=\"card-user-profile flex justify-center align-center\">{member.fullName.charAt(0)}</h3>\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard, setBoard } from '../store/actions/boardActions'\r\nimport { CardMembersList } from './CardMembersList'\r\nimport socketService from '../services/socketService'\r\n\r\nclass CardMembers extends Component {\r\n\r\n    state = {\r\n        isAddMemberActive: false,\r\n        isMouseHoverUser: false\r\n    }\r\n\r\n\r\n    onAddMember = () => {\r\n        this.setState(prevState => ({ isAddMemberActive: !prevState.isAddMemberActive }))\r\n    }\r\n\r\n\r\n    addMember = (member) => {\r\n        \r\n        const { card, board , user } = this.props\r\n        console.log(card.id , board._id);\r\n        let idx = card.members.findIndex(user => user._id === member._id)\r\n        if (idx !== -1) return\r\n\r\n        card.members.push(member)\r\n        this.props.saveBoard(board)\r\n        this.props.setBoard(board._id)\r\n        let data = {\r\n            assignedUserId: member._id,\r\n            assingedBy: user.userName,\r\n            cardId: card.id,\r\n            boardId: board._id\r\n        }\r\n        socketService.emit('user card assign', data);\r\n    }\r\n\r\n    onMouseEnter = () => {\r\n        this.setState({ isMouseHoverUser: true })\r\n    }\r\n\r\n    onMouseLeave = () => {\r\n        this.setState({ isMouseHoverUser: false })\r\n    }\r\n\r\n    onRemoveCardUser = (idx, ev) => {\r\n        ev.stopPropagation()\r\n        const { card, board } = this.props\r\n        card.members.splice(idx, 1)\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    render() {\r\n        const { card, history, board , showModal} = this.props\r\n        const { isAddMemberActive, isMouseHoverUser } = this.state\r\n        \r\n        return (\r\n            <div style={{ marginBottom: \"30px\", marginLeft: \"42px\" }} className=\"flex column\">\r\n                <h4 className=\"card-members-header\">Card members</h4>\r\n                <div className=\"card-members flex align-center\">\r\n                    {<CardMembersList opacity={(isAddMemberActive || showModal) ? 'opacity-one' : ''} card={card} board={board} history={history} addMember={this.addMember} />}\r\n                    <button className={`card-member-invite '}`} onClick={this.onAddMember}\r\n                    // ${!isAddMemberActive && 'margin-right-26\r\n                        style={{ backgroundColor: `${isAddMemberActive ? \"rgba(110, 253, 141, 0.432)\" : \"rgba(142, 176, 248, 0.267)\"}` }}>\r\n                        {isAddMemberActive ? 'Done' : '+Add'}</button>\r\n                    {card.members.map((member, idx) => {\r\n                        if (member.imgUrl) {\r\n                            return <div key={idx} className=\"profile-tooltip-wraper\" >\r\n                                <div className=\"card-member\" style={{\r\n                                    backgroundImage: \"url(\" + `${member.imgUrl}` + \")\",\r\n                                    backgroundPosition: 'center',\r\n                                    backgroundSize: 'cover',\r\n                                    backgroundRepeat: 'no-repeat'\r\n                                }} onClick={() => history.push(`/user/${member._id}`)} onMouseEnter={this.onMouseEnter}\r\n                                    onMouseLeave={this.onMouseLeave}>\r\n\r\n                                    {isMouseHoverUser && <button onClick={(ev) => this.onRemoveCardUser(idx, ev)} className=\"card-member-remove\"></button>}\r\n                                </div>\r\n                                <div className=\"card-member-tooltip\">\r\n                                    <p>{member.fullName}</p>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        else {\r\n                            return <><h3 className=\"card-user-profile flex justify-center align-center\"onMouseEnter={this.onMouseEnter}\r\n                            onMouseLeave={this.onMouseLeave}> {member.fullName.charAt(0)}</h3>\r\n                            {isMouseHoverUser && <button onClick={(ev) => this.onRemoveCardUser(idx, ev)} className=\"card-member-remove\"></button>}\r\n                                <div className=\"card-member-tooltip\">\r\n                                    <p>{member.fullName}</p>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n    setBoard\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CardMembers)","import React, { Component } from 'react'\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nexport default class CardCalendar extends Component {\r\n\r\n    state = {\r\n        date: new Date(),\r\n        timeStamp: ''\r\n    }\r\n\r\n    onChange = date => this.setState({ date }, this.formatDate)\r\n\r\n    formatDate = () => {\r\n        const { date } = this.state\r\n        let timeStamp = date.getTime()\r\n        this.setState({ timeStamp })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { timeStamp } = this.state\r\n        const { isShown } = this.props\r\n        return (\r\n            <div className={`card-calendar-container ${isShown? 'calendar-fade' : ''}`}>\r\n                <Calendar\r\n                    onChange={this.onChange}\r\n                    value={this.state.date}\r\n                    minDate={new Date()}\r\n                />\r\n                {timeStamp && <div className=\"flex justify-center\" style={{backgroundColor:\"rgba(0, 0, 0, 0.253)\"}}>\r\n                    {/* <h4>Date picked: {formattedDate}</h4> */}\r\n                    <button className=\"date-confirm\" onClick={() => this.props.onDatePicked(timeStamp)}>Confirm</button>\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nclass DueDate extends React.Component {\r\n\r\n    state = {\r\n        isComplete: false,\r\n        diffDays: null,\r\n        timeStamp: null\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getDiffDays()\r\n    }\r\n    \r\n    componentDidUpdate(){\r\n        const { card } = this.props\r\n        if(this.state.timeStamp !== card.dueDate){\r\n            this.getDiffDays()\r\n        } \r\n    }\r\n\r\n    getDiffDays(){\r\n        const { card } = this.props\r\n        let diffDays =  Math.ceil((card.dueDate - Date.now()) / (1000 * 60 * 60 * 24))\r\n        this.setState({diffDays , timeStamp: card.dueDate})\r\n    }\r\n\r\n    onComplete = () => {\r\n        const { board } = this.props\r\n        this.setState(prevState => ({ isComplete: !prevState.isComplete }), () => console.log(this.state.isComplete))\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    render() {\r\n        const { card } = this.props\r\n        const { isComplete , diffDays } = this.state\r\n\r\n        return (\r\n            <div className=\"card-due-date-container\">\r\n                <div className=\"flex \">\r\n                    <span className=\"due-date\"></span>\r\n                    <h4>Due Date</h4>\r\n                </div>\r\n                <div style={{ marginLeft: \"42.5px\", marginTop: \"18px\" }} className=\"flex align-center\">\r\n                    <span className={isComplete ? 'due-date-checkbox-complete' : 'due-date-checkbox'} onClick={this.onComplete}> </span>\r\n                    <p>{moment(card.dueDate).format(\"MMM Do\")}</p>\r\n                    {isComplete && <p className=\"due-date-complete flex align-center\">Complete</p>}\r\n                    {!isComplete && <p className=\"flex align-center\"\r\n                    style={{ backgroundColor: `${diffDays >= 4 ? '#F9A602' : '#EC6B59'}` , marginLeft: \"5px\" , fontWeight: \"600\" , color:\"white\"}} >\r\n                        <span className=\"dueDate\" />{diffDays} Days Left</p>}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(DueDate)\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { uploadImg } from '../services/cloudinaryService'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nimport ImgModal from './ImgModal'\r\n\r\nclass CardAttachments extends Component {\r\n\r\n    state = {\r\n        isLoading: false,\r\n        activeImg: ''\r\n    }\r\n\r\n    onUpload = (ev) => {\r\n        const { board, card } = this.props\r\n        this.setState({ isLoading: true })\r\n        let uploadedFiles = []\r\n        uploadImg(ev)\r\n            .then(cdyImgs => {\r\n                cdyImgs.forEach(file => {\r\n                    let data = {\r\n                        fileName: file.original_filename,\r\n                        format: file.format,\r\n                        url: file.url\r\n                    }\r\n                    uploadedFiles.push(data)\r\n                })\r\n                uploadedFiles.map(file => {\r\n                    card.attachments.unshift(file)\r\n                    this.props.saveBoard(board)\r\n                        .then(this.setState({ isLoading: false }))\r\n                })\r\n\r\n            })\r\n    }\r\n\r\n    onDelete = (idx) => {\r\n        const { card, board } = this.props\r\n        card.attachments.splice(idx, 1)\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    onImgClick = (imgUrl) => {\r\n        this.setState({ activeImg: imgUrl })\r\n    }\r\n\r\n    render() {\r\n        const { card, loggedUser } = this.props // take from props\r\n        const { isLoading, activeImg } = this.state\r\n        const attachments = card.attachments\r\n        return (\r\n            <>\r\n                <div className=\"card-details-attachments\">\r\n                    <div className=\"flex \">\r\n                        <span className=\"photo\"></span>\r\n                        <h4 className=\"attachments-header\">Images</h4>\r\n                    </div>\r\n                    <label style={{ marginLeft: \"42px\" }}> Add\r\n                    <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={this.onUpload} hidden multiple />\r\n                    </label>\r\n                    <div style={{ marginTop: \"15px\", marginLeft: \"42px\" }} className=\"attachments-files-container flex align-center space-between\">\r\n                        {attachments && attachments.map((file, idx) => {\r\n                            return <div key={idx} style={{ marginBottom: \"15px\" }} className=\"flex column\" onClick={() => this.onImgClick(file.url)}>\r\n                                {file.url && <img src={file.url} width=\"150\" />}\r\n                                <div className=\"attachment-file-name-wrapper flex align-center space-between\">\r\n                                    {/* <h4 className=\"attachment-file-name\">{file.fileName}.{file.format}</h4> */}\r\n                                    <p className=\"attachment-owner\">Upload by - {loggedUser.userName}</p>\r\n                                    <button className=\"attachment-delete-btn\" onClick={() => this.onDelete(idx)}>Delete</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                    {isLoading && <span style={{ marginLeft: \"55px\" }} className=\"loading\" />}\r\n                </div>\r\n                {/* {activeImg && <ImgModal url={activeImg} />} */}\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activeBoard: state.boardApp.currBoard,\r\n        loggedUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardAttachments)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nimport moment from 'moment'\r\n\r\nclass CardTodoList extends Component {\r\n\r\n    state = {\r\n        isAddModalShown: false,\r\n        newTodoVal: '',\r\n        isListFiltered: false,\r\n        openTodos: null,\r\n        completedTodos: null,\r\n        barFillWidth: null,\r\n        toggleMode: 'Hide'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTodosStatus()\r\n\r\n    }\r\n\r\n    getBarWidth = () => {\r\n        const { card, board } = this.props\r\n        const { openTodos, completedTodos } = this.state\r\n        let totalTodos = openTodos.length + completedTodos.length;\r\n        let barFillWidth = (completedTodos.length / totalTodos) * 100;\r\n        this.setState({ barFillWidth },()=>{\r\n            card.todosBarWidth = barFillWidth\r\n            this.props.saveBoard(board)\r\n        })\r\n    }\r\n\r\n    getTodosStatus = () => {\r\n        const { card, board } = this.props\r\n        let openTodos = card.checkList.filter(item => !item.isDone)\r\n        let completedTodos = card.checkList.filter(item => item.isDone)\r\n        this.setState({ openTodos, completedTodos }, () => {\r\n            this.getBarWidth()\r\n        })\r\n\r\n    }\r\n\r\n    onComplete = (todo) => {\r\n        const { board , user } = this.props\r\n        todo.isDone = !todo.isDone\r\n        todo.doneBy = {id: user._id , userName: user.userName , fullName: user.fullName}\r\n        // this.props.saveBoard(board)\r\n        this.getTodosStatus()\r\n    }\r\n\r\n    onAddTodo = () => {\r\n        this.setState(prevState => ({ isAddModalShown: !prevState.isAddModalShown }))\r\n    }\r\n\r\n    onHideComplete = () => {\r\n        let toggleMode = ''\r\n        if (this.state.toggleMode === 'Hide') toggleMode = 'Show'\r\n        else toggleMode = 'Hide'\r\n        this.setState(prevState => ({ isListFiltered: !prevState.isListFiltered, toggleMode }))\r\n    }\r\n\r\n    inputHandler = ({ target }) => {\r\n        this.setState({ newTodoVal: target.value })\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        const { card, board, user } = this.props\r\n        let todo = {\r\n            content: this.state.newTodoVal,\r\n            creator: user.userName,\r\n            isDone: false,\r\n            createdAt: Date.now()\r\n        }\r\n        card.checkList.unshift(todo)\r\n        this.props.saveBoard(board)\r\n        this.setState({ isAddModalShown: false, newTodoVal: '' })\r\n        this.getTodosStatus()\r\n    }\r\n\r\n    render() {\r\n        const { card, board, user } = this.props\r\n        const { barFillWidth, toggleMode } = this.state\r\n        const { newTodoVal, isAddModalShown, isListFiltered, openTodos, completedTodos } = this.state\r\n        let list = []\r\n        if (isListFiltered) list = card.checkList.filter(item => !item.isDone)\r\n        else list = card.checkList\r\n\r\n        if (!openTodos) return 'loading'\r\n        return (\r\n            <div className=\"card-details-description\">\r\n                <div className=\"flex align-center\" style={{ marginBottom: \"10px\" }}>\r\n                    <span className=\"list\"></span>\r\n                    <h4>Todos</h4>\r\n                    {/* <span className=\"open-todos-indicator\" style={{ marginLeft: \"20px\" }}>{openTodos.length}</span> */}\r\n                    {/* <span className=\"complete-todos-indicator\" style={{ marginLeft: \"30px\" }}>{completedTodos.length}</span> */}\r\n                    <button className=\"todos-hide-complete-btn\" onClick={this.onHideComplete}>{`${toggleMode} (${completedTodos.length}) complete items`}</button>\r\n                </div>\r\n                <div className=\"todos-bar-wrapper\">\r\n                    <span className=\"todos-bar-fill\" style={{ width: `${card.todosBarWidth}%` }} />\r\n                </div>\r\n                <div style={{ marginBottom: \"15px\" }} className=\"todo-add-wrapper flex align-center\">\r\n                    <button className=\"todo-add-btn\" style={{ marginLeft: \"40px\", padding: \"0px\" }}\r\n                        onClick={this.onAddTodo}>+ item</button>\r\n                    {isAddModalShown && <div className=\"screen\" onClick={()=> this.setState({isAddModalShown: false})}>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <input className=\"todos-input\" value={newTodoVal} type=\"text\" style={{ marginLeft: \"20px\" }}\r\n                                onChange={this.inputHandler} autoFocus placeholder=\"Add an item\" />\r\n                        </form>\r\n                    </div>}\r\n                    {/* className={`todos-input ${isAddModalShown ? 'fade-input' : ''} `} */}\r\n                </div>\r\n\r\n                <div className=\"todos-container\" style={{ marginLeft: \"40px\", width: \"320px\" }}>\r\n\r\n                    {list.map((todo, idx) => {\r\n                        return <div key={idx} className=\"flex align-center space-between\">\r\n                            <div className=\"todo-item flex align-center space-between\">\r\n\r\n                                <div className={todo.isDone ? 'todo-complete' : '' + \"flex column\"}>\r\n                                    <h3>{todo.content}</h3>\r\n                                    <todoinfo className=\"todo-info\">Added by <tagcolor>{todo.creator}</tagcolor> at <tagcolor>{moment(todo.createdAt).fromNow()}</tagcolor></todoinfo>\r\n                                </div>\r\n                                <span className={todo.isDone ? 'todo-checkbox-complete' : 'todo-checkbox'} onClick={() => this.onComplete(todo)} />\r\n                            </div>\r\n                            {/* {todo.isDone && <button className=\"todos-delete\">Delete</button>} */}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CardTodoList)","import React, { Component } from 'react'\r\n\r\n\r\nexport default class InterActiveRobot extends Component {\r\n\r\n    state = {\r\n        currTxt: '',\r\n        robotClass: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        let data = [\r\n            `Welcome, ${this.props.user.userName}👋`,\r\n            'This is our demo board',\r\n            'For best expirence, open 2 tabs parallaly',\r\n            'Feel free to cantact us ;)🎉',\r\n            \r\n        ]\r\n        this.setState({ currTxt: data[0] })\r\n        let cnt = 1\r\n        let myInterval = setInterval(() => {\r\n            this.setState({ currTxt: data[cnt] })\r\n            cnt++\r\n            if(cnt > data.length){\r\n                clearInterval(myInterval)\r\n                this.setState({ currTxt: null , robotClass: '' })\r\n            } \r\n        }, 2000);\r\n     \r\n        setTimeout(() => {\r\n            this.setState({ robotClass: 'opacity-robot' })\r\n        }, 500);\r\n\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props\r\n        const { currTxt , robotClass} = this.state\r\n\r\n        return (\r\n            <div className={`interactive-robot-container flex justify-center ${robotClass}`} >\r\n                <span className=\"robot\" />\r\n                <span className={`robot-txt-bubble flex align-center justify-center`}>\r\n                    {currTxt && <h3 className={\"first-speech\" + !currTxt ? 'finish-robot' : '' }>{currTxt}</h3>}\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\n\r\nclass LabelsModal extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        isErrorShown: false\r\n    }\r\n\r\n    onLabelClick = (color) => {\r\n        const { card , board } = this.props\r\n        let colorIdx = card.labels.findIndex(label => label.color === color)\r\n        if (colorIdx !== -1){\r\n            this.setState({isErrorShown: true})\r\n            setTimeout(()=>{\r\n                this.setState({isErrorShown: false})\r\n            },1500)\r\n             return\r\n        }\r\n        \r\n        let label ={\r\n            title: this.state.title ,\r\n            color\r\n        }\r\n        card.labels.push(label)\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    inputHandler = ({ target }) => {\r\n        this.setState({ title: target.value })\r\n    }\r\n\r\n    render() {\r\n        const { title , isErrorShown } = this.state\r\n        return (\r\n            <div className=\"card-labels-modal flex column align-center\">\r\n                <h3 className=\"labels-header\">Labels</h3>\r\n                {isErrorShown && <h5>This label already exist</h5>}\r\n\r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#61BD4F\" }}>\r\n                        <input placeholder=\"Opt. Add label titles\" onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#61BD4F')}>Set</button>\r\n                </div>\r\n\r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#F2D600\" }}>\r\n                        <input onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#F2D600')}>Set</button>\r\n                </div>\r\n\r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#FF9F1A\" }}>\r\n                        <input onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#FF9F1A')}>Set</button>\r\n                </div>\r\n\r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#EB5A46\" }}>\r\n                        <input onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#EB5A46')}>Set</button>\r\n                </div>\r\n\r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#0079BF\" }}>\r\n                        <input onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#0079BF')}>Set</button>\r\n                </div>\r\n                \r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#FF78CB\" }}>\r\n                        <input onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#FF78CB')}>Set</button>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LabelsModal)","import React, { Component } from 'react'\r\nimport LabelsModal from './LabelsModal'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\n\r\nclass CardLabels extends Component {\r\n\r\n    state = {\r\n        isDeleteBtnShow: false\r\n    }\r\n\r\n    onKeyUp = (idx, ev) => {\r\n        const { card, board, isShown } = this.props\r\n        card.labels[idx].title = ev.target.innerText\r\n    }\r\n\r\n    onBlur = () => {\r\n        const { board } = this.props\r\n\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    onEnter = () => {\r\n        this.setState({ isDeleteBtnShow: true })\r\n    }\r\n\r\n    onLeave = () => {\r\n        this.setState({ isDeleteBtnShow: false })\r\n    }\r\n\r\n    onRemovelabel = (idx) =>{\r\n        const { card , board } = this.props\r\n        card.labels.splice(idx,1)\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    render() {\r\n        const { card, board, isShown } = this.props\r\n        const { isDeleteBtnShow } = this.state\r\n\r\n        return (\r\n            <div className=\"card-details-labels-container flex align-center\">\r\n                {card.labels.map((label, idx) => {\r\n                    return <div onMouseEnter={this.onEnter} onMouseLeave={this.onLeave} key={idx}\r\n                        style={{ backgroundColor: `${label.color}`, minWidth: \"50px\", minHeight: \"15px\", marginRight: \"10px\", borderRadius: \"5px\", marginTop: \"10px\", padding: \"2px\", color: \"white\", fontSize: \"12px\", textAlign: \"center\", position:\"relative\" }}>\r\n                        <h4 onBlur={this.onBlur} contentEditable={true} suppressContentEditableWarning={true} spellCheck={false} onKeyUp={(ev) => this.onKeyUp(idx, ev)}\r\n                         >{label.title}</h4>\r\n                        {isDeleteBtnShow && <button onClick={() => this.onRemovelabel(idx)} className=\"lable-remove\"></button>}\r\n                    </div>\r\n                })}\r\n                {isShown && < LabelsModal card={this.props.card} board={this.props.board} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CardLabels)","import React, { Component } from 'react'\r\nimport { CardActions } from '../cmps/CardActions'\r\nimport CardComments from '../cmps/CardComments'\r\nimport CardDescription from '../cmps/CardDescription'\r\nimport CardMembers from '../cmps/CardMembers'\r\nimport CardCalendar from '../cmps/CardCalendar'\r\nimport  DueDate  from '../cmps/DueDate'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nimport CardAttachments from '../cmps/CardAttachments'\r\nimport InterActiveRobot from '../cmps/InterActiveRobot'\r\nimport CardTodoList from '../cmps/CardTodoList'\r\nimport CardLabels from '../cmps/CardLabels'\r\n\r\nclass CardDetails extends Component {\r\n\r\n\r\n    state = {\r\n        currCard: null,\r\n        currList: null,\r\n        isCalendarActive: false,\r\n        isImagesShown: false,\r\n        isMembersModalShown: false,\r\n        isLabelsModalShown:false\r\n\r\n    }\r\n\r\n    eventsHandler = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCurrCard()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps) this.getCurrCard()\r\n    }\r\n\r\n    getCurrCard = () => {\r\n        const { cardId, currBoard } = this.props\r\n        let currCard;\r\n        let currList\r\n        currBoard.cardLists.forEach(cardList => {\r\n            cardList.cards.forEach(card => {\r\n                if (card.id === cardId) {\r\n                    currCard = card;\r\n                    currList = cardList;\r\n                }\r\n            })\r\n        })\r\n        this.setState({ currCard, currList },()=> {\r\n            if(currCard.attachments.length) this.setState({isImagesShown: true})\r\n            else if(!currCard.attachments.length) this.setState({isImagesShown: false})\r\n        })\r\n    }\r\n\r\n    openDatePicker = () => {\r\n        \r\n        this.setState(prevState => ({ isCalendarActive: !prevState.isCalendarActive }))\r\n    }\r\n\r\n    onImages = () => {\r\n        this.setState(prevState => ({ isImagesShown: !prevState.isImagesShown }))\r\n    }\r\n\r\n    onMembers = () => {\r\n        this.setState(prevState => ({ isMembersModalShown: !prevState.isMembersModalShown }))\r\n    }\r\n\r\n    onDatePicked = (timeStamp) => {\r\n        console.log('OPEN CALENDAR');\r\n        \r\n        const { currCard } = this.state\r\n        const { currBoard } = this.props\r\n        currCard.dueDate = timeStamp\r\n        this.setState({ isCalendarActive: false })\r\n        this.props.saveBoard(currBoard)\r\n    }\r\n\r\n    onCloseCardDetails = () => {\r\n        const { currBoard } = this.props\r\n        this.props.history.push(`/board/${currBoard._id}`)\r\n    }\r\n\r\n    onCardTitle = ({target}) => {\r\n        const {currCard} = this.state\r\n        currCard.text = target.innerText\r\n    }\r\n\r\n    onTitleBlur = () =>{\r\n        console.log('LUREDED');\r\n        \r\n        const { currBoard } = this.props\r\n        this.props.saveBoard(currBoard)\r\n    }\r\n    onLabels = () => {\r\n        this.setState(prevState => ({ isLabelsModalShown: !prevState.isLabelsModalShown }))\r\n    }\r\n\r\n    render() {\r\n\r\n        const { currCard, currList, isCalendarActive, isImagesShown, isMembersModalShown , isLabelsModalShown } = this.state\r\n        const { currBoard , loggedUser } = this.props\r\n        if (!currCard) return ''\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"screen flex align-center justify-center\" onClick={this.onCloseCardDetails}> </div>\r\n\r\n                <div className=\"card-details-content-wrapper\">\r\n                    <div onClick={this.eventsHandler} className=\"card-details-modal\">\r\n                        <div className=\"card-details-header flex space-between align-center\">\r\n                            <div className=\"flex align-center\">\r\n                                <span className=\"card-icon\"></span>\r\n                                <p spellCheck={false} contentEditable={true} suppressContentEditableWarning={true} className=\"card-details-title\" onBlur={this.onTitleBlur} onKeyUp={this.onCardTitle}>{currCard.text}</p>\r\n                                <p className=\"card-list-parent\">In list: <span>{currList.title}</span></p>\r\n                            </div>\r\n                            <span className=\"cancel\" onClick={this.onCloseCardDetails}></span>\r\n                        </div>\r\n\r\n                        <div className=\"card-details-content-wrapper flex\">\r\n                            <div className=\"card-details-content flex column\">\r\n                                < CardLabels card={currCard} board={currBoard} isShown={isLabelsModalShown} />\r\n                                < CardMembers user={loggedUser} history={this.props.history} card={currCard} board={currBoard}\r\n                                    showModal={isMembersModalShown} />\r\n                                {currCard.dueDate && < DueDate card={currCard} board={currBoard} />}\r\n                                < CardDescription card={currCard} board={currBoard} />\r\n                                < CardTodoList card={currCard} board={currBoard} user={this.props.loggedUser} />\r\n                                {isImagesShown &&  < CardAttachments card={currCard} board={currBoard} />}\r\n                                < CardComments card={currCard} board={currBoard} user={this.props.loggedUser} />\r\n                            </div>\r\n                            < CardActions onLabels={this.onLabels} openDatePicker={this.openDatePicker} onImages={this.onImages} onMembers={this.onMembers} />\r\n                            < CardCalendar card={currCard} onDatePicked={this.onDatePicked} isShown={isCalendarActive} />\r\n                            {/* < InterActiveRobot user={this.props.loggedUser} /> */}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedUser: state.user.loggedInUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardDetails)","import React from 'react'\r\n\r\nexport function IconPreview(props) {\r\n\r\n    const { icon, num, color, isDone } = props;\r\n\r\n    return (\r\n        <div className=\"icon flex space-between\">\r\n            <div className={icon}></div>\r\n            <div style={{ color: color }}>{(isDone || isDone === 0) && (isDone + '/')}{num}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { IconPreview } from './IconPreview.jsx'\r\nimport { BoardMembers } from './BoardMembers.jsx'\r\nimport moment from 'moment';\r\n\r\nexport function CardIconsPreview(props) {\r\n    const { card, history } = props\r\n\r\n    function getTime(val) {\r\n        if (Math.floor((val - Date.now()) / (24 * 60 * 60 * 1000)) < 0) return 'Today';\r\n        else if (Math.ceil((val - Date.now()) / (24 * 60 * 60 * 1000)) <= 1) return 'Tomorrow';\r\n        else if (Math.floor((val - Date.now()) / (24 * 60 * 60 * 1000)) < 7) return moment(val).format(\"dddd\");\r\n        else return moment(val).format(\"MMM DD\");\r\n    }\r\n\r\n    function getColor(val) {\r\n        if ((val - Date.now()) <= (24 * 60 * 60 * 1000)) return '#e74c3c';\r\n        else if ((val - Date.now()) <= (4 * 24 * 60 * 60 * 1000)) return '#e67e22';\r\n        else return '#2ecc71';\r\n    }\r\n\r\n    function getDoneTodos(checkList) {\r\n        let done = checkList.reduce((acc, todo) => todo.isDone ? acc + 1 : acc, 0)\r\n        return done;\r\n\r\n    }\r\n\r\n    if (!card) return 'loading'\r\n    return (\r\n        <div className=\"wrap-icons\">\r\n            <div className=\"card-icons flex space-between align-center\">\r\n                {card.dueDate && <IconPreview color={getColor(card.dueDate)} icon={'clock-blue'} num={getTime(card.dueDate)} />}\r\n                <div className=\"items-wrap flex\">\r\n                    {/* {Boolean(card.attachments.length) && <IconPreview icon={'attachments'} num={card.attachments.length} />} */}\r\n                    {Boolean(card.comments.length) && <IconPreview icon={'conversation-blue'} num={card.comments.length} />}\r\n                    {Boolean(card.checkList.length) && <IconPreview icon={'checklist-blue'} num={card.checkList.length} isDone={getDoneTodos(card.checkList)} />}\r\n                </div>\r\n            </div>\r\n            <div className=\"members-placeholder\">\r\n                {Boolean(card.members.length) && <BoardMembers history={history} board={card} cardMemberMode={true} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport function CardLabelsPreview(props) {\r\n\r\n    const { labels } = props;\r\n\r\n\r\n    return (\r\n        <div className=\"card-labels flex\">\r\n            {labels.map((lable, idx) => {\r\n                return (\r\n                    <div key={idx} className=\"card-label-style\" style={{ background: lable.color }} />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport class CardHeaderForm extends Component {\r\n\r\n    state = {\r\n        cardTitle: this.props.cardHeader,\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.closeCardMenu, false);\r\n        document.addEventListener(\"keydown\", this.closeCardMenu, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.closeCardMenu, false);\r\n        document.removeEventListener(\"keydown\", this.closeCardMenu, false);\r\n    }\r\n\r\n    closeCardMenu = (e) => {\r\n        if (e.keyCode === 27) {\r\n            this.props.closeMenu();\r\n        }\r\n    }\r\n\r\n    activeEditMode = (e) => {\r\n        e.stopPropagation()\r\n        this.setState({ editTitleMode: true })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.stopPropagation()\r\n        this.setState({ title: e.target.value })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        let { card } = this.props\r\n        card.title = this.state.title;\r\n        this.props.saveCard(card);\r\n        this.setState({ editTitleMode: false })\r\n        this.props.closeMenu();\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    onSubmit = () => {\r\n        this.props.offEditCardHeader(this.props.cardId, this.props.cardListId, this.state.cardTitle)\r\n    }\r\n\r\n    escFunction = (event) => {\r\n        if(event.keyCode === 13){\r\n            this.onSubmit()\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ cardTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.onSubmit();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        this.onSubmit()\r\n    }\r\n\r\n    moveCaretAtEnd(e) {\r\n        var temp_value = e.target.value\r\n        e.target.value = ''\r\n        e.target.value = temp_value\r\n      }\r\n\r\n\r\n    render() {\r\n        const { cardTitle } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <textarea placeholder=\"Edit title\" onClick={ev => ev.stopPropagation()}\r\n                    value={cardTitle} onChange={this.handleChange} autoFocus onFocus={this.moveCaretAtEnd} onBlur={this.handleBlur} spellCheck=\"false\" />\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { saveBoard } from '../store/actions/boardActions.js'\r\n\r\n\r\nclass CardMenu extends Component {\r\n\r\n    state = {\r\n        isMenuOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.addEventListener(\"keydown\", this.closeBoardMenu, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.removeEventListener(\"keydown\", this.closeBoardMenu, false);\r\n    }\r\n\r\n    closeBoardMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.setState({ isMenuOpen: false })\r\n        }\r\n    }\r\n\r\n    openMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({ isMenuOpen: true })\r\n    }\r\n\r\n    onDeleteCard = (cardId, cardListId, ev) => {\r\n        ev.stopPropagation()\r\n        const currBoard = this.props.currBoard;\r\n        const { cardLists } = currBoard;\r\n        const list = cardLists.find(cardList => cardList.id === cardListId);\r\n        const cardIdx = list.cards.findIndex(card => card.id === cardId);\r\n\r\n        list.cards.splice(cardIdx, 1);\r\n        this.props.saveBoard(currBoard);\r\n    }\r\n\r\n    onCloseMenu = (ev) => {\r\n        this.setState({ isMenuOpen: false })\r\n        this.props.onEditCardHeader(ev)\r\n    }\r\n\r\n    render() {\r\n        const { onEditCardHeader, cardId, cardListId } = this.props\r\n        const { onDeleteCard } = this\r\n        const { isMenuOpen } = this.state;\r\n\r\n        return (\r\n            <div ref={node => this.node = node} className=\"card-menu-container\">\r\n                <div className=\"menu-btn hidden\" onClick={(event) => this.openMenu(event)} ></div>\r\n                {isMenuOpen && <div className=\"menu-options card-menu\">\r\n                    <div onClick={(event) => this.onCloseMenu(event)}>Edit Title</div>\r\n                    <div onClick={(event) => onDeleteCard(cardId, cardListId, event)}>Delete Card</div>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardMenu)\r\n","import React, { Component } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { CardIconsPreview } from './CardIconsPreview.jsx'\r\nimport { CardLabelsPreview } from './CardLabelsPreview.jsx'\r\nimport { CardHeaderForm } from './CardHeaderForm.jsx'\r\nimport CardMenu from './CardMenu.jsx'\r\nimport { connect } from 'react-redux';\r\nimport { saveBoard } from '../store/actions/boardActions.js'\r\n\r\n\r\nclass CardPreview extends Component {\r\n\r\n    state = {\r\n        isFocus: false,\r\n    }\r\n\r\n    onEditCardHeader = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({ isFocus: true })\r\n    }\r\n\r\n    offEditCardHeader = (cardId, cardListId, text) => {\r\n        if (!cardId || !cardListId) {\r\n            this.setState({ isFocus: false })\r\n            return\r\n        };\r\n\r\n        const currBoard = JSON.parse(JSON.stringify(this.props.currBoard));\r\n        const { cardLists } = currBoard;\r\n        const list = cardLists.find(cardList => cardList.id === cardListId);\r\n        const card = list.cards.find(card => card.id === cardId)\r\n        card.text = text\r\n        this.setState({ isFocus: false })\r\n        this.props.saveBoard(currBoard);\r\n    }\r\n\r\n\r\n    showCard = (cardId, history, currBoard) => {\r\n        history.push(`/board/${currBoard._id}/${cardId}`)\r\n    };\r\n\r\n    render() {\r\n\r\n        const { index, card, currBoard, cardListId, history, animation } = this.props\r\n        const { showCard, offEditCardHeader, onEditCardHeader } = this;\r\n        // console.log(card.attachments)\r\n        return (\r\n            <Draggable key={card.id} draggableId={card.id} index={index} >\r\n                {(provided, snapshot) => {\r\n                    return (\r\n                        <>\r\n                            <div\r\n                                className={`card-preview drag flex column ${snapshot.isDragging ? \"isDragging\" : \"\"} ${animation}`} onClick={() => showCard(card.id, history, currBoard)}\r\n                                ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}\r\n                                style={{\r\n                                    userSelect: \"none\",\r\n                                    ...provided.draggableProps.style\r\n                                }}\r\n                            >\r\n                                <CardMenu cardId={card.id} onEditCardHeader={onEditCardHeader} cardListId={cardListId} />\r\n                                {Boolean(card.attachments.length) && <img src={card.attachments[0].url} alt=\"\" />}\r\n                                {Boolean(card.labels.length) && <CardLabelsPreview histoy={history} labels={card.labels} />}\r\n                                {(this.state.isFocus) ? <CardHeaderForm cardHeader={card.text} cardListId={cardListId} cardId={card.id} offEditCardHeader={offEditCardHeader} /> : <div className=\"card-text\">{card.text}</div>}\r\n                                <CardIconsPreview card={card} />\r\n                            </div>\r\n                        </>\r\n                    );\r\n                }}\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardPreview)\r\n","import React, { Component } from \"react\";\r\n\r\nexport class AddCardForm extends Component {\r\n    state = {\r\n        addCardForm: false,\r\n        newCardTitle: '',\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    escFunction = (event) => {\r\n        if (event.keyCode === 27) {\r\n            this.setState({ addCardForm: false, newCardTitle: '' })\r\n        }\r\n    }\r\n\r\n    openForm = () => {\r\n        this.setState({ addCardForm: true });\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ newCardTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.createNewCard();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        if (this.state.newCardTitle) this.createNewCard();\r\n        else this.setState({ addCardForm: false });\r\n    }\r\n\r\n    createNewCard() {\r\n        const { title } = { title: this.state.newCardTitle }\r\n        console.log('creatNewCard', title)\r\n        this.props.onAddCard(this.props.cardListId, title)\r\n        this.setState({ addCardForm: false, newCardTitle: '' })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { addCardForm, newCardTitle } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"card-preview flex justify-center align-center\" onClick={this.openForm} >\r\n                    {!addCardForm ? <div>Add card</div> :\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <input placeholder=\"Add card\" value={newCardTitle} onChange={this.handleChange} autoFocus onBlur={this.handleBlur} />\r\n                        </form>}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { saveBoard } from '../store/actions/boardActions.js'\r\n\r\n\r\nclass ListMenu extends Component {\r\n\r\n    state = {\r\n        isMenuOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.addEventListener(\"keydown\", this.closeBoardMenu, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.removeEventListener(\"keydown\", this.closeBoardMenu, false);\r\n    }\r\n\r\n\r\n    closeBoardMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.setState({ isMenuOpen: false })\r\n        }\r\n    }\r\n\r\n\r\n    openMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({ isMenuOpen: true })\r\n    }\r\n\r\n    onDeleteList = (cardlistId, ev) => {\r\n        ev.stopPropagation()\r\n        const { currBoard } = this.props;\r\n        const { cardLists } = currBoard;\r\n        const listIdx = cardLists.findIndex(cardList => cardlistId === cardList.id);\r\n        cardLists.splice(listIdx, 1);\r\n        \r\n        this.props.saveBoard(currBoard);\r\n    }\r\n\r\n    onCloseMenu = (ev) => {\r\n        this.setState({ isMenuOpen: false })\r\n        this.props.onEditListTitle(ev)\r\n    }\r\n\r\n    render() {\r\n        const { onEditListTitle, cardListId } = this.props\r\n        const { onDeleteList } = this\r\n        const { isMenuOpen } = this.state;\r\n\r\n\r\n        return (\r\n            <div ref={node => this.node = node} className=\"list-menu-container\">\r\n                <div className=\"menu-btn\" onClick={(event) => this.openMenu(event)}></div>\r\n                {isMenuOpen && <div className=\"menu-options list-menu \">\r\n                    <div onClick={(event) => this.onCloseMenu(event)}>Edit Title</div>\r\n                    <div onClick={(event) => onDeleteList(cardListId, event)}>Delete List</div>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListMenu)\r\n","import React, { Component } from \"react\";\r\n\r\nexport class ListTitleForm extends Component {\r\n\r\n    state = {\r\n        cardListTitle: this.props.cardList.title\r\n\r\n    }\r\n   \r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.escFunction, false);\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.escFunction, false);\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    handleChange = (ev) => {\r\n        ev.stopPropagation()\r\n        this.setState({ cardListTitle: ev.target.value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        let { card } = this.props\r\n        card.title = this.state.title;\r\n        this.setState({ editTitleMode: false })\r\n        this.onSubmit();\r\n    }\r\n\r\n    onSubmit = () => {\r\n        this.props.offEditListTitle(this.props.cardList.id, this.state.cardListTitle)\r\n    }\r\n\r\n    escFunction = (event) => {\r\n        if (event.keyCode === 27) {\r\n            this.onSubmit()\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ cardListTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.onSubmit();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { cardListTitle } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input placeholder=\"Edit title...\" value={cardListTitle} onChange={this.handleChange} autoFocus onBlur={this.onSubmit} />\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport CardPreview from './CardPreview.jsx'\r\nimport { AddCardForm } from \"./AddCardForm.jsx\";\r\nimport ListMenu from \"./ListMenu.jsx\"\r\nimport { ListTitleForm } from \"./ListTitleForm.jsx\"\r\nimport { connect } from 'react-redux';\r\nimport { saveBoard } from '../store/actions/boardActions.js'\r\n\r\n\r\nclass CardListPreview extends Component {\r\n\r\n    state = {\r\n        addlistForm: false,\r\n        newlistTitle: '',\r\n        isFocus: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    onEditListTitle = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({ isFocus: true })\r\n    }\r\n\r\n    offEditListTitle = (cardListId, title) => {\r\n        if (!cardListId) {\r\n            this.setState({ isFocus: false })\r\n            return\r\n        };\r\n\r\n        const currBoard = this.props.currBoard;\r\n        const { cardLists } = currBoard;\r\n        const list = cardLists.find(cardList => cardList.id === cardListId);\r\n        list.title = title;\r\n        this.props.saveBoard(currBoard);\r\n        this.setState({ isFocus: false })\r\n    }\r\n\r\n    escFunction = (event) => {\r\n        if (event.keyCode === 27) {\r\n            this.setState({ addlistForm: false, newlistTitle: '' })\r\n        }\r\n    }\r\n\r\n    openForm = () => {\r\n        this.setState({ addlistForm: true });\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ newlistTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.createNewlist();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        if (this.state.newlistTitle) this.createNewlist();\r\n        else this.setState({ addlistForm: false });\r\n    }\r\n\r\n    createNewlist() {\r\n        const list = { title: this.state.newlistTitle }\r\n        this.props.onAddList(list)\r\n        this.setState({ addlistForm: false, newlistTitle: '' })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { cardList, index, onAddCard, currBoard, history, animation } = this.props\r\n\r\n        const { onEditListTitle, offEditListTitle } = this\r\n\r\n        return (\r\n            <Draggable key={cardList.id} draggableId={cardList.id} index={index} >\r\n                {(provided, snapshot) => (\r\n                    <div className={`wrap-card-list flex ${animation}`} key={cardList.id}\r\n                        ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                        <Droppable droppableId={cardList.id} key={cardList.id} type={\"card\"}>\r\n                            {(provided, snapshot) => (\r\n                                <div className={`card-list-container flex column ${snapshot.isDraggingOver ? \"light\" : \"\"}`} >\r\n                                    <div className=\"title-content flex space-between \">\r\n                                        {(this.state.isFocus) ? <ListTitleForm listTitle={cardList.title} cardList={cardList} offEditListTitle={offEditListTitle} /> : <h2 className=\"list-title\">{cardList.title}</h2>}\r\n\r\n                                        <ListMenu onEditListTitle={onEditListTitle} cardListId={cardList.id} />\r\n                                    </div>\r\n                                    <div className={\"card-list\"} {...provided.droppableprops} ref={provided.innerRef} >\r\n                                        {cardList.cards.map((card, index) => {\r\n                                            return (\r\n                                                <CardPreview key={card.id} cardListId={cardList.id} currBoard={currBoard} card={card} index={index} history={history} animation={animation} />\r\n                                            );\r\n                                        })}\r\n                                        {provided.placeholder}\r\n                                    </div>\r\n                                    <AddCardForm onAddCard={onAddCard} cardList={cardList} cardListId={cardList.id} />\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardListPreview)","import React, { Component } from \"react\";\r\n\r\nexport class AddListForm extends Component {\r\n    state = {\r\n        addlistForm: false,\r\n        newlistTitle: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    escFunction = (event) => {\r\n        if (event.keyCode === 27) {\r\n            this.setState({ addlistForm: false, newlistTitle: '' })\r\n        }\r\n    }\r\n\r\n    openForm = () => {\r\n        this.setState({ addlistForm: true });\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ newlistTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.createNewlist();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        if (this.state.newlistTitle) this.createNewlist();\r\n        else this.setState({ addlistForm: false });\r\n    }\r\n\r\n    createNewlist() {\r\n        const title = { title: this.state.newlistTitle }\r\n        this.props.onAddList(this.state.newlistTitle)\r\n        this.setState({ addlistForm: false, newlistTitle: '' })\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { addlistForm, newlistTitle } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"add-list\" onClick={this.openForm} >\r\n                    {!addlistForm ? <div className=\"add-list-btn flex justify-center align-center\"><div className=\"plus-white\"></div></div> :\r\n                        <div className=\"screen\">\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <input placeholder=\"Add list ...\" value={newlistTitle} onChange={this.handleChange} autoFocus onBlur={this.handleBlur} />\r\n                            </form>\r\n                        </div>}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport CardDetails from './CardDetails.jsx';\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport CardListPreview from '../cmps/CardListPreview.jsx'\r\nimport { AddListForm } from '../cmps/AddListForm.jsx'\r\nimport { connect } from 'react-redux';\r\nimport uuid from \"uuid/v4\";\r\nimport { clearCurrBoard, setBoards, setBoard, saveBoard, removeBoard } from '../store/actions/boardActions.js'\r\nimport socketService from '../services/socketService'\r\n\r\n\r\nclass Board extends Component {\r\n\r\n    state = {\r\n        animation: 'animation'\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { boardId } = this.props.match.params\r\n        this.props.setBoard(boardId)\r\n\r\n        socketService.on(`board-updated-${boardId}`, (id) => {\r\n            this.setState({ animation: 'animation' })\r\n            this.props.setBoard(id)\r\n        })\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        const { boardId } = this.props.match.params\r\n        socketService.off(`board-updated-${boardId}`)\r\n        this.props.clearCurrBoard()\r\n    }\r\n\r\n    getNewCard = (txt) => {\r\n\r\n        return {\r\n            id: uuid(),\r\n            createdAt: Date.now(),\r\n            creator: {},\r\n            description: \"\",\r\n            isStarred: false,\r\n            dueDate: null,\r\n            members: [\r\n            ],\r\n            covers: {\r\n                id: \"\",\r\n                imgUrl: \"\",\r\n                isShown: true\r\n            },\r\n            attachments: [],\r\n            text: txt,\r\n            checkList: [],\r\n            labels: [],\r\n            comments: []\r\n        }\r\n    }\r\n\r\n    getNewList = (title) => {\r\n        return {\r\n            id: uuid(),\r\n            title: title,\r\n            createdAt: Date.now(),\r\n            creator: null,\r\n            cards: []\r\n        }\r\n    }\r\n\r\n    onAddList = async (title = \"\") => {\r\n        this.setState({ animation: 'animation' })\r\n        const { currBoard } = this.props\r\n        const { cardLists } = currBoard;\r\n        cardLists.push(this.getNewList(title));\r\n        await this.props.saveBoard(currBoard)\r\n        window.scrollTo(100000, 0)\r\n    }\r\n\r\n    onAddCard = async (ListId, txt = \"\") => {\r\n        this.setState({ animation: 'animation' })\r\n        console.log(\"listId\", ListId)\r\n        console.log(\"txt\", txt)\r\n        const { currBoard } = this.props\r\n        const { cardLists } = currBoard;\r\n        const list = cardLists.find(cardList => cardList.id === ListId);\r\n        console.log('list', list)\r\n        list.cards.push(this.getNewCard(txt))\r\n        console.log(currBoard)\r\n        await this.props.saveBoard(currBoard)\r\n    }\r\n\r\n    onDragEnd = (result) => {\r\n        this.setState({ animation: '' })\r\n        if (!result.destination) return;\r\n        const { currBoard } = this.props\r\n        const { cardLists } = currBoard\r\n        const { source, destination, type } = result;\r\n\r\n        switch (type) {\r\n            case \"card\":\r\n                const sourcecardList = cardLists.find(list => source.droppableId === list.id);\r\n                const destcardList = cardLists.find(list => destination.droppableId === list.id);\r\n\r\n                const sourcecards = sourcecardList.cards;\r\n                const destcards = destcardList.cards;\r\n                const [removed] = sourcecards.splice(source.index, 1);\r\n                destcards.splice(destination.index, 0, removed);\r\n                this.props.saveBoard(currBoard)\r\n                break;\r\n\r\n            case \"list\":\r\n                const [removedList] = cardLists.splice(source.index, 1);\r\n                cardLists.splice(destination.index, 0, removedList);\r\n                this.props.saveBoard(currBoard)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n    };\r\n\r\n    getBackground(board) {\r\n        return board.background.content ? {\r\n            backgroundImage: \"url(\" + `${board.background.content}` + \")\",\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'no-repeat'\r\n        } : { background: board.background.color }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { onDragEnd, onAddList, onAddCard } = this;\r\n        const { currBoard, history } = this.props;\r\n        const { animation } = this.state;\r\n\r\n        const { cardId } = this.props.match.params;\r\n        if (!currBoard) return <div>loading</div>;\r\n        const { cardLists } = currBoard;\r\n\r\n\r\n        return (\r\n            <div className=\"board-app-container\"  >\r\n                <div className=\"board-background\" style={this.getBackground(currBoard)}></div>\r\n                <div className={`wrap-card-lists flex`} >\r\n                    <DragDropContext onDragEnd={result => onDragEnd(result)} >\r\n                        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n                            {(provided, snapshot) => (\r\n                                <div className={`card-lists flex ${snapshot.isDraggingOver ? \"light\" : \"\"}`}\r\n                                    {...provided.droppableProps} ref={provided.innerRef}\r\n                                >\r\n                                    {cardLists.map((cardList, index) => {\r\n                                        return (<CardListPreview currBoard={currBoard} onAddCard={onAddCard} key={cardList.id} cardList={cardList} index={index} history={history} animation={animation} />\r\n                                        );\r\n                                    })}\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                    </DragDropContext>\r\n\r\n                    <AddListForm onAddList={onAddList} />\r\n                </div >\r\n                {cardId && <CardDetails currBoard={currBoard} history={history} cardId={cardId} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setBoards,\r\n    setBoard,\r\n    clearCurrBoard,\r\n    removeBoard,\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board)\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from './pages/Home.jsx'\r\nimport NavBar from './cmps/NavBar.jsx'\r\nimport UserDetails from './pages/UserDetails.jsx'\r\nimport DashBoard from './pages/DashBoard.jsx';\r\nimport Board from './pages/Board.jsx';\r\n// import DndBoard from './pages/DndBoard.jsx';\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <main className=\"app-main-container\">\r\n        <Switch>\r\n          {/* <Route component={DndBoard} path=\"/board/:boardId/:cardId?\" /> */}\r\n          <Route component={Board} path=\"/board/:boardId/:cardId?\" />\r\n          <Route component={UserDetails} path=\"/user/:userId\" />\r\n          <Route component={DashBoard} path=\"/board\" />\r\n          <Route component={Home} path=\"/\" />\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    boards: [],\r\n    currBoard: null\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: action.boards\r\n            }\r\n        case 'SET_BOARD':\r\n\r\n            return {\r\n                ...state,\r\n                currBoard: action.board\r\n            }\r\n\r\n        case 'RESET_BOARD':\r\n            return {\r\n                ...state,\r\n                currBoard: null\r\n            }\r\n\r\n        case 'ADD_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: [...state.boards, action.board]\r\n            }\r\n        case 'UPDATE_BOARD':\r\n            // console.log('updating.........', action.board);\r\n\r\n            return {\r\n                ...state,\r\n                currBoard: action.board,\r\n                boards: state.boards.map(board => {\r\n                    if (board._id === action.board._id) return action.board;\r\n                    return board;\r\n                })\r\n            }\r\n        case 'REMOVE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.filter(board => board._id !== action.boardId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n","// let localLoggedinUser = null;\r\n// if (sessionStorage.user) localLoggedinUser = JSON.parse(sessionStorage.user);\r\n\r\nconst initialState = {\r\n  users: [],\r\n  loggedInUser: null\r\n};\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n \r\n  switch (action.type) {\r\n    case 'SET_USERS':\r\n      return {\r\n        ...state,\r\n        users: action.users\r\n      };\r\n    case 'SET_USER':\r\n     \r\n      \r\n      return {\r\n        ...state,\r\n        loggedInUser: action.user,\r\n      };\r\n    case 'USER_REMOVE':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { boardReducer } from './reducers/boardReducer'\r\nimport { userReducer } from './reducers/UserReducer'\r\n\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({\r\n    boardApp: boardReducer,\r\n    user: userReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store/store.js';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}