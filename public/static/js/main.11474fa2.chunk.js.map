{"version":3,"sources":["history.js","services/httpService.js","services/socketService.js","services/userService.js","store/actions/userActions.js","cmps/Login.jsx","cmps/SignUp.jsx","pages/Home.jsx","services/boardService.js","store/actions/boardActions.js","services/cloudinaryService.js","cmps/BoardMenu.jsx","cmps/BoardPreview.jsx","cmps/BoardList.jsx","cmps/NavMenuFilter.jsx","cmps/NavMenu.jsx","cmps/HistoryNotifications.jsx","cmps/AllReadNotifications.jsx","cmps/UnReadNotifications.jsx","cmps/NavUserNotificationMenu.jsx","cmps/BoardMembers.jsx","cmps/MemberPreview.jsx","cmps/NavBarSearch.jsx","cmps/InviteMemberModal.jsx","styles/setup/variable.js","cmps/ChartBar.jsx","cmps/ChartPay.jsx","cmps/ChartLine.jsx","cmps/ChartModal.jsx","services/soundService.js","cmps/CardComments.jsx","cmps/NavBar.jsx","pages/UserDetails.jsx","pages/DashBoard.jsx","cmps/CardActions.jsx","cmps/CardCommentsList.jsx","cmps/CardDescription.jsx","cmps/CardMembersList.jsx","cmps/CardMembers.jsx","cmps/CardCalendar.jsx","cmps/DueDate.jsx","cmps/ImgModal.jsx","cmps/CardAttachments.jsx","cmps/CardTodoList.jsx","cmps/InterActiveRobot.jsx","cmps/LabelsModal.jsx","cmps/CardLabels.jsx","pages/CardDetails.jsx","cmps/IconPreview.jsx","cmps/CardIconsPreview.jsx","cmps/CardLabelsPreview.jsx","cmps/CardHeaderForm.jsx","cmps/CardMenu.jsx","cmps/CardPreview.jsx","cmps/AddCardForm.jsx","cmps/ListMenu.jsx","cmps/ListTitleForm.jsx","cmps/CardListPreview.jsx","cmps/AddListForm.jsx","pages/Board.jsx","App.js","serviceWorker.js","store/reducers/boardReducer.js","store/reducers/UserReducer.js","store/store.js","index.js"],"names":["history","createBrowserHistory","axios","Axios","create","withCredentials","endpoint","data","ajax","console","log","a","method","url","res","dir","response","status","push","socket","setup","io","terminate","on","eventName","cb","off","emit","login","logout","signup","getUsers","httpService","getById","userId","remove","update","getUserFromSession","clearNotifications","user","notifications","map","notifi","isRead","_id","userCred","_handleLogin","isLogIn","sessionStorage","clear","socketService","setItem","JSON","stringify","session","loadUsers","dispatch","userService","users","setUsers","userCreds","setUser","getUser","userData","type","Login","state","username","password","inputHandler","target","field","name","value","setState","onSubmit","ev","preventDefault","credentials","props","then","catch","className","this","placeholder","autoComplete","onChange","to","React","Component","mapDispatchToProps","connect","SignUp","fullName","isGuest","required","Home","onDemoClick","loggedUser","onClick","component","path","loggedInUser","baseUrl","query","filter","get","params","id","delete","save","board","prm","put","post","setBoards","boardService","boards","clearCurrBoard","setBoard","removeBoard","boardId","saveBoard","savedBoard","uploadImg","UPLOAD_URL","formDataImg","Object","values","files","img","formData","FormData","append","err","Promise","all","BoardMenu","title","editTitleMode","isImgLoading","updateCoverMode","closeBoardMenu","e","closeMenu","node","contains","keyCode","activeEditMode","stopPropagation","handleChange","handleSubmit","onRemoveBoard","openCoverMode","coverMode","closeCoverMode","onUploadImg","background","content","onChangeColor","color","document","addEventListener","removeEventListener","ref","onBlur","autoFocus","spellCheck","onMouseOver","onMouseLeave","hidden","accept","BoardPreview","isModalOpen","openMenu","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","isStarred","onBoardClicked","editable","Fragment","style","getBackground","starToggle","BoardList","addBoardForm","newBoardTitle","escFunction","event","openForm","createNewBoard","handleBlur","addBoardOption","key","NavMenuFilter","onFilter","NavMenu","filteredBoards","filterBy","length","toLowerCase","includes","onHomeBtnClick","onCloseMenu","currBoard","isMenuActive","starredBoards","Boolean","withRouter","HistoryNotifications","isShown","goBack","idx","AllReadNotifications","showHistory","UnReadNotifications","notifiToShow","markAsRead","onBoardCollab","onInviteDecline","cardId","NavUserNotificationMenu","isHistoryShown","onCloseNotificationMenu","onClearNotification","onNotificationsHistory","prevState","collabBoardId","userIdxOnBoard","members","findIndex","imgUrl","userName","splice","isNotificationModalOpen","BoardMembers","cardMemberMode","member","charAt","onInvite","MemberPreview","isUserModalOpen","onCloseUserModal","onUserClick","onUserLogOut","NavBarSearch","searchWord","filterLists","filterCards","isSearchOpenModal","onCloseSearchModal","onSearch","cardLists","forEach","cardList","boardTitle","cards","card","text","cardListId","cardListTitle","filterBoards","filterUsers","openSearchModal","InviteMemberModal","filteredUsers","isAlreadyInvitesShown","onCloseInviteMenu","keyWord","activeBoard","setTimeout","invitedUserId","sender","createdAt","Date","now","prevProps","isInviteModalOpen","onKeyUp","boardApp","labels","datasets","label","backgroundColor","cssVar","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","ChartBar","usersData","width","height","options","maintainAspectRatio","ChartPay","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","ChartLine","ChartModal","isCartModalOpen","closeStatisticModal","onChartClick","notification","notifiPing","Audio","volume","play","typingInterval","NavBar","closingCode","socketSubscribers","invData","notifiBoardCollab","assignData","notifiCardAssign","unshift","moment","fromNow","soundService","assingedBy","onMenuClick","onUserNotificationClick","onInviteMember","window","onbeforeunload","alt","marginRight","UserDetails","match","src","about","DashBoard","CardActions","onLabels","onImages","onTodoAction","openDatePicker","CardCommentsList","comments","comment","marginLeft","minWidth","marginBottom","txt","deleteComment","CardComments","userMsg","isTypeActive","onUserType","clearInterval","currUser","CardDescription","isEditMode","description","dynamicClass","onDescClicked","onTextAreaLeave","onTextFocus","onDescEdit","temp_value","onFocus","moveCaretAtEnd","CardMembersList","opacity","letUserIdx","addMember","CardMembers","isAddMemberActive","isMouseHoverUser","onAddMember","assignedUserId","onMouseEnter","onRemoveCardUser","showModal","CardCalendar","date","timeStamp","formatDate","getTime","minDate","onDatePicked","DueDate","isComplete","diffDays","onComplete","getDiffDays","dueDate","Math","ceil","marginTop","format","fontWeight","ImgModal","scrollTo","top","left","behavior","onCloseImgModal","CardAttachments","isLoading","activeImg","onUpload","uploadedFiles","cdyImgs","file","fileName","original_filename","attachments","onDelete","onImgClick","multiple","CardTodoList","isAddModalShown","newTodoVal","isListFiltered","openTodos","completedTodos","barFillWidth","toggleMode","getBarWidth","totalTodos","todosBarWidth","getTodosStatus","checkList","item","isDone","todo","doneBy","onAddTodo","onHideComplete","onTodosScreen","creator","onActionTodo","list","padding","LabelsModal","isErrorShown","onLabelClick","CardLabels","isDeleteBtnShow","innerText","onEnter","onLeave","onRemovelabel","minHeight","borderRadius","fontSize","textAlign","position","contentEditable","suppressContentEditableWarning","CardDetails","currCard","currList","isCalendarActive","isImagesShown","isMembersModalShown","isLabelsModalShown","isActionTodoActive","eventsHandler","getCurrCard","onMembers","onCloseCardDetails","onCardTitle","onTitleBlur","IconPreview","icon","num","CardIconsPreview","val","floor","reduce","acc","CardLabelsPreview","lable","CardHeaderForm","cardTitle","cardHeader","closeCardMenu","saveCard","offEditCardHeader","CardMenu","isMenuOpen","onDeleteCard","find","cardIdx","onEditCardHeader","CardPreview","isFocus","parse","showCard","index","animation","draggableId","provided","snapshot","isDragging","innerRef","draggableProps","dragHandleProps","userSelect","histoy","AddCardForm","addCardForm","newCardTitle","createNewCard","onAddCard","ListMenu","onDeleteList","cardlistId","listIdx","onEditListTitle","ListTitleForm","offEditListTitle","CardListPreview","addlistForm","newlistTitle","createNewlist","onAddList","droppableId","isDraggingOver","listTitle","droppableprops","AddListForm","Board","isScrolling","getNewCard","uuid","covers","getNewList","ListId","onDragEnd","result","destination","source","sourcecardList","destcardList","sourcecards","destcards","removed","removedList","onMouseDown","_targetInst","memoizedProps","onMouseUp","onMouseMove","movementX","scrollBy","direction","droppableProps","App","location","hostname","initialState","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.11474fa2.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import history from '../history';\r\nimport Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n    \r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data){\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data){\r\n        \r\n        \r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data){\r\n        console.log(data);\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data){\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method='get', data=null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n          history.push('/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import io from 'socket.io-client';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n  setup,\r\n  terminate,\r\n  on,\r\n  off,\r\n  emit,\r\n};\r\n\r\nfunction setup() {\r\n  socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n\r\n  socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n  socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n  socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  socket.emit(eventName, data);\r\n}\r\n\r\n\r\n","import httpService from './httpService'\r\nimport socketService from './socketService'\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getUserFromSession,\r\n    clearNotifications\r\n}\r\n\r\nfunction getUsers() {\r\n    return httpService.get('user')\r\n}\r\n\r\nfunction getById(userId) {\r\n    return httpService.get(`user/${userId}`)\r\n}\r\n\r\nfunction remove(userId) {\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nfunction update(user) {\r\n    console.log('Update', user);\r\n    \r\n    return httpService.put(`user/${user._id}`, user)\r\n}\r\n\r\nasync function login(userCred) {\r\n    const user = await httpService.post('auth/login', userCred)\r\n    return _handleLogin(user)\r\n}\r\n\r\nasync function signup(userCred) {\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _handleLogin(user)\r\n}\r\n\r\nasync function logout(user) {\r\n    user.isLogIn = false\r\n    await update(user)\r\n    let res = await httpService.post('auth/logout');\r\n   sessionStorage.clear();\r\n    return res\r\n}\r\n\r\nfunction clearNotifications(user) {\r\n    user.notifications.map(notifi => notifi.isRead = true)\r\n    update(user)\r\n}\r\n\r\nfunction _handleLogin(user) {\r\n    user.isLogIn = true ;\r\n    update(user)\r\n    socketService.emit('user login')\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}\r\n\r\nasync function getUserFromSession() {\r\n    \r\n\r\n    const session = await httpService.get('auth/session');\r\n    \r\n    return session;\r\n}\r\n\r\n\r\n/* import Axios from 'axios';\r\nconst userUrl = (process.env.NODE_ENV !== 'development') ? '/api/user' : '//localhost:3030/api/user';\r\nconst authUrl = (process.env.NODE_ENV !== 'development') ? '/api/auth' : '//localhost:3030/api/auth';\r\nconst axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    query,\r\n    get,\r\n    remove,\r\n    update,\r\n    login,\r\n    signup,\r\n    logout,\r\n    session,\r\n    clearNotifications\r\n}\r\n\r\nfunction clearNotifications(user) {\r\n    user.notifications.map(notifi => notifi.isRead = true)\r\n    update(user)\r\n}\r\n\r\nfunction query() {\r\n    return axios.get(userUrl)\r\n        .then(res => res.data)\r\n}\r\n\r\nfunction get(id) {\r\n    return axios.get(`${userUrl}/${id}`)\r\n        .then(res => res.data)\r\n}\r\n\r\n\r\nfunction remove(id) {\r\n    return axios.delete(`${userUrl}/${id}`)\r\n}\r\n\r\nfunction update(user) {\r\n    return axios.put(`${userUrl}/${user._id}`, user)\r\n        .then(res => {\r\n            window.localStorage.setItem('loggedUser', JSON.stringify(res.data));\r\n            return res.data\r\n        })\r\n}\r\n\r\nfunction login(userCreds) {\r\n    return axios.post(`${authUrl}/login`, userCreds)\r\n        .then(res => {\r\n            window.localStorage.setItem('loggedUser', JSON.stringify(res.data));\r\n            return res.data\r\n        })\r\n}\r\nfunction signup(userCreds) {\r\n    return axios.post(`${authUrl}/signup`, userCreds)\r\n        .then(res => res.data)\r\n\r\n}\r\nfunction logout() {\r\n    return axios.post(`${authUrl}/logout`)\r\n        .then(res => res.data)\r\n}\r\n\r\nfunction session() {\r\n    console.log('sesssion');\r\n\r\n    return axios.get(`${authUrl}/session}`)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            return res.data\r\n        })\r\n} */","import userService from '../../services/userService'\r\nimport socketService from '../../services/socketService'\r\n\r\n\r\nexport function loadUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      const users = await userService.getUsers();\r\n      dispatch(setUsers(users));\r\n    } catch (err) {\r\n\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.remove(userId);\r\n      dispatch(_removeUser(userId));\r\n    } catch (err) {\r\n      console.log('UserActions: err in removeUser', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    const user = await userService.login(userCreds);\r\n    dispatch(setUser(user));\r\n  }\r\n}\r\n\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    const user = await userService.signup(userCreds)\r\n    dispatch(setUser(user))\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  return async dispatch => {\r\n    await userService.logout();\r\n    dispatch(setUser(null));\r\n  }\r\n}\r\n\r\nexport function getUser() {\r\n  return async dispatch => {\r\n    const user = await userService.getUserFromSession();\r\n    dispatch(setUser(user));\r\n  }\r\n}\r\n\r\n/* export function getUserById(id) {\r\n  const user = userService.getById(id);\r\n  console.log('user actionnnnnnnnnn', user);\r\n\r\n} */\r\n\r\n\r\nexport function update(userData) {\r\n  return async dispatch => {\r\n    const user = await userService.update(userData);\r\n    dispatch(setUser(user));\r\n  }\r\n}\r\n\r\nexport function setUser(user) {\r\n  return { type: 'SET_USER', user }\r\n}\r\n\r\n\r\nfunction setUsers(users) {\r\n  return { type: 'SET_USERS', users }\r\n}\r\n\r\nfunction _removeUser(userId) {\r\n  return { type: 'USER_REMOVE', userId }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../store/actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Login extends React.Component {\r\n\r\n\r\n    state = {\r\n        username: null,\r\n        password: null\r\n    }\r\n\r\n    inputHandler = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const { username, password } = this.state\r\n        const credentials = {\r\n            username,\r\n            password\r\n        }\r\n\r\n        this.props.login(credentials)\r\n            .then(() => {\r\n\r\n                this.props.history.push('/board')\r\n            })\r\n            .catch(console.log('ERROR')) // TODO: Show error modal\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-container flex column space-between align-center\">\r\n                <h2>Login</h2>\r\n                <form className=\"flex column space-between\" onSubmit={this.onSubmit}>\r\n                    <input type=\"text\" placeholder=\"username\" name=\"username\" autoComplete=\"off\" onChange={this.inputHandler} />\r\n                    <input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={this.inputHandler} />\r\n                    <button>Login</button>\r\n                </form>\r\n                <p>Don't have an account?<Link to=\"/signup\">signup</Link></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    login\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Login)","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { signup } from '../store/actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass SignUp extends React.Component {\r\n\r\n\r\n    state = {\r\n        fullName: null,\r\n        password: null,\r\n        username: null\r\n    }\r\n\r\n    inputHandler = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const { fullName, password, username } = this.state\r\n        const credentials = {\r\n            password,\r\n            fullName,\r\n            username,\r\n            isGuest: false\r\n        }\r\n\r\n        this.props.signup(credentials)\r\n            .then(() => this.props.history.push('/board'))\r\n            .catch(res => console.log(res)) //todo Show an error modal\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"signup-container flex column space-between align-center\">\r\n                <h2>Signup</h2>\r\n                <form className=\"flex column space-between\" onSubmit={this.onSubmit}>\r\n                    <input type=\"text\" placeholder=\"Full name\" name=\"fullName\" onChange={this.inputHandler} required />\r\n                    <input type=\"text\" placeholder=\"username\" name=\"username\" onChange={this.inputHandler} required />\r\n                    <input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={this.inputHandler} required />\r\n                    <button>Signup</button>\r\n                </form>\r\n                <p>Already have an account? <Link to=\"/login\">login</Link></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    signup\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp)","import React from 'react';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport Login from '../cmps/Login.jsx'\r\nimport SignUp from '../cmps/SignUp.jsx'\r\nimport { connect } from 'react-redux'\r\nimport { login, getUser } from '../store/actions/userActions.js'\r\n\r\nclass Home extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.getUser()\r\n            .then(() => {\r\n                if (this.props.loggedUser) this.props.history.push('/board')\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.loggedUser) this.props.history.push('/board')\r\n    }\r\n\r\n    onDemoClick = () => {\r\n        this.props.login({ username: 'guest', password: 'guest' })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"home-container\">\r\n                <div className=\"wallpaper\" />\r\n                <div className=\"home-content-wrapper flex\">\r\n                    <div className=\"home-pitch flex column justify-center align-center\">\r\n                        <h2 className=\"logo\"></h2>\r\n                        <div className=\"home-description-wrapper\">\r\n                            <h3 className=\"line-a\">Taskerr</h3>\r\n                            <h3 className=\"line-b\">Like Trello,</h3>\r\n                            <h3 className=\"line-c\">Just better.</h3>\r\n                            <div className=\"demo-btn flex align-center justify-center\" onClick={this.onDemoClick}>Guest mode</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"home-login-container flex justify-center align-center\">\r\n                        <Switch>\r\n                            <Route component={SignUp} path=\"/signup\" />\r\n                            <Route component={Login} path=\"/\" />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    getUser\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import Axios from 'axios';\r\nconst baseUrl = (process.env.NODE_ENV !== 'development') ? '/api/board' : '//localhost:3030/api/board';\r\nconst axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    query,\r\n    get,\r\n    remove,\r\n    save\r\n}\r\n\r\nfunction query(filter) {\r\n    return axios.get(baseUrl, { params: { ...filter } })\r\n        .then(res => res.data)\r\n}\r\n\r\nfunction get(id) {\r\n    return axios.get(`${baseUrl}/${id}`)\r\n        .then(res => res.data)\r\n}\r\n\r\nfunction remove(id) {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nfunction save(board) {\r\n    let prm;\r\n    if (board._id) {\r\n        prm = axios.put(`${baseUrl}/${board._id}`, board)\r\n    } else {\r\n        prm = axios.post(baseUrl, board)\r\n    }\r\n    return prm.then(res => res.data)\r\n}\r\n","import boardService from '../../services/boardService.js';\r\nimport socketService from '../../services/socketService.js'\r\n\r\n\r\nexport function setBoards(filter = '') {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const boards = await boardService.query(filter)\r\n            return dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log('boardAction: error in setBoards:', err);\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport function clearCurrBoard() {\r\n    return async dispatch => {\r\n        try {\r\n            return dispatch({ type: 'RESET_BOARD' })\r\n        } catch (err) {\r\n            console.log('Dont earse currBoard', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function setBoard(id) {\r\n    return async dispatch => {\r\n        try {\r\n            const board = await boardService.get(id)\r\n            return dispatch({ type: 'SET_BOARD', board })\r\n        } catch (err) {\r\n            console.log('boardAction: error in setBoard:', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeBoard(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            await boardService.remove(boardId)\r\n            dispatch({ type: 'REMOVE_BOARD', boardId })\r\n\r\n        } catch (err) {\r\n            console.log('boardAction: error in removeBoard:', err);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function saveBoard(board) {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const type = board._id ? 'UPDATE_BOARD' : 'ADD_BOARD';\r\n            const savedBoard = await boardService.save(board)\r\n            socketService.emit('board updated', board._id);\r\n            return dispatch({ type, board: savedBoard })\r\n        } catch (err) {\r\n            console.log('boardAction: error in saveBoard:', err);\r\n        }\r\n    }\r\n}\r\n","import axios from 'axios'\r\n\r\n/* const axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n */\r\n\r\nexport function uploadImg(ev) {\r\n    const CLOUD_NAME = 'dt3cfrjpr'; \r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`;\r\n\r\n    const dataImg = Object.values(ev.target.files)\r\n\r\n    const formDataImg = dataImg.map(img => {\r\n        const formData = new FormData();\r\n        formData.append('file', img);\r\n        formData.append('upload_preset', 'rvddiiry'); // second parameter is the upload preset (you can find it in cloudinary settings)\r\n        return axios.post(UPLOAD_URL, formData)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(err => console.log(err))\r\n    })\r\n\r\n    return Promise.all(formDataImg)\r\n\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { saveBoard, removeBoard } from '../store/actions/boardActions.js';\r\nimport { uploadImg } from '../services/cloudinaryService.js';\r\n\r\nclass BoardMenu extends React.Component {\r\n\r\n    state = {\r\n        title: '',\r\n        editTitleMode: false,\r\n        isImgLoading: false,\r\n        updateCoverMode: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.addEventListener(\"keydown\", this.closeBoardMenu, false);\r\n        const { board } = this.props;\r\n        this.setState({ title: board.title })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.removeEventListener(\"keydown\", this.closeBoardMenu, false);\r\n    }\r\n\r\n    closeBoardMenu = (e) => {\r\n        const { closeMenu } = this.props;\r\n        if (!this.node.contains(e.target) || e.keyCode === 27) {\r\n            closeMenu();\r\n        }\r\n    }\r\n\r\n    activeEditMode = (e) => {\r\n        e.stopPropagation()\r\n        this.setState({ editTitleMode: true })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.stopPropagation()\r\n        this.setState({ title: e.target.value })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { saveBoard, closeMenu, clearCurrBoard } = this.props;\r\n        let { board } = this.props\r\n        board.title = this.state.title;\r\n        saveBoard(board)\r\n            .then(() => clearCurrBoard())\r\n        this.setState({ editTitleMode: false })\r\n        closeMenu();\r\n    }\r\n\r\n    onRemoveBoard = (e) => {\r\n        e.stopPropagation();\r\n        const { board, removeBoard } = this.props;\r\n        removeBoard(board._id);\r\n    }\r\n\r\n    openCoverMode = () => {\r\n        this.setState({ coverMode: true })\r\n    }\r\n\r\n    closeCoverMode = () => {\r\n        this.setState({ coverMode: false })\r\n    }\r\n\r\n    onUploadImg = (ev) => {\r\n        const { saveBoard, closeMenu, clearCurrBoard } = this.props;\r\n        this.setState({ isImgLoading: true })\r\n        let { board } = this.props\r\n        uploadImg(ev)\r\n            .then(res => {\r\n                board.background.content = res[0].url\r\n                saveBoard(board)\r\n                    .then(() => clearCurrBoard())\r\n                this.setState({ isImgLoading: false })\r\n                closeMenu();\r\n            })\r\n            .catch(() => this.setState({ isImgLoading: false }))\r\n    }\r\n\r\n    onChangeColor = (color) => {\r\n        const { saveBoard, closeMenu, clearCurrBoard } = this.props;\r\n        let { board } = this.props\r\n        board.background.color = color\r\n        board.background.content = '';\r\n        saveBoard(board)\r\n            .then(() => clearCurrBoard())\r\n        closeMenu();\r\n    }\r\n\r\n    render() {\r\n        const { editTitleMode, title, isImgLoading, coverMode } = this.state\r\n\r\n        return (\r\n            <div ref={node => this.node = node} className={`board-menu-container flex column space-between ${isImgLoading && 'box-shadow-off'}`}>\r\n                {isImgLoading ? <div className=\"loading\"></div> :\r\n                    <>\r\n                        {!editTitleMode ? <>\r\n                            <div onClick={this.activeEditMode}>Edit Title</div>\r\n                            <div className=\"update-cover-btn\" onClick={(e) => e.stopPropagation()} onMouseOver={this.openCoverMode} onMouseLeave={this.closeCoverMode}>Update cover\r\n                            {coverMode && <div className=\"change-cover-wrap flex column\">\r\n                                    <div className=\"color-palette flex\">\r\n                                        <div onClick={() => this.onChangeColor('#e74c3c')}>⬤</div>\r\n                                        <div onClick={() => this.onChangeColor('#e67e22')}>⬤</div>\r\n                                        <div onClick={() => this.onChangeColor('#f1c40f')}>⬤</div>\r\n                                        <div onClick={() => this.onChangeColor('#27ae60')}>⬤</div>\r\n                                        <div onClick={() => this.onChangeColor('#2980b9')}>⬤</div>\r\n                                        <div onClick={() => this.onChangeColor('#8e44ad')}>⬤</div>\r\n                                    </div>\r\n                                    <label>\r\n                                        <div className=\"upload-pic-btn\">Upload Image\r\n                                         <input onChange={this.onUploadImg} type=\"file\" hidden accept=\"image/png, image/jpeg\" />\r\n                                        </div>\r\n                                    </label>\r\n                                </div>}\r\n                            </div>\r\n                            <div className=\"delete-btn\" onClick={this.onRemoveBoard}>Delete Board</div>\r\n                        </> :\r\n                            <form className=\"flex\" onSubmit={this.handleSubmit}>\r\n                                <input value={title} onChange={this.handleChange} onBlur={this.handleSubmit} onClick={(e) => e.stopPropagation()} autoFocus spellCheck=\"false\" />\r\n                            </form>}\r\n                    </>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n    removeBoard\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(BoardMenu)","import React from 'react';\r\nimport BoardMenu from './BoardMenu.jsx'\r\n\r\nexport default class BoardPreview extends React.Component {\r\n\r\n    state = {\r\n        isModalOpen: false\r\n    }\r\n\r\n    getBackground(board) {\r\n        return board.background.content ? {\r\n            backgroundImage: \"url(\" + `${board.background.content}` + \")\",\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'no-repeat'\r\n        } : { background: board.background.color }\r\n    }\r\n\r\n    starToggle(board, ev) {\r\n        const { saveBoard, clearCurrBoard } = this.props;\r\n\r\n        ev.stopPropagation()\r\n        board.isStarred = !board.isStarred;\r\n        saveBoard(board)\r\n            .then(() => clearCurrBoard())\r\n    }\r\n\r\n    openMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({ isModalOpen: true });\r\n\r\n    }\r\n\r\n    closeMenu = () => {\r\n        this.setState({ isModalOpen: false })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { isModalOpen } = this.state\r\n        const { board, onBoardClicked, clearCurrBoard, editable } = this.props\r\n\r\n        return (\r\n            < React.Fragment >\r\n                <div className=\"board\" onClick={() => onBoardClicked(board._id)} style={this.getBackground(board)}>\r\n                    <h3>{board.title}</h3>\r\n                    {editable && <div className={`fs24 ${board.isStarred ? 'starred' : 'not-starred'}`} onClick={(ev) => this.starToggle(board, ev)} />}\r\n                    {editable && <div className=\"menu-btn\" onClick={this.openMenu} />}\r\n                    {isModalOpen && <BoardMenu closeMenu={this.closeMenu} board={board} clearCurrBoard={clearCurrBoard} />}\r\n                </div>\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport BoardPreview from './BoardPreview.jsx'\r\n\r\nexport default class BoardList extends React.Component {\r\n    state = {\r\n        addBoardForm: false,\r\n        newBoardTitle: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    escFunction = (event) => {\r\n        if (event.keyCode === 27) {\r\n            this.setState({ addBoardForm: false, newBoardTitle: '' })\r\n        }\r\n    }\r\n\r\n    openForm = () => {\r\n        this.setState({ addBoardForm: true });\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ newBoardTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.createNewBoard();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        if (this.state.newBoardTitle) this.createNewBoard();\r\n        else this.setState({ addBoardForm: false });\r\n    }\r\n\r\n    createNewBoard() {\r\n        const board = { title: this.state.newBoardTitle }\r\n        this.props.saveBoard(board)\r\n        this.setState({ addBoardForm: false, newBoardTitle: '' })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { boards, onBoardClicked, saveBoard, addBoardOption, clearCurrBoard, history, editable } = this.props;\r\n        const { addBoardForm, newBoardTitle } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                {boards.map(board => <BoardPreview history={history} key={board._id} board={board} onBoardClicked={onBoardClicked} saveBoard={saveBoard} clearCurrBoard={clearCurrBoard} editable={editable} />)}\r\n                {addBoardOption && <div className=\"board add-board flex justify-center align-center\" onClick={this.openForm} >\r\n                    {!addBoardForm ? <h3>Create new board</h3> :\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <input placeholder=\"Board title...\" value={newBoardTitle} onChange={this.handleChange} autoFocus onBlur={this.handleBlur} />\r\n                        </form>\r\n                    }\r\n                </div>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport class NavMenuFilter extends React.Component {\r\n\r\n    inputHandler = ({ target }) => {\r\n        this.props.onFilter(target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"nav-menu-filter flex justify-center align-center\">\r\n                <input className=\"board-search\" autoComplete=\"off\" type=\"text\" name=\"keyword\" placeholder=\"Search a board\" onChange={this.inputHandler} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport BoardList from '../cmps/BoardList';\r\nimport { NavMenuFilter } from '../cmps/NavMenuFilter';\r\nimport { connect } from 'react-redux';\r\nimport { setBoards, setBoard } from '../store/actions/boardActions.js';\r\n\r\nclass NavMenu extends React.Component {\r\n\r\n    state = {\r\n        filteredBoards: null,\r\n    }\r\n\r\n   \r\n    onBoardClicked = (id) => {\r\n        this.props.history.push(`/board/${id}`)\r\n        this.props.setBoard(id)\r\n    }\r\n\r\n    onFilter = (filterBy) => {\r\n        console.log(filterBy);\r\n\r\n        if (!filterBy.length) {\r\n            this.setState({ filteredBoards: null })\r\n            return\r\n        }\r\n        const { boards } = this.props\r\n        const filteredBoards = boards.filter(board => board.title.toLowerCase().includes(filterBy.toLowerCase()));\r\n\r\n        this.setState({ filteredBoards })\r\n    }\r\n\r\n    onHomeBtnClick = () => {\r\n        this.props.history.push(`/board`)\r\n        this.props.onCloseMenu();\r\n    }\r\n\r\n    render() {\r\n        const { currBoard, boards, isMenuActive } = this.props\r\n        const { filteredBoards } = this.state\r\n        let starredBoards = boards.filter(board => board.isStarred);\r\n\r\n        return (\r\n            <div className={`nav-menu flex column ${(isMenuActive)? \"nav-open\": \"\"}`} >\r\n                {currBoard &&\r\n                    <div className=\"home-button flex align-center justify-center cursor\" onClick={() => this.onHomeBtnClick()} >\r\n                        <div className=\"dashboard-btn\"></div>\r\n                        <div className=\"flex align-center justify-center\">Dashboard</div>\r\n                    </div>}\r\n                <NavMenuFilter onFilter={(filterBy) => this.onFilter(filterBy)} />\r\n\r\n                <div className=\"nav-boards-preview-wrapper flex column\">\r\n                    <div className=\"nav-board-preview-overlay\"></div>\r\n\r\n                    {filteredBoards && <h3 className=\"list-header\">Searched Boards</h3>}\r\n                    {filteredBoards && !filteredBoards.length && <h4 className=\"no-match\">- There is no matches</h4>}\r\n                    {filteredBoards && <div className=\"boards-container flex column align-center\">\r\n                        <BoardList boards={filteredBoards} onBoardClicked={this.onBoardClicked} />\r\n                    </div>}\r\n\r\n\r\n                    {Boolean(boards.length) && <div>\r\n                        {Boolean(starredBoards.length) && <>\r\n                            <h3 className=\"list-header\">Starred</h3>\r\n                            <div className=\"boards-container flex column align-center\">\r\n                                <BoardList boards={starredBoards} onBoardClicked={this.onBoardClicked} />\r\n                            </div> </>}\r\n                        <div>\r\n                            {/* <h3 className=\"\"></h3> */}\r\n                            <h3 className=\"list-header\">All Boards</h3>\r\n                        </div>\r\n                        <div className=\"boards-container flex column align-center\">\r\n                            <BoardList boards={boards} onBoardClicked={this.onBoardClicked} />\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default withRouter(NavMenu);\r\nconst mapDispatchToProps = {\r\n    setBoards,\r\n    setBoard\r\n}\r\nexport default connect(null, mapDispatchToProps)(withRouter(NavMenu))\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(withRouter(DashBoard))","import React from 'react'\r\n\r\nexport function HistoryNotifications(props) {\r\n    const { notifications , history , isShown  } = props\r\n    return (\r\n        //  <div className={`nav-user-notifications-container ${isShown? 'open-moadl' : ''} flex column align-center`}>\r\n        <>\r\n            <div className=\"notifications-header flex align-center justify-center\">\r\n                <div className=\"history-back-btn\" onClick={()=>props.goBack()}></div>\r\n                <h3>History</h3>\r\n            </div>\r\n\r\n            <div className=\"nav-notifications-wrapper flex column align-center\">\r\n                {notifications.map((notifi, idx) => {\r\n                    return <div className=\"user-notification flex align-center space-between\"\r\n                        key={idx} onClick={(ev) => {\r\n                            ev.stopPropagation()\r\n                            history.push(`${notifi.url}`)\r\n                            }}>\r\n                        <p>{notifi.content}</p>\r\n                    </div>\r\n\r\n                })}\r\n            </div>\r\n        </>\r\n        // </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport function AllReadNotifications(props) {\r\n    return (\r\n        <div className=\"notifications-all-read flex column align-center\">\r\n            <img className=\"notification-nodata\" />\r\n            <h3>All set! No Unread Notifications</h3>\r\n            <span className=\"notifi-history-btn\" onClick={()=>props.showHistory()}>View history</span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nexport function UnReadNotifications(props) {\r\n\r\n    let notifiToShow = props.user.notifications.filter(notifi => !notifi.isRead)\r\n\r\n    return (\r\n        <div className=\"nav-notifications-wrapper flex column align-center\">\r\n            <span className=\"card-notification-clear\" onClick={() => props.markAsRead()}></span>\r\n            {notifiToShow.map((notifi, idx) => {\r\n                if (notifi.type === 'board-collab') {\r\n                    return <div className=\"user-notification flex align-start\" key={idx}>\r\n                        <p>{notifi.data}</p>\r\n                        <div className=\"board-collab-btns flex column space-around\">\r\n                            <button onClick={()=> props.onBoardCollab(notifi , idx)}>Join</button>\r\n                            <button onClick={()=> props.onInviteDecline(idx)}>Decline</button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                else if(notifi.type === 'card-assign'){\r\n                    return <div className=\"user-notification flex column\" key={idx}>\r\n                        <p className=\"card-assign-content\">{notifi.data}</p>\r\n                        <Link className=\"notification-card-link\" to={`/board/${notifi.boardId}/${notifi.cardId}`}>View Card</Link>\r\n                    </div>\r\n                }\r\n                else {\r\n                    return <div className=\"user-notification flex align-center space-between\" key={idx}>\r\n                        <p>{notifi.data}</p>\r\n                        <Link className=\"notification-link\" to={notifi.url}>Details</Link>\r\n                    </div>\r\n                }\r\n\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport userService from '../services/userService'\r\nimport boardService from '../services/boardService'\r\nimport { HistoryNotifications } from './HistoryNotifications'\r\nimport { AllReadNotifications } from './AllReadNotifications';\r\nimport { UnReadNotifications } from './UnReadNotifications';\r\nimport { saveBoard } from '../store/actions/boardActions.js'\r\nimport {getUser , update , setUser} from '../store/actions/userActions'\r\n\r\n\r\nclass NavUserNotificationMenu extends Component {\r\n\r\n    state = {\r\n        // user: null,\r\n        isHistoryShown: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUser()\r\n        document.addEventListener(\"mousedown\", this.onCloseNotificationMenu, false);\r\n        document.addEventListener(\"keydown\", this.onCloseNotificationMenu, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.onCloseNotificationMenu, false);\r\n        document.removeEventListener(\"keydown\", this.onCloseNotificationMenu, false);\r\n    }\r\n\r\n    onCloseNotificationMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.props.onCloseNotificationMenu();\r\n        }\r\n    }\r\n\r\n\r\n    onClearNotification = () => {\r\n        const { loggedUser } = this.props\r\n        userService.clearNotifications(loggedUser)\r\n        this.props.update(loggedUser)\r\n    }\r\n\r\n    onNotificationsHistory = () => {\r\n        this.setState(prevState => ({ isHistoryShown: !prevState.isHistoryShown }))\r\n    }\r\n\r\n    onBoardCollab = (notifi , idx) => {\r\n        const {loggedUser} = this.props\r\n        boardService.get(notifi.collabBoardId)\r\n            .then(res => {\r\n                let userIdxOnBoard = res.members.findIndex(user => user._id === loggedUser._id)\r\n                console.log(userIdxOnBoard);\r\n                \r\n                if(userIdxOnBoard !== -1) {\r\n                    loggedUser.notifications.splice(idx , 1)\r\n                    return\r\n                }\r\n                res.members.push({\r\n                    _id: loggedUser._id ,\r\n                    imgUrl: loggedUser.imgUrl,\r\n                    userName: loggedUser.userName,\r\n                    fullName: loggedUser.fullName\r\n                })\r\n                loggedUser.notifications.splice(idx , 1)\r\n                this.props.update(loggedUser)\r\n                this.props.saveBoard(res)\r\n                this.props.history.push(`/board/${res._id}`)\r\n            },this.props.onCloseNotificationMenu())\r\n            \r\n\r\n        // boardService.get(notifi.collabBoardId)\r\n        //     .then(res => {\r\n        //         res.members.push({\r\n        //             _id: loggedUser._id ,\r\n        //             imgUrl: loggedUser.imgUrl,\r\n        //             userName: loggedUser.userName,\r\n        //             fullName: loggedUser.fullName\r\n        //         })\r\n        //         loggedUser.notifications.splice(idx , 1)\r\n        //         this.props.update(loggedUser)\r\n        //         this.props.saveBoard(res)\r\n        //         this.props.history.push(`/board/${res._id}`)\r\n                \r\n        //     },this.props.onCloseNotificationMenu())\r\n    \r\n}\r\n\r\n    onInviteDecline = (idx) =>{\r\n        const {loggedUser} = this.props\r\n        loggedUser.notifications.splice(idx , 1)\r\n        this.props.update(loggedUser)\r\n    }\r\n\r\n    render() {\r\n        const { loggedUser, isNotificationModalOpen } = this.props\r\n        const { isHistoryShown } = this.state\r\n        let notifiToShow = loggedUser.notifications.filter(notifi => !notifi.isRead)\r\n\r\n        return (\r\n            <div ref={node => this.node = node}>\r\n\r\n                {<div className={`nav-user-notifications-container ${(isNotificationModalOpen) ? \"modal-open\" : \"\"} flex column align-center`}>\r\n                    {isHistoryShown && <HistoryNotifications isShown={isNotificationModalOpen} goBack={this.onNotificationsHistory} notifications={loggedUser.notifications} history={this.props.history} />}\r\n                    {!isHistoryShown &&\r\n                        <>\r\n                            <div className=\"notifications-header\"><h3>Notifications</h3></div>\r\n                            {!notifiToShow.length ?\r\n\r\n                                <AllReadNotifications showHistory={this.onNotificationsHistory} />\r\n                                :\r\n                                <UnReadNotifications onInviteDecline={this.onInviteDecline} markAsRead={this.onClearNotification} notifications={notifiToShow} onBoardCollab={this.onBoardCollab} user={loggedUser} />\r\n                            }\r\n                        </>}\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n    getUser,\r\n    update,\r\n    setUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavUserNotificationMenu)","import React from 'react'\r\n\r\nexport function BoardMembers(props) {\r\n    const { board, history, cardMemberMode } = props\r\n    console.log('Members Historyyyyyyyy',history);\r\n    \r\n    return (\r\n        <div className=\"nav-board-members flex align-center\">\r\n\r\n            {board.members.map((member, idx) => {\r\n                \r\n                if (member.imgUrl) {\r\n                    return <div key={idx} className=\"board-member\" style={{\r\n                        backgroundImage: \"url(\" + `${member.imgUrl}` + \")\",\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat'\r\n                    }} onClick={() => history.push(`/user/${member._id}`)}>\r\n                        <div className=\"board-member-tooltip\">\r\n                            <p>{member.fullName}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                }\r\n                else {\r\n                    return <h3 className=\"nav-user-profile flex justify-center align-center\">{member.fullName.charAt(0)}</h3>\r\n                }\r\n            })}\r\n            {!cardMemberMode && <button className=\"nav-user-profile invite flex align-center justify-center index-1\" onClick={() => props.onInvite()}><div className=\"plus-white flex align-center justify-center\"></div></button>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport userService from '../services/userService.js'\r\nimport socketService from '../services/socketService.js';\r\n\r\n\r\nexport class MemberPreview extends Component {\r\n\r\n    state = {\r\n        isUserModalOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.onCloseUserModal, false);\r\n        document.addEventListener(\"keydown\", this.onCloseUserModal, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.onCloseUserModal, false);\r\n        document.removeEventListener(\"keydown\", this.onCloseUserModal, false);\r\n    }\r\n\r\n    onCloseUserModal = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.setState({ isUserModalOpen: false });\r\n        }\r\n    }\r\n\r\n    onUserClick = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState(prevState => ({ isUserModalOpen: !prevState.isUserModalOpen }))\r\n    }\r\n\r\n    onUserLogOut = async (ev) => {\r\n        ev.stopPropagation()\r\n        const { history , user } = this.props\r\n        await userService.logout(user) \r\n        socketService.emit('user log-out-ui')\r\n        history.push('/')\r\n    }\r\n\r\n    render() {\r\n\r\n        const { user, history } = this.props\r\n        const { onUserClick, onUserLogOut } = this\r\n        const { isUserModalOpen } = this.state\r\n\r\n        return (\r\n            <div className=\"user-preview\" ref={node => this.node = node} onClick={onUserClick}>\r\n                {user.imgUrl ?\r\n                    <div className=\"board-member\" style={{\r\n                        backgroundImage: \"url(\" + `${user.imgUrl}` + \")\",\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat'\r\n                    }}>\r\n                    </div>\r\n                    :\r\n                    <h3 className=\"nav-user-profile flex justify-center align-center\">{user.fullName.charAt(0)}</h3>}\r\n\r\n                {<div className={`member-modal ${isUserModalOpen ? \"modal-open\" : \"\"}`}>\r\n                    <div onClick={() => history.push(`/user/${user._id}`)}> My details </div>\r\n                    <div onClick={(ev) => onUserLogOut(ev)}>Log Out</div>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport BoardList from '../cmps/BoardList';\r\nimport { NavMenuFilter } from '../cmps/NavMenuFilter'\r\n\r\nexport default class NavBarSearch extends React.Component {\r\n\r\n    state = {\r\n        users: null,\r\n        searchWord: \"\",\r\n        filterLists: [],\r\n        filterCards: [],\r\n        isSearchOpenModal: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.onCloseSearchModal, false);\r\n        document.addEventListener(\"keydown\", this.onCloseSearchModal, false);\r\n        this.loadUsers()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.onCloseSearchModal, false);\r\n        document.removeEventListener(\"keydown\", this.onCloseSearchModal, false);\r\n    }\r\n\r\n    loadUsers = () => {\r\n        //TODO load users light array from the server\r\n    }\r\n\r\n    openSearchModal() {\r\n        this.setState({ isSearchOpenModal: true });\r\n    }\r\n\r\n    onCloseSearchModal = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.setState({ isSearchOpenModal: false });\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ searchWord: value }, () => this.onSearch())\r\n    }\r\n\r\n    onBoardClicked = (id) => {\r\n        this.props.history.push(`/board/${id}`)\r\n    }\r\n\r\n    onSearch = () => {\r\n        const { searchWord } = this.state\r\n        const { currBoard, boards } = this.props\r\n\r\n        if (!searchWord.length) {\r\n            this.setState({ filterBoards: [], filterLists: [], filterCards: [], filterUsers: [] })\r\n            return;\r\n        }\r\n        \r\n        if (currBoard) {\r\n            let filterLists = []\r\n            currBoard.cardLists.forEach(cardList => {\r\n                if (cardList.title.toLowerCase().includes(searchWord.toLowerCase())) {\r\n                    cardList.boardId = currBoard._id;\r\n                    cardList.boardTitle = currBoard.title;\r\n                    filterLists.push(cardList)\r\n                }\r\n            });\r\n\r\n            let filterCards = []\r\n            currBoard.cardLists.forEach(cardList => {\r\n                cardList.cards.forEach(card => {\r\n                    if (card.text.toLowerCase().includes(searchWord.toLowerCase())) {\r\n                        card.boardId = currBoard._id;\r\n                        card.boardTitle = currBoard.title;\r\n                        card.cardListId = cardList.id;\r\n                        card.cardListTitle = cardList.title;\r\n                        filterCards.push(card)\r\n                    }\r\n                })\r\n            });\r\n            this.setState({ filterLists, filterCards })\r\n        }else if (boards) {\r\n            let filterBoards = boards.filter(board => board.title.toLowerCase().includes(searchWord.toLowerCase()));\r\n            if (!filterBoards.length) filterBoards = boards;\r\n            this.setState({ filterBoards })\r\n            return\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { searchWord, filterLists, filterCards, filterBoards, isSearchOpenModal } = this.state\r\n        const { currBoard, history } = this.props\r\n        let starredBoards\r\n        if (filterBoards) starredBoards = filterBoards.filter(board => board.isStarred)\r\n\r\n\r\n        return (\r\n            <div ref={node => this.node = node} className=\" nav-search-result-container flex column\">\r\n\r\n                <input onClick={() => this.openSearchModal()} autoComplete=\"off\" onSubmit={() => this.onSearch} className=\"card-search\" type=\"text\" value={searchWord} name=\"keyword\" placeholder=\"Search\" onChange={this.handleChange} />\r\n                <div className={`nav-search-result ${(isSearchOpenModal) ? \"open-modal\" : \"\"} flex column`}>\r\n                    {filterBoards && Boolean(filterBoards.length) &&\r\n\r\n                        <div>\r\n                            <h3 className=\"result-header\">Board result</h3>\r\n                            <div className=\"search-results\">\r\n                                {filterBoards.map(board =>\r\n                                    <div className=\"result-preview\" onClick={() => history.push(`/board/${board._id}`)}>\r\n                                        <div className=\"board-btn\"></div>\r\n                                        <div className=\"header\">{board.title}</div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>}\r\n                    {!Boolean(filterLists.length) && !Boolean(filterCards.length) && filterBoards && !Boolean(filterBoards.length) &&  \r\n                        <div className='empty-search-massage'>\r\n                            <div className=\"search\"></div>\r\n                            <div>Search</div>\r\n                        </div>}\r\n\r\n                    {\r\n                        /* filterLists && Boolean(filterLists.length) &&\r\n                        <>\r\n                            <div className=\"result-header\" >List results</div>\r\n                            <div className=\"search-results\">\r\n                                {filterLists.map(list => (\r\n                                    <div className=\"result-preview\">\r\n                                        <div className=\"list-pic\"></div>\r\n                                        <div className=\"header\">{list.title}</div>\r\n                                        <div className=\"conjunction\">(list)</div>\r\n                                        <div className=\"conjunction\">from</div>\r\n                                        <div className=\"header\">{list.boardTitle}</div>\r\n                                        <div className=\"conjunction\">(board)</div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </> */\r\n                    }\r\n                    {filterCards && Boolean(filterCards.length) &&\r\n                        <>\r\n                            <div className=\"result-header\">{/* Card results */}</div>\r\n                            <div className=\"search-results\">\r\n                                {filterCards.map(card => (\r\n                                    <div className=\"result-preview\" onClick={() => history.push(`/board/${currBoard._id}/${card.id}`)}>\r\n                                        <div className=\"card result-icon\" ></div>\r\n                                        <div className=\"text-result\">\r\n                                            <div className=\"header\">{card.text}</div>\r\n                                            {/* <div className=\"conjunction\">(card)</div> */}\r\n                                            <div className=\"conjunction\">in</div>\r\n                                            <div className=\"conjunction\">{card.cardListTitle}</div>\r\n                                            {/* <div className=\"conjunction\">(list)</div> */}\r\n                                            {/* <div className=\"conjunction\">from</div>\r\n                                            <div className=\"header\">{card.boardTitle}</div>\r\n                                            <div className=\"conjunction\">(board)</div> */}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </>}\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport { connect } from 'react-redux'\r\nimport socketService from '../services/socketService'\r\n\r\nclass InviteMemberModal extends Component {\r\n\r\n    state = {\r\n        filteredUsers: null,\r\n        isAlreadyInvitesShown: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadUsers()\r\n        document.addEventListener(\"mousedown\", this.onCloseInviteMenu, false);\r\n        document.addEventListener(\"keydown\", this.onCloseInviteMenu, false);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.onCloseInviteMenu, false);\r\n        document.removeEventListener(\"keydown\", this.onCloseInviteMenu, false);\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.users !== this.props.users){\r\n            console.log('CHANGEEEEEEEEEEEEEEEEEEEEEEEEEE');\r\n            // this.props.loadUsers()\r\n        }\r\n    }\r\n\r\n    onCloseInviteMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            // this.setState({ isMenuOpen: false })\r\n            this.props.onCloseInviteMenu();\r\n        }\r\n    }\r\n\r\n    inputHandler = ({ target }) => {\r\n        this.props.loadUsers()\r\n        if (!target.value) {\r\n            this.setState({ filteredUsers: null })\r\n            return\r\n        }\r\n\r\n        let keyWord = target.value.toLowerCase()\r\n        const { users } = this.props\r\n        let filteredUsers = users.filter(user => user.userName.includes(keyWord.toLowerCase()))\r\n        this.setState({ filteredUsers })\r\n    }\r\n\r\n    onInvite = (userId) => {\r\n      let userIdxInBoard = this.props.activeBoard.members.findIndex(user => user._id === userId)\r\n      if(userIdxInBoard !== -1){\r\n       this.setState({isAlreadyInvitesShown: true})\r\n       setTimeout(()=>{\r\n        this.setState({isAlreadyInvitesShown: false})\r\n       },1500)\r\n        return\r\n      }\r\n        let data = {\r\n            invitedUserId: userId,\r\n            sender: this.props.loggedUser.userName,\r\n            collabBoardId: this.props.activeBoard._id,\r\n            createdAt: Date.now()\r\n        }\r\n        socketService.emit('user invite', data);\r\n    }\r\n\r\n    render() {\r\n        const { filteredUsers , isAlreadyInvitesShown } = this.state\r\n        const { isInviteModalOpen } = this.props\r\n        console.log(isInviteModalOpen)\r\n\r\n        return (\r\n            <div ref={node => this.node = node} className={`invite-members-modal ${(isInviteModalOpen) ? 'modal-open' : ''} flex column align-center`}>\r\n                <div className=\"invite-header\"><h3>Invite to collaborate</h3></div>\r\n                {isAlreadyInvitesShown && <p>User already a member!</p>}\r\n                <input type=\"text\" placeholder=\"Enter userName to invite\" onKeyUp={this.inputHandler} />\r\n                {filteredUsers && <div className=\"invite-users-list flex column align-center\">\r\n                    {filteredUsers.map((user, idx) => {\r\n                        return <div key={idx} className=\"user-to-invite flex align-center space-between \">\r\n                            <span className=\"nav-user-profile\" style={{\r\n                                backgroundImage: \"url(\" + `${user.imgUrl}` + \")\",\r\n                                backgroundPosition: 'center',\r\n                                backgroundSize: 'cover',\r\n                                backgroundRepeat: 'no-repeat'\r\n                            }}>\r\n                            </span>\r\n                            <h4>{user.fullName}</h4>\r\n                            <button className=\"user-invite-btn\" onClick={() => this.onInvite(user._id)}>Invite</button>\r\n                            {user.isLogIn &&\r\n                                <div className=\"user-status flex column align-center\">\r\n                                    <span className=\"user-online\"></span>\r\n                                    <h5>Online</h5>\r\n                                </div>}\r\n\r\n                            {!user.isLogIn &&\r\n                                <div className=\"user-status flex column align-center\">\r\n                                    <span className=\"user-offline\"></span>\r\n                                    <h5>Offline</h5>\r\n                                </div>}\r\n\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.user.users,\r\n        loggedUser: state.user.loggedInUser,\r\n        activeBoard: state.boardApp.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadUsers\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InviteMemberModal)","export default {\r\n    $clrChart1: 'rgb(0, 63, 92)',\r\n    $clrChart2: 'rgb(47, 75, 124)',\r\n    $clrChart3: 'rgb(102, 81, 149)',\r\n    $clrChart4: 'rgb(160, 81, 149)',\r\n    $clrChart5: 'rgb(212, 80, 135)',\r\n    $clrChart6: 'rgb(249, 93, 106)',\r\n    $clrChart7: 'rgb(255, 124, 67)',\r\n    $clrChart8: 'rgb(255, 166, 0)',\r\n    $clrChart9: 'rgb(24, 170, 225)',\r\n    $clrChart10: 'rgb(238, 83, 141)',\r\n}\r\n\r\n// const color = {\r\n//     $clrChart8: '#ffa600',\r\n//     $clrChart1: '#003f5c',\r\n//     $clrChart2: '#2f4b7c',\r\n//     $clrChart3: '#66519',\r\n//     $clrChart4: '#a05195',\r\n//     $clrChart5: '#d45087',\r\n//     $clrChart6: '#f95d6a',\r\n//     $clrChart7: '#ff7c43'\r\n\r\n// }","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n// import moment from 'moment'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport cssVar from '../styles/setup/variable.js'\r\n\r\n\r\nlet data = {\r\n    labels: ['23/5', '24/5', '25/5', '26/5', '27/5', '28/5', '29/5'],\r\n    datasets: [\r\n        {\r\n            label: 'Dor Ben Itzhak',\r\n            backgroundColor: cssVar.$clrChart3,\r\n            borderColor: cssVar.$clrChart3,\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: cssVar.$clrChart3,\r\n            hoverBorderColor: cssVar.$clrChart3,\r\n            data: [1, 2, 3, 2, 1, 1, 3]\r\n        },\r\n        {\r\n            label: 'Reem Alon',\r\n            backgroundColor: cssVar.$clrChart6,\r\n            borderColor: cssVar.$clrChart6,\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: cssVar.$clrChart6,\r\n            hoverBorderColor: cssVar.$clrChart6,\r\n            data: [3, 2, 5, 1, 6, 5, 2]\r\n        }\r\n    ]\r\n};\r\n\r\n\r\nclass ChartBar extends Component {\r\n\r\n    state = {\r\n        usersData: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ usersData: data })\r\n    }\r\n\r\n    // usersDataGenerator = () => {\r\n    //     let data = {};\r\n    //     const dateNow = Date.now()\r\n    //     data.labels = []\r\n    //     for (let step = 5; step > 0; step--) {\r\n    //         const day = 1000 * 60 * 60 * 24;\r\n    //         data.labels.push(moment(dateNow - (day * step)).format(\"MMM Do\"))\r\n    //     }\r\n    //     ;\r\n    //     let usersDoneCard = this.reducerJoinTaskByUser();\r\n    //     for (const userId in usersDoneCard) {\r\n    //         data.datasets.push({\r\n    //             label: usersDoneCard[userId].doneBy.name,\r\n    //             backgroundColor: 'rgba(111,11,11,0.2)',\r\n    //             borderColor: 'rgba(111,11,11,1)',\r\n    //             borderWidth: 1,\r\n    //             hoverBackgroundColor: 'rgba(111,11,11,0.4)',\r\n    //             hoverBorderColor: 'rgba(111,11,11,1)',\r\n    //             data: [65, 59, 80, 81, 56, 55, 40]\r\n    //         })\r\n    //     }\r\n\r\n    // }\r\n\r\n    // reducerJoinTaskByUser = () => {\r\n    //     const currBoard = this.state;\r\n\r\n    //     return currBoard.cardLists.reducer((acc, cardList) => {\r\n    //         cardList.cards.forEach(card => {\r\n    //             card.checkList.forEach(checkBox => {\r\n    //                 if (checkBox.isDone && checkBox.doneBy) {\r\n    //                     if (!acc[checkBox.doneBy.id]) {\r\n    //                         acc[checkBox.doneBy.id] = []\r\n    //                         acc[checkBox.doneBy.id].push(checkBox);\r\n    //                     } else {\r\n    //                         acc[checkBox.doneBy.id].push(checkBox);\r\n    //                     }\r\n    //                 }\r\n\r\n    //             })\r\n    //         })\r\n    //         return acc\r\n    //     }, {})\r\n    // }\r\n\r\n\r\n    render() {\r\n        const { usersData } = this.state;\r\n\r\n        \r\n        return (\r\n            (!usersData)? <div>loading</div> :\r\n            <div className=\"chart-bar\">\r\n                <h2>Done tasks by user</h2>\r\n                <Bar\r\n                    data={usersData}\r\n                    width={2}\r\n                    height={1}\r\n                    options={{\r\n                        maintainAspectRatio: false,\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartBar)","import React, { Component } from 'react'\r\nimport { Pie } from 'react-chartjs-2';\r\nimport cssVar from '../styles/setup/variable.js'\r\n\r\nconst data = {\r\n\tlabels: [\r\n\t\t'Todo',\r\n\t\t'In progress',\r\n\t\t'Done'\r\n\t],\r\n\tdatasets: [{\r\n\t\tdata: [10, 5, 2],\r\n\t\tbackgroundColor: [\r\n\t\t\tcssVar.$clrChart9,\r\n\t\t\tcssVar.$clrChart10,\r\n\t\t\tcssVar.$clrChart8,\r\n\t\t],\r\n\r\n\t\thoverBackgroundColor: [\r\n\t\t\t`rgba(${cssVar.$clrChart9}, 0.8)`,\r\n\t\t\t`rgba(${cssVar.$clrChart10}, 0.8)`,\r\n\t\t\t`rgba(${cssVar.$clrChart8}, 0.8)`,\r\n\t\t]\r\n\t}]\r\n};\r\n\r\n\r\n\r\nexport default class ChartPay extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"chart-pay\">\r\n\t\t\t\t<h2>Card popularipopularity</h2>\r\n\t\t\t\t<Pie data={data} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};","import React, { Component } from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\nimport cssVar from '../styles/setup/variable.js'\r\n\r\n\r\nconst data = {\r\n    labels: ['23/5', '24/5', '25/5', '26/5', '27/5', '28/5', '29/5'],\r\n    datasets: [\r\n        {\r\n            label: 'Todo',\r\n            fill: false,\r\n            lineTension: 0.5,\r\n            backgroundColor: cssVar.$clrChart9,\r\n            borderColor: cssVar.$clrChart9,\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: cssVar.$clrChart9,\r\n            pointBackgroundColor: cssVar.$clrChart9,\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: cssVar.$clrChart9,\r\n            pointHoverBorderColor: cssVar.$clrChart9,\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [3, 2, 5, 1, 6, 5, 2]\r\n        }, {\r\n            label: 'In progress',\r\n            fill: false,\r\n            lineTension: 0.5,\r\n            backgroundColor: cssVar.$clrChart10,\r\n            borderColor: cssVar.$clrChart10,\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: cssVar.$clrChart10,\r\n            pointBackgroundColor: cssVar.$clrChart10,\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: cssVar.$clrChart10,\r\n            pointHoverBorderColor: cssVar.$clrChart10,\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [3, 4, 1, 3, 4, 5, 6]\r\n        }\r\n    ]\r\n};\r\n\r\n\r\n\r\nexport default class ChartLine extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chart-line\">\r\n                <h2>Task amount to day</h2>\r\n                <Line data={data} />\r\n            </div>\r\n        );\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport ChartBar from '../cmps/ChartBar.jsx';\r\nimport ChartPay from '../cmps/ChartPay.jsx';\r\nimport ChartLine from '../cmps/ChartLine.jsx';\r\n\r\n\r\nexport default class ChartModal extends Component {\r\n    state = {\r\n        isCartModalOpen: false\r\n    }\r\n    \r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.closeStatisticModal, false);\r\n        document.addEventListener(\"keydown\", this.closeStatisticModal, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.closeStatisticModal, false);\r\n        document.removeEventListener(\"keydown\", this.closeStatisticModal, false);\r\n    }\r\n\r\n    closeStatisticModal = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.setState({ isCartModalOpen: false })\r\n        }\r\n    }\r\n\r\n    onChartClick = () => {\r\n        this.setState(prevState => ({ isCartModalOpen: !prevState.isCartModalOpen }))\r\n    }\r\n\r\n    render() {\r\n        const { isCartModalOpen } = this.state;\r\n\r\n\r\n        return (\r\n            <div className={`chart-container `}>\r\n                <div className=\"nav-chart-btn chart\" onClick={this.onChartClick}></div>\r\n                <div className={`screen  ${(isCartModalOpen) ? \"modal-open\" : \"\"} `}>\r\n                    <div ref={node => this.node = node} className=\"chart-modal flex wrap\">\r\n                        <ChartPay />\r\n                        <ChartLine />\r\n                        <ChartBar />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\n\r\nexport default {\r\n    notification\r\n}\r\n\r\nfunction notification(){\r\n    var notifiPing = new Audio('https://res.cloudinary.com/dt3cfrjpr/video/upload/v1590757355/messenger_d1vdx5.mp3');\r\n    notifiPing.volume = 0.15;\r\n    notifiPing.play();\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { CardCommentsList } from './CardCommentsList'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nimport socketService from '../services/socketService'\r\n\r\nlet typingInterval;\r\n\r\nclass CardComments extends Component {\r\n\r\n    state = {\r\n        userMsg: '',\r\n        isTypeActive: false,\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = this.props.card.id\r\n\r\n        socketService.on(`user-type-${id}`, (status) => {\r\n            console.log('Get Focus Status from server');\r\n            this.setState({isTypeActive: status})\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const id = this.props.card.id\r\n        socketService.off(`user-type-${id}`)\r\n    }\r\n\r\n    onUserType = ({target}) => {\r\n        \r\n        const id = this.props.card.id\r\n        this.setState({userMsg: target.value})\r\n        clearInterval(typingInterval);\r\n        socketService.emit('user typing' , {id , status: true} )\r\n        typingInterval = setTimeout(()=>{\r\n            socketService.emit('user typing' , {id , status: false} ) \r\n        },550)\r\n\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const {card , board , user} = this.props\r\n        const { userMsg } = this.state\r\n        if(!userMsg) return\r\n\r\n        let data = {\r\n            \r\n            userName: user.userName,\r\n            txt: userMsg,\r\n            imgUrl: user.imgUrl,\r\n            createdAt: Date.now()\r\n            \r\n        }\r\n        card.comments.unshift(data)\r\n        this.props.saveBoard(board)\r\n            .then(() => socketService.emit('board updated', board._id));\r\n        this.setState({userMsg: ''})\r\n    }\r\n\r\n    deleteComment = (idx) => {\r\n        const { card, board } = this.props\r\n        card.comments.splice(idx,1)\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    render() {\r\n        const { currUser, card, board } = this.props\r\n        const {userMsg , isTypeActive} = this.state\r\n        if(!currUser) return ''\r\n        return (\r\n            <div className=\"card-comments\">\r\n                <div className=\"flex align-center\" style={{ marginBottom: \"15px\" }}>\r\n                    <span className=\"comment\" />\r\n                    <h4>Comments</h4>\r\n                </div>\r\n               <div className=\"card-add-comment flex align-center\" style={{ marginLeft: \"40px\", marginBottom: \"15px\" }}>\r\n               {currUser.imgUrl &&   <div className=\"self-profile-comment\" style={{\r\n                        backgroundImage: \"url(\" + `${currUser.imgUrl}` + \")\",\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat'\r\n                    }} >\r\n                    </div>}\r\n                    {!currUser.imgUrl && <h3 style={{marginLeft: \"0px\" , marginRight:\"15px\"}} className=\"card-user-profile flex justify-center align-center\">{currUser.fullName.charAt(0)}</h3>}\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <input className=\"user-text-input\" type=\"text\" placeholder={currUser.userName + \", whats on your mind?\"}\r\n                            onChange={this.onUserType} value={userMsg}  />\r\n                    </form>\r\n                    {isTypeActive && <span className=\"pulse\" />}\r\n                </div>\r\n                < CardCommentsList card={card} user={currUser} board={board} deleteComment={this.deleteComment} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currUser: state.user.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardComments)","import React from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n// import boardService from \"../services/boardService.js\"\r\nimport NavMenu from '../cmps/NavMenu'\r\nimport NavUserNotificationMenu from './NavUserNotificationMenu'\r\nimport { connect } from 'react-redux'\r\nimport { setBoards, setBoard } from '../store/actions/boardActions.js'\r\nimport { getUser, update, loadUsers } from '../store/actions/userActions.js'\r\nimport { BoardMembers } from './BoardMembers'\r\nimport { MemberPreview } from './MemberPreview'\r\nimport NavBarSearch from './NavBarSearch'\r\nimport InviteMemberModal from './InviteMemberModal'\r\nimport socketService from '../services/socketService'\r\nimport ChartModal from './ChartModal';\r\nimport moment from 'moment'\r\nimport soundService from '../services/soundService'\r\n\r\nclass NavBar extends React.Component {\r\n\r\n    state = {\r\n        isMenuActive: false,\r\n        isInviteModalOpen: null,\r\n        isNotificationModalOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.onCloseMenu, false);\r\n        document.addEventListener(\"keydown\", this.onCloseMenu, false);\r\n\r\n        window.onbeforeunload = this.closingCode\r\n        socketService.setup()\r\n        socketService.on(`newuserconnect`, () => {\r\n            console.log('NEW USER CONNECTED!!!!!!!!!!!');\r\n            this.props.loadUsers()\r\n        })\r\n        socketService.on(`user-disconnected`, () => {\r\n            this.props.loadUsers()\r\n        })\r\n        socketService.on(`user-disconnected-ui`, () => {\r\n            console.log('USER DC FROM UI BTN');\r\n                        this.props.loadUsers()\r\n        })\r\n        this.props.getUser()\r\n            .then(() => {\r\n                this.socketSubscribers()\r\n                if (!this.props.loggedUser) this.props.history.push('/')\r\n                else this.props.setBoards()\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.loggedUser !== this.props.loggedUser) {\r\n            this.socketSubscribers()\r\n        }\r\n    }\r\n\r\n    closingCode = () => {\r\n        this.props.loggedUser.isLogIn = false\r\n        this.props.update(this.props.loggedUser)\r\n            .then(() => {\r\n                socketService.emit('user logged-out')\r\n                return null\r\n            })\r\n    }\r\n\r\n    socketSubscribers = () => {\r\n        socketService.off(`user-invite-${this.props.loggedUser._id}`)\r\n        socketService.off(`user-card-assign-${this.props.loggedUser._id}`)\r\n\r\n        if (this.props.loggedUser) {\r\n            socketService.on(`user-invite-${this.props.loggedUser._id}`, (invData) => {\r\n                this.notifiBoardCollab(invData);\r\n            })\r\n            socketService.on(`user-card-assign-${this.props.loggedUser._id}`, (assignData) => {\r\n                this.notifiCardAssign(assignData);\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    notifiBoardCollab = (invData) => {\r\n        this.props.loggedUser.notifications.unshift({\r\n            data: `Exciting news! ${invData.sender} invited you to collaborate in a board.`,\r\n            createdAt: moment(invData.createdAt).fromNow(),\r\n            collabBoardId: invData.collabBoardId,\r\n            isRead: false,\r\n            type: 'board-collab'\r\n        })\r\n        this.props.update(this.props.loggedUser)\r\n        soundService.notification()\r\n    }\r\n\r\n    notifiCardAssign = (assignData) => {\r\n        this.props.loggedUser.notifications.unshift({\r\n            data: `Congratz! you have new card assign by ${assignData.assingedBy}.`,\r\n            type: 'card-assign',\r\n            isRead: false,\r\n            cardId: assignData.cardId,\r\n            boardId: assignData.boardId\r\n        })\r\n        this.props.update(this.props.loggedUser)\r\n        soundService.notification()\r\n    }\r\n\r\n    onMenuClick = () => {\r\n        this.setState(prevState => ({ isMenuActive: !prevState.isMenuActive }))\r\n    }\r\n\r\n    onCloseMenu = () => {\r\n        this.setState({ isMenuActive: false })\r\n    }\r\n\r\n    onCloseInviteMenu = () => {\r\n        this.setState({ isInviteModalOpen: false })\r\n    }\r\n\r\n    onCloseNotificationMenu = () => {\r\n        this.setState({ isNotificationModalOpen: false })\r\n    }\r\n\r\n    onUserNotificationClick = () => {\r\n        this.setState(prevState => ({ isNotificationModalOpen: !prevState.isNotificationModalOpen }))\r\n    }\r\n\r\n    onInviteMember = () => {\r\n        this.setState(prevState => ({ isInviteModalOpen: !prevState.isInviteModalOpen }))\r\n    }\r\n\r\n    render() {\r\n        const { isMenuActive, isNotificationModalOpen, isInviteModalOpen } = this.state\r\n        const { boards, activeBoard, history, loggedUser } = this.props\r\n        const { onCloseInviteMenu, onInviteMember, onCloseNotificationMenu } = this\r\n        let notifiToShow;\r\n        if (loggedUser) {\r\n            notifiToShow = loggedUser.notifications.filter(notifi => !notifi.isRead)\r\n        }\r\n\r\n        if (!loggedUser) return ''\r\n        return (\r\n            <nav className=\"nav-bar flex align-center space-between\" >\r\n                {!activeBoard && <div className=\"img-wrapper\" onClick={() => this.props.history.push('/board')}>\r\n                    <img className=\"logo\" width='60px' alt=\"\" />\r\n                </div>}\r\n\r\n                <div className=\"nav-left-section flex align-center\">\r\n                    {activeBoard &&\r\n                        <div className=\"board-button flex align-center justiry-center space-between cursor\" onClick={this.onMenuClick}>\r\n                            <div style={{ marginRight: \"5px\" }} className=\"board-btn\"></div>\r\n                            <div className=\"board-txt\">Boards</div>\r\n                        </div>}\r\n\r\n                    <div className={`mobile-menu ${(isMenuActive) ? 'modal-open' : \"\"}`}  ref={node => this.node = node}>\r\n                        {<NavMenu history={history} isMenuActive={isMenuActive} boards={boards} currBoard={activeBoard} onCloseMenu={this.onCloseMenu} />}\r\n                        {activeBoard && <BoardMembers onInvite={onInviteMember} history={history} board={activeBoard} />}\r\n                        {activeBoard && <InviteMemberModal isInviteModalOpen={isInviteModalOpen} onCloseInviteMenu={onCloseInviteMenu} />}\r\n                    </div>\r\n                    {< NavBarSearch boards={boards} history={history} currBoard={activeBoard} history={history} />}\r\n                </div>\r\n                <div className=\"nav-right-section flex align-center\">\r\n                    {/* <button className=\"board-menu\" onClick={() => history.push(`/board`)}>Board Menu</button> */}\r\n                    {activeBoard && <ChartModal />}\r\n                    <div style={{ backgroundColor: `${notifiToShow.length ? \"rgb(252, 115, 126)\" : \"\"} ` }} className=\"nav-notification-btn\" onClick={this.onUserNotificationClick}>\r\n                        {/* <div className=\"notification-indocator\">aaaaa</div> */}\r\n                    </div>\r\n                    {<NavUserNotificationMenu onCloseNotificationMenu={onCloseNotificationMenu} isNotificationModalOpen={isNotificationModalOpen} history={history} user={loggedUser} />}\r\n                    <MemberPreview user={loggedUser} history={history} />\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedUser: state.user.loggedInUser,\r\n        boards: state.boardApp.boards,\r\n        activeBoard: state.boardApp.currBoard,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setBoards,\r\n    setBoard,\r\n    getUser,\r\n    update,\r\n    loadUsers\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavBar))\r\n","import React from 'react';\r\nimport { update, /* getUserById */ } from '../store/actions/userActions.js'\r\nimport { connect } from 'react-redux';\r\nimport userService from '../services/userService.js'\r\n\r\nclass UserDetails extends React.Component {\r\n\r\n    state = {\r\n        user: null\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user;\r\n        const id = this.props.match.params.userId;\r\n        userService.getById(id)\r\n            .then(res => {\r\n                user = res\r\n                if (!user) this.props.history.push('/')\r\n                else {\r\n                    this.setState({ user })\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { user } = this.state;\r\n        if (!user) return <h3>Loading...</h3>\r\n\r\n        return (<div className=\"user-profile-container flex column\">\r\n            <h2>{user.fullName}'s Profile</h2>\r\n            <div></div>\r\n            <img className=\"user-img\" src={user.imgUrl} />\r\n            <p>User Name: {user.userName}</p>\r\n            <p>About:{user.about}</p>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // loggedUser: state.user.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    // getUserById,\r\n    update\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDetails)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport BoardList from '../cmps/BoardList.jsx';\r\nimport { setBoards, saveBoard, clearCurrBoard } from '../store/actions/boardActions.js'\r\nimport socketService from '../services/socketService'\r\nimport moment from 'moment'\r\nimport { setUser, getUser, update } from '../store/actions/userActions'\r\n\r\nclass DashBoard extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.setBoards()\r\n        this.props.getUser()\r\n    }\r\n\r\n\r\n    onBoardClicked = (id) => {\r\n        this.props.history.push(`/board/${id}`)\r\n    }\r\n\r\n    render() {\r\n        const { boards, saveBoard, clearCurrBoard } = this.props;\r\n        let filteredBoards = boards.filter(board => board.isStarred);\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"dashboard\">\r\n                {Boolean(filteredBoards.length) && <section className=\"boards-main-container\">\r\n                    <h3 className=\"starred-title\">Starred</h3>\r\n                    <div className=\"boards-container flex\">\r\n                        <BoardList boards={filteredBoards} onBoardClicked={this.onBoardClicked} saveBoard={saveBoard} clearCurrBoard={clearCurrBoard} editable={true} />\r\n                    </div>\r\n                </section>}\r\n\r\n                <section className=\"boards-main-container\">\r\n                    <h3 className=\"all-board-title\">All Boards</h3>\r\n                    <div className=\"boards-container flex\">\r\n                        <BoardList boards={boards} onBoardClicked={this.onBoardClicked} saveBoard={saveBoard} clearCurrBoard={clearCurrBoard} addBoardOption={true} editable={true} />\r\n                    </div>\r\n                </section>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        boards: state.boardApp.boards,\r\n        loggedUser: state.user.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setBoards,\r\n    saveBoard,\r\n    clearCurrBoard,\r\n    setUser,\r\n    getUser,\r\n    update\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashBoard)","import React from 'react'\r\n\r\nexport function CardActions(props) {\r\n    return (\r\n        <div className=\"card-details-actions flex column align-center\">\r\n\r\n            <h4>Quick actions</h4>\r\n\r\n            {/* <span className=\"card-action-wrapper flex align-center\" onClick={props.onMembers}>\r\n                <span className=\"members \" > </span>\r\n                <h5 className=\"action-title \">Members</h5>\r\n            </span> */}\r\n\r\n            <span className=\"card-action-wrapper flex align-center space-between\" onClick={props.onLabels}>\r\n                <h5 className=\"action-title \">Lables</h5>\r\n                <span className=\"action-label\" > </span>\r\n            </span>\r\n\r\n            <span className=\"card-action-wrapper flex align-center space-between\" onClick={props.onImages} >\r\n                <h5 className=\"action-title \">Images</h5>\r\n                <span className=\"action-image\" > </span>\r\n            </span>\r\n\r\n            <span className=\"card-action-wrapper flex align-center space-between\" onClick={props.onTodoAction}>\r\n                <h5 className=\"action-title \">New todo item</h5>\r\n                <span className=\"action-todos \" > </span>\r\n            </span>\r\n\r\n            <span className=\"card-action-wrapper flex align-center space-between\" onClick={() => props.openDatePicker()}>\r\n                <h5 className=\"action-title \">Set due-Date</h5>\r\n                <span className=\"action-calendar \" > </span>\r\n            </span>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nexport function CardCommentsList(props) {\r\n    const { card, board, user } = props\r\n    return (\r\n        <div className=\"card-msgs-container\">\r\n            {card.comments.map((comment, idx) => {\r\n                return <div key={idx} className=\"card-comment-wrapper flex align-start\" style={{ marginLeft: \"44px\", width: \"370px\" }}>\r\n                    {user.imgUrl && <div className=\"user-profile-comment\" style={{\r\n                        backgroundImage: \"url(\" + `${comment.imgUrl}` + \")\",\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat',\r\n                        minWidth:\"30px\"\r\n                    }} >\r\n                    </div>}\r\n                    {!user.imgUrl && <h3 style={{ marginLeft: \"0px\", marginRight: \"15px\", width: \"30px\", height: \"30px\" }} className=\"card-user-profile flex justify-center align-center\">{user.fullName.charAt(0)}</h3>}\r\n                    <div style={{width:\"100%\" , marginBottom: \"10px\"}} className=\"flex column align-start\">\r\n                        <p className=\"card-msg-txt\">{comment.txt} </p>\r\n                        <div className=\"flex align-center\">\r\n                            <p className=\"card-msg-time\">{moment(comment.createdAt).fromNow()} </p>\r\n                            <button className=\"card-msg-delete\" onClick={() => props.deleteComment(idx)}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nclass CardDescription extends Component {\r\n\r\n    state = {\r\n        isEditMode: false,\r\n        description: '',\r\n        dynamicClass: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { card, board } = this.props\r\n        this.setState({ description: card.description })\r\n    }\r\n\r\n    onDescClicked = () => {\r\n        this.setState({ isEditMode: true })\r\n    }\r\n\r\n    onTextAreaLeave = () => {\r\n        const { card, board } = this.props\r\n        this.setState({ isEditMode: false, dynamicClass: '' }, () => {\r\n            card.description = this.state.description\r\n            this.props.saveBoard(board)\r\n        })\r\n    }\r\n\r\n    onTextFocus = () => {\r\n        this.setState({ dynamicClass: 'text-area' })\r\n    }\r\n\r\n    onDescEdit = ({ target }) => {\r\n\r\n        this.setState({ description: target.value })\r\n\r\n    }\r\n\r\n    moveCaretAtEnd(ev) {\r\n        var temp_value = ev.target.value\r\n        ev.target.value = ''\r\n        ev.target.value = temp_value\r\n    }\r\n\r\n\r\n    render() {\r\n        const { card } = this.props\r\n        const { isEditMode, description, dynamicClass } = this.state\r\n        return (\r\n            <div className=\"card-details-description\">\r\n                <div className=\"flex \">\r\n                    <span className=\"text\"></span>\r\n                    <h4>Description</h4>\r\n                </div>\r\n                {!isEditMode && <p onClick={this.onDescClicked}>{card.description || 'Add some details about this card'}</p>}\r\n                {isEditMode && <TextareaAutosize className={dynamicClass} onFocus={this.onTextFocus} onBlur={this.onTextAreaLeave} type=\"text\" autoFocus={true}\r\n                    value={description} placeholder=\"Add more details about this card...\" onChange={this.onDescEdit}\r\n                    onFocus={this.moveCaretAtEnd} spellCheck={false} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CardDescription)","import React from 'react'\r\nexport function CardMembersList(props) {\r\n    const { board, card, opacity  } = props\r\n    return (\r\n        <div className={`add-card-member-modal ${opacity} flex align-center`}>\r\n            <div className=\"nav-board-members flex align-center\">\r\n\r\n                {board.members.map((member, idx) => {\r\n                    let dynamicClass = ''\r\n                    if (idx === 0) dynamicClass = 'first-member'\r\n                    let letUserIdx = card.members.findIndex(user => user._id === member._id)\r\n                    if (member.imgUrl) {\r\n                        return <div key={idx} className=\"flex column align-center\">\r\n                            {letUserIdx !== -1 && <div style={{marginLeft: `${!idx? '' : '-2px'}`}} className=\"member-overlay\"> </div>}\r\n                            <div  className={dynamicClass + \" \" + \"board-member\"} style={{\r\n                                backgroundImage: \"url(\" + `${member.imgUrl}` + \")\",\r\n                                backgroundPosition: 'center',\r\n                                backgroundSize: 'cover',\r\n                                backgroundRepeat: 'no-repeat'\r\n                            }} onClick={() => props.addMember(member)}>\r\n                                <div className=\"board-member-tooltip\">\r\n                                    <p>{member.fullName}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    else {\r\n                        return <h3 onClick={() => props.addMember(member)} className=\"card-user-profile flex justify-center align-center\">{member.fullName.charAt(0)}</h3>\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard, setBoard } from '../store/actions/boardActions'\r\nimport { CardMembersList } from './CardMembersList'\r\nimport socketService from '../services/socketService'\r\n\r\nclass CardMembers extends Component {\r\n\r\n    state = {\r\n        isAddMemberActive: false,\r\n        isMouseHoverUser: false\r\n    }\r\n\r\n\r\n    onAddMember = () => {\r\n        this.setState(prevState => ({ isAddMemberActive: !prevState.isAddMemberActive }))\r\n    }\r\n\r\n\r\n    addMember = (member) => {\r\n        \r\n        const { card, board , user } = this.props\r\n        console.log(card.id , board._id);\r\n        let idx = card.members.findIndex(user => user._id === member._id)\r\n        if (idx !== -1) return\r\n\r\n        card.members.push(member)\r\n        this.props.saveBoard(board)\r\n        this.props.setBoard(board._id)\r\n        let data = {\r\n            assignedUserId: member._id,\r\n            assingedBy: user.userName,\r\n            cardId: card.id,\r\n            boardId: board._id\r\n        }\r\n        socketService.emit('user card assign', data);\r\n    }\r\n\r\n    onMouseEnter = () => {\r\n        this.setState({ isMouseHoverUser: true })\r\n    }\r\n\r\n    onMouseLeave = () => {\r\n        this.setState({ isMouseHoverUser: false })\r\n    }\r\n\r\n    onRemoveCardUser = (idx, ev) => {\r\n        ev.stopPropagation()\r\n        const { card, board } = this.props\r\n        card.members.splice(idx, 1)\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    render() {\r\n        const { card, history, board , showModal} = this.props\r\n        const { isAddMemberActive, isMouseHoverUser } = this.state\r\n        \r\n        return (\r\n            <div style={{ marginBottom: \"30px\", marginLeft: \"42px\" }} className=\"flex column\">\r\n                <h4 className=\"card-members-header\">Card members</h4>\r\n                <div className=\"card-members flex align-center\">\r\n                    {<CardMembersList opacity={(isAddMemberActive || showModal) ? 'opacity-one' : ''} card={card} board={board} history={history} addMember={this.addMember} />}\r\n                    <button className={`card-member-invite '}`} onClick={this.onAddMember}\r\n                    // ${!isAddMemberActive && 'margin-right-26\r\n                        style={{ backgroundColor: `${isAddMemberActive ? \"rgba(110, 253, 141, 0.432)\" : \"rgba(142, 176, 248, 0.267)\"}` }}>\r\n                        {isAddMemberActive ? 'Done' : '+Add'}</button>\r\n                    {card.members.map((member, idx) => {\r\n                        if (member.imgUrl) {\r\n                            return <div key={idx} className=\"profile-tooltip-wraper\" >\r\n                                <div className=\"card-member\" style={{\r\n                                    backgroundImage: \"url(\" + `${member.imgUrl}` + \")\",\r\n                                    backgroundPosition: 'center',\r\n                                    backgroundSize: 'cover',\r\n                                    backgroundRepeat: 'no-repeat'\r\n                                }} onClick={() => history.push(`/user/${member._id}`)} onMouseEnter={this.onMouseEnter}\r\n                                    onMouseLeave={this.onMouseLeave}>\r\n\r\n                                    {isMouseHoverUser && <button onClick={(ev) => this.onRemoveCardUser(idx, ev)} className=\"card-member-remove\"></button>}\r\n                                </div>\r\n                                <div className=\"card-member-tooltip\">\r\n                                    <p>{member.fullName}</p>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        else {\r\n                            return <><h3 className=\"card-user-profile flex justify-center align-center\"onMouseEnter={this.onMouseEnter}\r\n                            onMouseLeave={this.onMouseLeave}> {member.fullName.charAt(0)}</h3>\r\n                            {isMouseHoverUser && <button onClick={(ev) => this.onRemoveCardUser(idx, ev)} className=\"card-member-remove\"></button>}\r\n                                <div className=\"card-member-tooltip\">\r\n                                    <p>{member.fullName}</p>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n    setBoard\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CardMembers)","import React, { Component } from 'react'\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nexport default class CardCalendar extends Component {\r\n\r\n    state = {\r\n        date: new Date(),\r\n        timeStamp: ''\r\n    }\r\n\r\n    onChange = date => this.setState({ date }, this.formatDate)\r\n\r\n    formatDate = () => {\r\n        const { date } = this.state\r\n        let timeStamp = date.getTime()\r\n        this.setState({ timeStamp })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { timeStamp } = this.state\r\n        const { isShown } = this.props\r\n        return (\r\n            <div className={`card-calendar-container ${isShown? 'calendar-fade' : ''}`}>\r\n                <Calendar\r\n                    onChange={this.onChange}\r\n                    value={this.state.date}\r\n                    minDate={new Date()}\r\n                />\r\n                {timeStamp && <div className=\"flex justify-center\" style={{backgroundColor:\"rgba(0, 0, 0, 0.253)\"}}>\r\n                    {/* <h4>Date picked: {formattedDate}</h4> */}\r\n                    <button className=\"date-confirm\" onClick={() => this.props.onDatePicked(timeStamp)}>Confirm</button>\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nclass DueDate extends React.Component {\r\n\r\n    state = {\r\n        isComplete: false,\r\n        diffDays: null,\r\n        timeStamp: null\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getDiffDays()\r\n    }\r\n    \r\n    componentDidUpdate(){\r\n        const { card } = this.props\r\n        if(this.state.timeStamp !== card.dueDate){\r\n            this.getDiffDays()\r\n        } \r\n    }\r\n\r\n    getDiffDays(){\r\n        const { card } = this.props\r\n        let diffDays =  Math.ceil((card.dueDate - Date.now()) / (1000 * 60 * 60 * 24))\r\n        this.setState({diffDays , timeStamp: card.dueDate})\r\n    }\r\n\r\n    onComplete = () => {\r\n        const { board } = this.props\r\n        this.setState(prevState => ({ isComplete: !prevState.isComplete }), () => console.log(this.state.isComplete))\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    render() {\r\n        const { card } = this.props\r\n        const { isComplete , diffDays } = this.state\r\n\r\n        return (\r\n            <div className=\"card-due-date-container\">\r\n                <div className=\"flex \">\r\n                    <span className=\"due-date\"></span>\r\n                    <h4>Due Date</h4>\r\n                </div>\r\n                <div style={{ marginLeft: \"42.5px\", marginTop: \"18px\" }} className=\"flex align-center\">\r\n                    <span className={isComplete ? 'due-date-checkbox-complete' : 'due-date-checkbox'} onClick={this.onComplete}> </span>\r\n                    <p>{moment(card.dueDate).format(\"MMM Do\")}</p>\r\n                    {isComplete && <p className=\"due-date-complete flex align-center\">Complete</p>}\r\n                    {!isComplete && <p className=\"flex align-center\"\r\n                    style={{ backgroundColor: `${diffDays >= 4 ? '#F9A602' : '#EC6B59'}` , marginLeft: \"5px\" , fontWeight: \"600\" , color:\"white\"}} >\r\n                        <span className=\"dueDate\" />{diffDays} Days Left</p>}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(DueDate)\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function ImgModal(props) {\r\n    const {url} = props\r\n    window.scrollTo({\r\n        top: 100,\r\n        left: 100,\r\n        behavior: 'smooth'\r\n      });\r\n      \r\n    return (\r\n        <div className=\"img-screen flex align-center justify-center\">\r\n            <img src={url} width=\"100%\" />\r\n            <span className=\"img-modal-close-btn\" onClick={()=> props.onCloseImgModal()}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { uploadImg } from '../services/cloudinaryService'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nimport ImgModal from './ImgModal'\r\n\r\nclass CardAttachments extends Component {\r\n\r\n    state = {\r\n        isLoading: false,\r\n        activeImg: null\r\n    }\r\n\r\n    onUpload = (ev) => {\r\n        const { board, card } = this.props\r\n        this.setState({ isLoading: true })\r\n        let uploadedFiles = []\r\n        uploadImg(ev)\r\n            .then(cdyImgs => {\r\n                cdyImgs.forEach(file => {\r\n                    let data = {\r\n                        fileName: file.original_filename,\r\n                        format: file.format,\r\n                        url: file.url\r\n                    }\r\n                    uploadedFiles.push(data)\r\n                })\r\n                uploadedFiles.map(file => {\r\n                    card.attachments.unshift(file)\r\n                    this.props.saveBoard(board)\r\n                        .then(this.setState({ isLoading: false }))\r\n                })\r\n\r\n            })\r\n    }\r\n\r\n    onDelete = (idx) => {\r\n        const { card, board } = this.props\r\n        card.attachments.splice(idx, 1)\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    onImgClick = (imgUrl) => {\r\n        this.setState({ activeImg: imgUrl })\r\n    }\r\n\r\n    onCloseImgModal = () => {\r\n        this.setState({ activeImg: null })\r\n    }\r\n\r\n    render() {\r\n        const { card, loggedUser } = this.props // take from props\r\n        const { isLoading, activeImg } = this.state\r\n        const attachments = card.attachments\r\n        return (\r\n            <>\r\n                <div className=\"card-details-attachments\">\r\n                    <div className=\"flex \">\r\n                        <span className=\"photo\"></span>\r\n                        <h4 className=\"attachments-header\">Images</h4>\r\n                    </div>\r\n                    <label style={{ marginLeft: \"42px\" }}> Add\r\n                    <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={this.onUpload} hidden multiple />\r\n                    </label>\r\n                    <div style={{ marginTop: \"15px\", marginLeft: \"42px\" }} className=\"attachments-files-container flex align-center space-between\">\r\n                        {attachments && attachments.map((file, idx) => {\r\n                            return <div key={idx} style={{ marginBottom: \"15px\" }} className=\"flex column\" >\r\n                                {file.url && <img src={file.url} width=\"150\" onClick={() => this.onImgClick(file.url)} />}\r\n                                <div className=\"attachment-file-name-wrapper flex align-center space-between\">\r\n                                    {/* <h4 className=\"attachment-file-name\">{file.fileName}.{file.format}</h4> */}\r\n                                    <p className=\"attachment-owner\">Upload by - {loggedUser.userName}</p>\r\n                                    <button className=\"attachment-delete-btn\" onClick={() => this.onDelete(idx)}>Delete</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                    {isLoading && <span style={{ marginLeft: \"55px\" }} className=\"loading\" />}\r\n                </div>\r\n                {activeImg && <ImgModal onCloseImgModal={this.onCloseImgModal} url={activeImg} />}\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activeBoard: state.boardApp.currBoard,\r\n        loggedUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardAttachments)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nimport moment from 'moment'\r\n\r\nclass CardTodoList extends Component {\r\n\r\n    state = {\r\n        isAddModalShown: false,\r\n        newTodoVal: '',\r\n        isListFiltered: false,\r\n        openTodos: null,\r\n        completedTodos: null,\r\n        barFillWidth: null,\r\n        toggleMode: 'Hide'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTodosStatus()\r\n\r\n    }\r\n\r\n    getBarWidth = () => {\r\n        const { card, board } = this.props\r\n        const { openTodos, completedTodos } = this.state\r\n        let totalTodos = openTodos.length + completedTodos.length;\r\n        let barFillWidth = (completedTodos.length / totalTodos) * 100;\r\n        this.setState({ barFillWidth },()=>{\r\n            card.todosBarWidth = barFillWidth\r\n            this.props.saveBoard(board)\r\n        })\r\n    }\r\n\r\n    getTodosStatus = () => {\r\n        const { card, board } = this.props\r\n        let openTodos = card.checkList.filter(item => !item.isDone)\r\n        let completedTodos = card.checkList.filter(item => item.isDone)\r\n        this.setState({ openTodos, completedTodos }, () => {\r\n            this.getBarWidth()\r\n        })\r\n\r\n    }\r\n\r\n    onComplete = (todo) => {\r\n        const { board , user } = this.props\r\n        todo.isDone = !todo.isDone\r\n        todo.doneBy = {id: user._id , userName: user.userName , fullName: user.fullName}\r\n        // this.props.saveBoard(board)\r\n        this.getTodosStatus()\r\n    }\r\n\r\n    onAddTodo = () => {\r\n        this.setState(prevState => ({ isAddModalShown: !prevState.isAddModalShown }))\r\n    }\r\n\r\n    onHideComplete = () => {\r\n        let toggleMode = ''\r\n        if (this.state.toggleMode === 'Hide') toggleMode = 'Show'\r\n        else toggleMode = 'Hide'\r\n        this.setState(prevState => ({ isListFiltered: !prevState.isListFiltered, toggleMode }))\r\n    }\r\n\r\n    inputHandler = ({ target }) => {\r\n        this.setState({ newTodoVal: target.value })\r\n    }\r\n\r\n    onTodosScreen = () =>{\r\n        this.setState({isAddModalShown: false})\r\n        this.props.onAddTodo()\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        const { card, board, user } = this.props\r\n        let todo = {\r\n            content: this.state.newTodoVal,\r\n            creator: user.userName,\r\n            isDone: false,\r\n            createdAt: Date.now()\r\n        }\r\n        card.checkList.unshift(todo)\r\n        this.props.saveBoard(board)\r\n        this.setState({ isAddModalShown: false, newTodoVal: '' })\r\n        this.getTodosStatus()\r\n        this.props.onAddTodo()\r\n    }\r\n\r\n    render() {\r\n        const { card, board, user , onActionTodo } = this.props\r\n        const { barFillWidth, toggleMode } = this.state\r\n        const { newTodoVal, isAddModalShown, isListFiltered, openTodos, completedTodos } = this.state\r\n        let list = []\r\n        if (isListFiltered) list = card.checkList.filter(item => !item.isDone)\r\n        else list = card.checkList\r\n\r\n        if (!openTodos) return 'loading'\r\n        return (\r\n            <div className=\"card-details-description\">\r\n                <div className=\"flex align-center\" style={{ marginBottom: \"10px\" }}>\r\n                    <span className=\"list\"></span>\r\n                    <h4>Todos</h4>\r\n                    {/* <span className=\"open-todos-indicator\" style={{ marginLeft: \"20px\" }}>{openTodos.length}</span> */}\r\n                    {/* <span className=\"complete-todos-indicator\" style={{ marginLeft: \"30px\" }}>{completedTodos.length}</span> */}\r\n                    <button className=\"todos-hide-complete-btn\" onClick={this.onHideComplete}>{`${toggleMode} (${completedTodos.length}) complete items`}</button>\r\n                </div>\r\n                <div className=\"todos-bar-wrapper\">\r\n                    <span className=\"todos-bar-fill\" style={{ width: `${card.todosBarWidth}%` }} />\r\n                </div>\r\n                <div style={{ marginBottom: \"15px\" }} className=\"todo-add-wrapper flex align-center\">\r\n                    <button className=\"todo-add-btn\" style={{ marginLeft: \"40px\", padding: \"0px\" }}\r\n                        onClick={this.onAddTodo}>+ item</button>\r\n                    {onActionTodo && <div className=\"screen\" onClick={this.onTodosScreen}>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <input className=\"todos-input\" value={newTodoVal} type=\"text\" style={{ marginLeft: \"20px\" }}\r\n                                onChange={this.inputHandler} autoFocus placeholder=\"Add an item\" />\r\n                        </form>\r\n                    </div>}\r\n                    {/* className={`todos-input ${isAddModalShown ? 'fade-input' : ''} `} */}\r\n                </div>\r\n\r\n                <div className=\"todos-container\" style={{ marginLeft: \"40px\", width: \"320px\" }}>\r\n\r\n                    {list.map((todo, idx) => {\r\n                        return <div key={idx} className=\"flex align-center space-between\">\r\n                            <div className=\"todo-item flex align-center space-between\">\r\n\r\n                                <div className={todo.isDone ? 'todo-complete' : '' + \"flex column\"}>\r\n                                    <h3>{todo.content}</h3>\r\n                                    <todoinfo className=\"todo-info\">Added by <tagcolor>{todo.creator}</tagcolor> at <tagcolor>{moment(todo.createdAt).fromNow()}</tagcolor></todoinfo>\r\n                                </div>\r\n                                <span className={todo.isDone ? 'todo-checkbox-complete' : 'todo-checkbox'} onClick={() => this.onComplete(todo)} />\r\n                            </div>\r\n                            {/* {todo.isDone && <button className=\"todos-delete\">Delete</button>} */}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CardTodoList)","import React, { Component } from 'react'\r\n\r\n\r\nexport default class InterActiveRobot extends Component {\r\n\r\n    state = {\r\n        currTxt: '',\r\n        robotClass: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        let data = [\r\n            `Welcome, ${this.props.user.userName}👋`,\r\n            'This is our demo board',\r\n            'For best expirence, open 2 tabs parallaly',\r\n            'Feel free to cantact us ;)🎉',\r\n            \r\n        ]\r\n        this.setState({ currTxt: data[0] })\r\n        let cnt = 1\r\n        let myInterval = setInterval(() => {\r\n            this.setState({ currTxt: data[cnt] })\r\n            cnt++\r\n            if(cnt > data.length){\r\n                clearInterval(myInterval)\r\n                this.setState({ currTxt: null , robotClass: '' })\r\n            } \r\n        }, 2000);\r\n     \r\n        setTimeout(() => {\r\n            this.setState({ robotClass: 'opacity-robot' })\r\n        }, 500);\r\n\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props\r\n        const { currTxt , robotClass} = this.state\r\n\r\n        return (\r\n            <div className={`interactive-robot-container flex justify-center ${robotClass}`} >\r\n                <span className=\"robot\" />\r\n                <span className={`robot-txt-bubble flex align-center justify-center`}>\r\n                    {currTxt && <h3 className={\"first-speech\" + !currTxt ? 'finish-robot' : '' }>{currTxt}</h3>}\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\n\r\nclass LabelsModal extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        isErrorShown: false\r\n    }\r\n\r\n    onLabelClick = (color) => {\r\n        const { card , board } = this.props\r\n        let colorIdx = card.labels.findIndex(label => label.color === color)\r\n        if (colorIdx !== -1){\r\n            this.setState({isErrorShown: true})\r\n            setTimeout(()=>{\r\n                this.setState({isErrorShown: false})\r\n            },1500)\r\n             return\r\n        }\r\n        \r\n        let label ={\r\n            title: this.state.title ,\r\n            color\r\n        }\r\n        card.labels.push(label)\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    inputHandler = ({ target }) => {\r\n        this.setState({ title: target.value })\r\n    }\r\n\r\n    render() {\r\n        const { title , isErrorShown } = this.state\r\n        return (\r\n            <div className=\"card-labels-modal flex column align-center\">\r\n                <h3 className=\"labels-header\">Labels</h3>\r\n                {isErrorShown && <h5>This label already exist</h5>}\r\n\r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#61BD4F\" }}>\r\n                        <input placeholder=\"Opt. Add label titles\" onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#61BD4F')}>Set</button>\r\n                </div>\r\n\r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#F2D600\" }}>\r\n                        <input onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#F2D600')}>Set</button>\r\n                </div>\r\n\r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#FF9F1A\" }}>\r\n                        <input onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#FF9F1A')}>Set</button>\r\n                </div>\r\n\r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#EB5A46\" }}>\r\n                        <input onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#EB5A46')}>Set</button>\r\n                </div>\r\n\r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#0079BF\" }}>\r\n                        <input onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#0079BF')}>Set</button>\r\n                </div>\r\n                \r\n                <div style={{ marginBottom: \"10px\" }} className=\"flex space-between align-center\">\r\n                    <div className=\"card-label flex justify-center align-center\" style={{ width: \"80%\", height: \"30px\", backgroundColor: \"#FF78CB\" }}>\r\n                        <input onChange={this.inputHandler} />\r\n                    </div>\r\n                    <button className=\"label-del-btn\" onClick={() => this.onLabelClick('#FF78CB')}>Set</button>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LabelsModal)","import React, { Component } from 'react'\r\nimport LabelsModal from './LabelsModal'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\n\r\nclass CardLabels extends Component {\r\n\r\n    state = {\r\n        isDeleteBtnShow: false\r\n    }\r\n\r\n    onKeyUp = (idx, ev) => {\r\n        const { card, board, isShown } = this.props\r\n        card.labels[idx].title = ev.target.innerText\r\n    }\r\n\r\n    onBlur = () => {\r\n        const { board } = this.props\r\n\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    onEnter = () => {\r\n        this.setState({ isDeleteBtnShow: true })\r\n    }\r\n\r\n    onLeave = () => {\r\n        this.setState({ isDeleteBtnShow: false })\r\n    }\r\n\r\n    onRemovelabel = (idx) =>{\r\n        const { card , board } = this.props\r\n        card.labels.splice(idx,1)\r\n        this.props.saveBoard(board)\r\n    }\r\n\r\n    render() {\r\n        const { card, board, isShown } = this.props\r\n        const { isDeleteBtnShow } = this.state\r\n\r\n        return (\r\n            <div className=\"card-details-labels-container flex align-center\">\r\n                {card.labels.map((label, idx) => {\r\n                    return <div onMouseEnter={this.onEnter} onMouseLeave={this.onLeave} key={idx}\r\n                        style={{ backgroundColor: `${label.color}`, minWidth: \"50px\", minHeight: \"15px\", marginRight: \"10px\", borderRadius: \"5px\", marginTop: \"10px\", padding: \"2px\", color: \"white\", fontSize: \"12px\", textAlign: \"center\", position:\"relative\" }}>\r\n                        <h4 onBlur={this.onBlur} contentEditable={true} suppressContentEditableWarning={true} spellCheck={false} onKeyUp={(ev) => this.onKeyUp(idx, ev)}\r\n                         >{label.title}</h4>\r\n                        {isDeleteBtnShow && <button onClick={() => this.onRemovelabel(idx)} className=\"lable-remove\"></button>}\r\n                    </div>\r\n                })}\r\n                {isShown && < LabelsModal card={this.props.card} board={this.props.board} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CardLabels)","import React, { Component } from 'react'\r\nimport { CardActions } from '../cmps/CardActions'\r\nimport CardComments from '../cmps/CardComments'\r\nimport CardDescription from '../cmps/CardDescription'\r\nimport CardMembers from '../cmps/CardMembers'\r\nimport CardCalendar from '../cmps/CardCalendar'\r\nimport  DueDate  from '../cmps/DueDate'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions'\r\nimport CardAttachments from '../cmps/CardAttachments'\r\nimport InterActiveRobot from '../cmps/InterActiveRobot'\r\nimport CardTodoList from '../cmps/CardTodoList'\r\nimport CardLabels from '../cmps/CardLabels'\r\n\r\nclass CardDetails extends Component {\r\n\r\n\r\n    state = {\r\n        currCard: null,\r\n        currList: null,\r\n        isCalendarActive: false,\r\n        isImagesShown: false,\r\n        isMembersModalShown: false,\r\n        isLabelsModalShown:false,\r\n        isActionTodoActive: false\r\n\r\n    }\r\n\r\n    eventsHandler = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCurrCard()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps) this.getCurrCard()\r\n    }\r\n\r\n    getCurrCard = () => {\r\n        const { cardId, currBoard } = this.props\r\n        let currCard;\r\n        let currList\r\n        currBoard.cardLists.forEach(cardList => {\r\n            cardList.cards.forEach(card => {\r\n                if (card.id === cardId) {\r\n                    currCard = card;\r\n                    currList = cardList;\r\n                }\r\n            })\r\n        })\r\n        this.setState({ currCard, currList },()=> {\r\n            if(currCard.attachments.length) this.setState({isImagesShown: true})\r\n            else if(!currCard.attachments.length) this.setState({isImagesShown: false})\r\n        })\r\n    }\r\n\r\n    openDatePicker = () => {\r\n        \r\n        this.setState(prevState => ({ isCalendarActive: !prevState.isCalendarActive }))\r\n    }\r\n\r\n    onImages = () => {\r\n        this.setState(prevState => ({ isImagesShown: !prevState.isImagesShown }))\r\n    }\r\n\r\n    onMembers = () => {\r\n        this.setState(prevState => ({ isMembersModalShown: !prevState.isMembersModalShown }))\r\n    }\r\n\r\n    onDatePicked = (timeStamp) => {\r\n        console.log('OPEN CALENDAR');\r\n        \r\n        const { currCard } = this.state\r\n        const { currBoard } = this.props\r\n        currCard.dueDate = timeStamp\r\n        this.setState({ isCalendarActive: false })\r\n        this.props.saveBoard(currBoard)\r\n    }\r\n\r\n    onCloseCardDetails = () => {\r\n        const { currBoard } = this.props\r\n        this.props.history.push(`/board/${currBoard._id}`)\r\n    }\r\n\r\n    onCardTitle = ({target}) => {\r\n        const {currCard} = this.state\r\n        currCard.text = target.innerText\r\n    }\r\n\r\n    onTitleBlur = () =>{\r\n        console.log('LUREDED');\r\n        \r\n        const { currBoard } = this.props\r\n        this.props.saveBoard(currBoard)\r\n    }\r\n    onLabels = () => {\r\n        this.setState(prevState => ({ isLabelsModalShown: !prevState.isLabelsModalShown }))\r\n    }\r\n\r\n    onTodoAction = () => {\r\n        this.setState({ isActionTodoActive: true })\r\n    }\r\n    onAddTodo = () => {\r\n        this.setState({ isActionTodoActive: false })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { currCard, currList, isCalendarActive, isImagesShown, isMembersModalShown , isLabelsModalShown , isActionTodoActive} = this.state\r\n        const { currBoard , loggedUser } = this.props\r\n        if (!currCard) return ''\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"screen flex align-center justify-center\" onClick={this.onCloseCardDetails}> </div>\r\n\r\n                <div className=\"card-details-content-wrapper\">\r\n                    <div onClick={this.eventsHandler} className=\"card-details-modal\">\r\n                        <div className=\"card-details-header flex space-between align-center\">\r\n                            <div className=\"flex align-center\">\r\n                                <span className=\"card-icon\"></span>\r\n                                <p spellCheck={false} contentEditable={true} suppressContentEditableWarning={true} className=\"card-details-title\" onBlur={this.onTitleBlur} onKeyUp={this.onCardTitle}>{currCard.text}</p>\r\n                                <p className=\"card-list-parent\">In list: <span>{currList.title}</span></p>\r\n                            </div>\r\n                            <span className=\"cancel\" onClick={this.onCloseCardDetails}></span>\r\n                        </div>\r\n\r\n                        <div className=\"card-details-content-wrapper flex\">\r\n                            <div className=\"card-details-content flex column\">\r\n                                < CardLabels card={currCard} board={currBoard} isShown={isLabelsModalShown} />\r\n                                < CardMembers user={loggedUser} history={this.props.history} card={currCard} board={currBoard}\r\n                                    showModal={isMembersModalShown} />\r\n                                {currCard.dueDate && < DueDate card={currCard} board={currBoard} />}\r\n                                < CardDescription card={currCard} board={currBoard} />\r\n                                {(currCard.checkList.length > 0 || isActionTodoActive) && < CardTodoList onAddTodo={this.onAddTodo} onActionTodo={isActionTodoActive} card={currCard} board={currBoard} user={this.props.loggedUser} />}\r\n                                {isImagesShown &&  < CardAttachments card={currCard} board={currBoard} />}\r\n                                < CardComments card={currCard} board={currBoard} user={this.props.loggedUser} />\r\n                            </div>\r\n                            < CardActions onTodoAction={this.onTodoAction} onLabels={this.onLabels} openDatePicker={this.openDatePicker} onImages={this.onImages} onMembers={this.onMembers} />\r\n                            < CardCalendar card={currCard} onDatePicked={this.onDatePicked} isShown={isCalendarActive} />\r\n                            {/* < InterActiveRobot user={this.props.loggedUser} /> */}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedUser: state.user.loggedInUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardDetails)","import React from 'react'\r\n\r\nexport function IconPreview(props) {\r\n\r\n    const { icon, num, color, isDone } = props;\r\n\r\n    return (\r\n        <div className=\"icon flex space-between\">\r\n            <div className={icon}></div>\r\n            <div style={{ color: color }}>{(isDone || isDone === 0) && (isDone + '/')}{num}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { IconPreview } from './IconPreview.jsx'\r\nimport { BoardMembers } from './BoardMembers.jsx'\r\nimport moment from 'moment';\r\n\r\nexport function CardIconsPreview(props) {\r\n    const { card, history } = props\r\n\r\n    function getTime(val) {\r\n        if (Math.floor((val - Date.now()) / (24 * 60 * 60 * 1000)) < 0) return 'Today';\r\n        else if (Math.ceil((val - Date.now()) / (24 * 60 * 60 * 1000)) <= 1) return 'Tomorrow';\r\n        else if (Math.floor((val - Date.now()) / (24 * 60 * 60 * 1000)) < 7) return moment(val).format(\"dddd\");\r\n        else return moment(val).format(\"MMM DD\");\r\n    }\r\n\r\n    function getColor(val) {\r\n        if ((val - Date.now()) <= (24 * 60 * 60 * 1000)) return '#e74c3c';\r\n        else if ((val - Date.now()) <= (4 * 24 * 60 * 60 * 1000)) return '#e67e22';\r\n        else return '#2ecc71';\r\n    }\r\n\r\n    function getDoneTodos(checkList) {\r\n        let done = checkList.reduce((acc, todo) => todo.isDone ? acc + 1 : acc, 0)\r\n        return done;\r\n\r\n    }\r\n\r\n    if (!card) return 'loading'\r\n    return (\r\n        <div className=\"wrap-icons\">\r\n            <div className=\"card-icons flex space-between align-center\">\r\n                {card.dueDate && <IconPreview color={getColor(card.dueDate)} icon={'clock-blue'} num={getTime(card.dueDate)} />}\r\n                <div className=\"items-wrap flex\">\r\n                    {/* {Boolean(card.attachments.length) && <IconPreview icon={'attachments'} num={card.attachments.length} />} */}\r\n                    {Boolean(card.comments.length) && <IconPreview icon={'conversation-blue'} num={card.comments.length} />}\r\n                    {Boolean(card.checkList.length) && <IconPreview icon={'checklist-blue'} num={card.checkList.length} isDone={getDoneTodos(card.checkList)} />}\r\n                </div>\r\n            </div>\r\n            <div className=\"members-placeholder\">\r\n                {Boolean(card.members.length) && <BoardMembers history={history} board={card} cardMemberMode={true} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport function CardLabelsPreview(props) {\r\n\r\n    const { labels } = props;\r\n\r\n\r\n    return (\r\n        <div className=\"card-labels flex\">\r\n            {labels.map((lable, idx) => {\r\n                return (\r\n                    <div key={idx} className=\"card-label-style\" style={{ background: lable.color }} />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport class CardHeaderForm extends Component {\r\n\r\n    state = {\r\n        cardTitle: this.props.cardHeader,\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.closeCardMenu, false);\r\n        document.addEventListener(\"keydown\", this.closeCardMenu, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.closeCardMenu, false);\r\n        document.removeEventListener(\"keydown\", this.closeCardMenu, false);\r\n    }\r\n\r\n    closeCardMenu = (e) => {\r\n        if (e.keyCode === 27) {\r\n            this.props.closeMenu();\r\n        }\r\n    }\r\n\r\n    activeEditMode = (e) => {\r\n        e.stopPropagation()\r\n        this.setState({ editTitleMode: true })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.stopPropagation()\r\n        this.setState({ title: e.target.value })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        let { card } = this.props\r\n        card.title = this.state.title;\r\n        this.props.saveCard(card);\r\n        this.setState({ editTitleMode: false })\r\n        this.props.closeMenu();\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    onSubmit = () => {\r\n        this.props.offEditCardHeader(this.props.cardId, this.props.cardListId, this.state.cardTitle)\r\n    }\r\n\r\n    escFunction = (event) => {\r\n        if(event.keyCode === 13){\r\n            this.onSubmit()\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ cardTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.onSubmit();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        this.onSubmit()\r\n    }\r\n\r\n    moveCaretAtEnd(e) {\r\n        var temp_value = e.target.value\r\n        e.target.value = ''\r\n        e.target.value = temp_value\r\n      }\r\n\r\n\r\n    render() {\r\n        const { cardTitle } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <textarea placeholder=\"Edit title\" onClick={ev => ev.stopPropagation()}\r\n                    value={cardTitle} onChange={this.handleChange} autoFocus onFocus={this.moveCaretAtEnd} onBlur={this.handleBlur} spellCheck=\"false\" />\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { saveBoard } from '../store/actions/boardActions.js'\r\n\r\n\r\nclass CardMenu extends Component {\r\n\r\n    state = {\r\n        isMenuOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.addEventListener(\"keydown\", this.closeBoardMenu, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.removeEventListener(\"keydown\", this.closeBoardMenu, false);\r\n    }\r\n\r\n    closeBoardMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.setState({ isMenuOpen: false })\r\n        }\r\n    }\r\n\r\n    openMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({ isMenuOpen: true })\r\n    }\r\n\r\n    onDeleteCard = (cardId, cardListId, ev) => {\r\n        ev.stopPropagation()\r\n        const currBoard = this.props.currBoard;\r\n        const { cardLists } = currBoard;\r\n        const list = cardLists.find(cardList => cardList.id === cardListId);\r\n        const cardIdx = list.cards.findIndex(card => card.id === cardId);\r\n\r\n        list.cards.splice(cardIdx, 1);\r\n        this.props.saveBoard(currBoard);\r\n    }\r\n\r\n    onCloseMenu = (ev) => {\r\n        this.setState({ isMenuOpen: false })\r\n        this.props.onEditCardHeader(ev)\r\n    }\r\n\r\n    render() {\r\n        const { onEditCardHeader, cardId, cardListId } = this.props\r\n        const { onDeleteCard } = this\r\n        const { isMenuOpen } = this.state;\r\n\r\n        return (\r\n            <div ref={node => this.node = node} className=\"card-menu-container\">\r\n                <div className=\"menu-btn hidden\" onClick={(event) => this.openMenu(event)} ></div>\r\n                {isMenuOpen && <div className=\"menu-options card-menu\">\r\n                    <div onClick={(event) => this.onCloseMenu(event)}>Edit Title</div>\r\n                    <div onClick={(event) => onDeleteCard(cardId, cardListId, event)}>Delete Card</div>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardMenu)\r\n","import React, { Component } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { CardIconsPreview } from './CardIconsPreview.jsx'\r\nimport { CardLabelsPreview } from './CardLabelsPreview.jsx'\r\nimport { CardHeaderForm } from './CardHeaderForm.jsx'\r\nimport CardMenu from './CardMenu.jsx'\r\nimport { connect } from 'react-redux';\r\nimport { saveBoard } from '../store/actions/boardActions.js'\r\n\r\n\r\nclass CardPreview extends Component {\r\n\r\n    state = {\r\n        isFocus: false,\r\n    }\r\n\r\n    onEditCardHeader = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({ isFocus: true })\r\n    }\r\n\r\n    offEditCardHeader = (cardId, cardListId, text) => {\r\n        if (!cardId || !cardListId) {\r\n            this.setState({ isFocus: false })\r\n            return\r\n        };\r\n\r\n        const currBoard = JSON.parse(JSON.stringify(this.props.currBoard));\r\n        const { cardLists } = currBoard;\r\n        const list = cardLists.find(cardList => cardList.id === cardListId);\r\n        const card = list.cards.find(card => card.id === cardId)\r\n        card.text = text\r\n        this.setState({ isFocus: false })\r\n        this.props.saveBoard(currBoard);\r\n    }\r\n\r\n\r\n    showCard = (cardId, history, currBoard) => {\r\n        history.push(`/board/${currBoard._id}/${cardId}`)\r\n    };\r\n\r\n    render() {\r\n\r\n        const { index, card, currBoard, cardListId, history, animation } = this.props\r\n        const { showCard, offEditCardHeader, onEditCardHeader } = this;\r\n        // console.log(card.attachments)\r\n        return (\r\n            <Draggable key={card.id} draggableId={card.id} index={index} >\r\n                {(provided, snapshot) => {\r\n                    return (\r\n                        <>\r\n                            <div\r\n                                className={`card-preview drag flex column ${snapshot.isDragging ? \"isDragging\" : \"\"} ${animation}`} onClick={() => showCard(card.id, history, currBoard)}\r\n                                ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}\r\n                                style={{\r\n                                    userSelect: \"none\",\r\n                                    ...provided.draggableProps.style\r\n                                }}\r\n                            >\r\n                                <CardMenu cardId={card.id} onEditCardHeader={onEditCardHeader} cardListId={cardListId} />\r\n                                {Boolean(card.attachments.length) && <img src={card.attachments[0].url} alt=\"\" />}\r\n                                {Boolean(card.labels.length) && <CardLabelsPreview histoy={history} labels={card.labels} />}\r\n                                {(this.state.isFocus) ? <CardHeaderForm cardHeader={card.text} cardListId={cardListId} cardId={card.id} offEditCardHeader={offEditCardHeader} /> : <div className=\"card-text\">{card.text}</div>}\r\n                                <CardIconsPreview card={card} />\r\n                            </div>\r\n                        </>\r\n                    );\r\n                }}\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardPreview)\r\n","import React, { Component } from \"react\";\r\n\r\nexport class AddCardForm extends Component {\r\n    state = {\r\n        addCardForm: false,\r\n        newCardTitle: '',\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    escFunction = (event) => {\r\n        if (event.keyCode === 27) {\r\n            this.setState({ addCardForm: false, newCardTitle: '' })\r\n        }\r\n    }\r\n\r\n    openForm = () => {\r\n        this.setState({ addCardForm: true });\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ newCardTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.createNewCard();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        if (this.state.newCardTitle) this.createNewCard();\r\n        else this.setState({ addCardForm: false });\r\n    }\r\n\r\n    createNewCard() {\r\n        const { title } = { title: this.state.newCardTitle }\r\n        console.log('creatNewCard', title)\r\n        this.props.onAddCard(this.props.cardListId, title)\r\n        this.setState({ addCardForm: false, newCardTitle: '' })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { addCardForm, newCardTitle } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"card-preview flex justify-center align-center\" onClick={this.openForm} >\r\n                    {!addCardForm ? <div>Add card</div> :\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <input placeholder=\"Add card\" value={newCardTitle} onChange={this.handleChange} autoFocus onBlur={this.handleBlur} />\r\n                        </form>}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { saveBoard } from '../store/actions/boardActions.js'\r\n\r\n\r\nclass ListMenu extends Component {\r\n\r\n    state = {\r\n        isMenuOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.addEventListener(\"keydown\", this.closeBoardMenu, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.closeBoardMenu, false);\r\n        document.removeEventListener(\"keydown\", this.closeBoardMenu, false);\r\n    }\r\n\r\n\r\n    closeBoardMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        if (!this.node.contains(ev.target) || ev.keyCode === 27) {\r\n            this.setState({ isMenuOpen: false })\r\n        }\r\n    }\r\n\r\n\r\n    openMenu = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({ isMenuOpen: true })\r\n    }\r\n\r\n    onDeleteList = (cardlistId, ev) => {\r\n        ev.stopPropagation()\r\n        const { currBoard } = this.props;\r\n        const { cardLists } = currBoard;\r\n        const listIdx = cardLists.findIndex(cardList => cardlistId === cardList.id);\r\n        cardLists.splice(listIdx, 1);\r\n        \r\n        this.props.saveBoard(currBoard);\r\n    }\r\n\r\n    onCloseMenu = (ev) => {\r\n        this.setState({ isMenuOpen: false })\r\n        this.props.onEditListTitle(ev)\r\n    }\r\n\r\n    render() {\r\n        const { onEditListTitle, cardListId } = this.props\r\n        const { onDeleteList } = this\r\n        const { isMenuOpen } = this.state;\r\n\r\n\r\n        return (\r\n            <div ref={node => this.node = node} className=\"list-menu-container\">\r\n                <div className=\"menu-btn\" onClick={(event) => this.openMenu(event)}></div>\r\n                {isMenuOpen && <div className=\"menu-options list-menu \">\r\n                    <div onClick={(event) => this.onCloseMenu(event)}>Edit Title</div>\r\n                    <div onClick={(event) => onDeleteList(cardListId, event)}>Delete List</div>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListMenu)\r\n","import React, { Component } from \"react\";\r\n\r\nexport class ListTitleForm extends Component {\r\n\r\n    state = {\r\n        cardListTitle: this.props.cardList.title\r\n\r\n    }\r\n   \r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.escFunction, false);\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.escFunction, false);\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    handleChange = (ev) => {\r\n        ev.stopPropagation()\r\n        this.setState({ cardListTitle: ev.target.value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        let { card } = this.props\r\n        card.title = this.state.title;\r\n        this.setState({ editTitleMode: false })\r\n        this.onSubmit();\r\n    }\r\n\r\n    onSubmit = () => {\r\n        this.props.offEditListTitle(this.props.cardList.id, this.state.cardListTitle)\r\n    }\r\n\r\n    escFunction = (event) => {\r\n        if (event.keyCode === 27) {\r\n            this.onSubmit()\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ cardListTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.onSubmit();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { cardListTitle } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input placeholder=\"Edit title...\" value={cardListTitle} onChange={this.handleChange} autoFocus onBlur={this.onSubmit} />\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport CardPreview from './CardPreview.jsx'\r\nimport { AddCardForm } from \"./AddCardForm.jsx\";\r\nimport ListMenu from \"./ListMenu.jsx\"\r\nimport { ListTitleForm } from \"./ListTitleForm.jsx\"\r\nimport { connect } from 'react-redux';\r\nimport { saveBoard } from '../store/actions/boardActions.js'\r\n\r\n\r\nclass CardListPreview extends Component {\r\n\r\n    state = {\r\n        addlistForm: false,\r\n        newlistTitle: '',\r\n        isFocus: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    onEditListTitle = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({ isFocus: true })\r\n    }\r\n\r\n    offEditListTitle = (cardListId, title) => {\r\n        if (!cardListId) {\r\n            this.setState({ isFocus: false })\r\n            return\r\n        };\r\n\r\n        const currBoard = this.props.currBoard;\r\n        const { cardLists } = currBoard;\r\n        const list = cardLists.find(cardList => cardList.id === cardListId);\r\n        list.title = title;\r\n        this.props.saveBoard(currBoard);\r\n        this.setState({ isFocus: false })\r\n    }\r\n\r\n    escFunction = (event) => {\r\n        if (event.keyCode === 27) {\r\n            this.setState({ addlistForm: false, newlistTitle: '' })\r\n        }\r\n    }\r\n\r\n    openForm = () => {\r\n        this.setState({ addlistForm: true });\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ newlistTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.createNewlist();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        if (this.state.newlistTitle) this.createNewlist();\r\n        else this.setState({ addlistForm: false });\r\n    }\r\n\r\n    createNewlist() {\r\n        const list = { title: this.state.newlistTitle }\r\n        this.props.onAddList(list)\r\n        this.setState({ addlistForm: false, newlistTitle: '' })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { cardList, index, onAddCard, currBoard, history, animation } = this.props\r\n\r\n        const { onEditListTitle, offEditListTitle } = this\r\n\r\n        return (\r\n            <Draggable key={cardList.id} draggableId={cardList.id} index={index} >\r\n                {(provided, snapshot) => (\r\n                    <div className={`wrap-card-list flex ${animation}`} key={cardList.id}\r\n                        ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                        <Droppable droppableId={cardList.id} key={cardList.id} type={\"card\"}>\r\n                            {(provided, snapshot) => (\r\n                                <div className={`card-list-container flex column ${snapshot.isDraggingOver ? \"light\" : \"\"}`} >\r\n                                    <div className=\"title-content flex space-between \">\r\n                                        {(this.state.isFocus) ? <ListTitleForm listTitle={cardList.title} cardList={cardList} offEditListTitle={offEditListTitle} /> : <h2 className=\"list-title\">{cardList.title}</h2>}\r\n\r\n                                        <ListMenu onEditListTitle={onEditListTitle} cardListId={cardList.id} />\r\n                                    </div>\r\n                                    <div className={\"card-list\"} {...provided.droppableprops} ref={provided.innerRef} >\r\n                                        {cardList.cards.map((card, index) => {\r\n                                            return (\r\n                                                <CardPreview key={card.id} cardListId={cardList.id} currBoard={currBoard} card={card} index={index} history={history} animation={animation} />\r\n                                            );\r\n                                        })}\r\n                                        {provided.placeholder}\r\n                                    </div>\r\n                                    <AddCardForm onAddCard={onAddCard} cardList={cardList} cardListId={cardList.id} />\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardListPreview)","import React, { Component } from \"react\";\r\n\r\nexport class AddListForm extends Component {\r\n    state = {\r\n        addlistForm: false,\r\n        newlistTitle: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n\r\n    escFunction = (event) => {\r\n        if (event.keyCode === 27) {\r\n            this.setState({ addlistForm: false, newlistTitle: '' })\r\n        }\r\n    }\r\n\r\n    openForm = () => {\r\n        this.setState({ addlistForm: true });\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target;\r\n        this.setState({ newlistTitle: value })\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.createNewlist();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        if (this.state.newlistTitle) this.createNewlist();\r\n        else this.setState({ addlistForm: false });\r\n    }\r\n\r\n    createNewlist() {\r\n        const title = { title: this.state.newlistTitle }\r\n        this.props.onAddList(this.state.newlistTitle)\r\n        this.setState({ addlistForm: false, newlistTitle: '' })\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { addlistForm, newlistTitle } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"add-list\" onClick={this.openForm} >\r\n                    {!addlistForm ? <div className=\"add-list-btn flex justify-center align-center\"><div className=\"plus-white\"></div></div> :\r\n                        <div className=\"screen\">\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <input placeholder=\"Add list ...\" value={newlistTitle} onChange={this.handleChange} autoFocus onBlur={this.handleBlur} />\r\n                            </form>\r\n                        </div>}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport CardDetails from './CardDetails.jsx';\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport CardListPreview from '../cmps/CardListPreview.jsx'\r\nimport { AddListForm } from '../cmps/AddListForm.jsx'\r\nimport { connect } from 'react-redux';\r\nimport uuid from \"uuid/v4\";\r\nimport { clearCurrBoard, setBoards, setBoard, saveBoard, removeBoard } from '../store/actions/boardActions.js'\r\nimport socketService from '../services/socketService'\r\nimport { max } from \"moment\";\r\n\r\n\r\nclass Board extends Component {\r\n\r\n    state = {\r\n        animation: 'animation',\r\n        isScrolling: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { boardId } = this.props.match.params\r\n        this.props.setBoard(boardId)\r\n\r\n        socketService.on(`board-updated-${boardId}`, (id) => {\r\n            this.setState({ animation: 'animation' })\r\n            this.props.setBoard(id)\r\n        })\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        const { boardId } = this.props.match.params\r\n        socketService.off(`board-updated-${boardId}`)\r\n        this.props.clearCurrBoard()\r\n    }\r\n\r\n    getNewCard = (txt) => {\r\n\r\n        return {\r\n            id: uuid(),\r\n            createdAt: Date.now(),\r\n            creator: {},\r\n            description: \"\",\r\n            isStarred: false,\r\n            dueDate: null,\r\n            members: [\r\n            ],\r\n            covers: {\r\n                id: \"\",\r\n                imgUrl: \"\",\r\n                isShown: true\r\n            },\r\n            attachments: [],\r\n            text: txt,\r\n            checkList: [],\r\n            labels: [],\r\n            comments: []\r\n        }\r\n    }\r\n\r\n    getNewList = (title) => {\r\n        return {\r\n            id: uuid(),\r\n            title: title,\r\n            createdAt: Date.now(),\r\n            creator: null,\r\n            cards: []\r\n        }\r\n    }\r\n\r\n    onAddList = async (title = \"\") => {\r\n        this.setState({ animation: 'animation' })\r\n        const { currBoard } = this.props\r\n        const { cardLists } = currBoard;\r\n        cardLists.push(this.getNewList(title));\r\n        await this.props.saveBoard(currBoard)\r\n        window.scrollTo({\r\n            left: 100000,\r\n            behavior: 'smooth'\r\n        });\r\n    }\r\n\r\n    onAddCard = async (ListId, txt = \"\") => {\r\n        this.setState({ animation: 'animation' })\r\n        console.log(\"listId\", ListId)\r\n        console.log(\"txt\", txt)\r\n        const { currBoard } = this.props\r\n        const { cardLists } = currBoard;\r\n        const list = cardLists.find(cardList => cardList.id === ListId);\r\n        console.log('list', list)\r\n        list.cards.push(this.getNewCard(txt))\r\n        console.log(currBoard)\r\n        await this.props.saveBoard(currBoard)\r\n    }\r\n\r\n    onDragEnd = (result) => {\r\n        this.setState({ animation: '' })\r\n        if (!result.destination) return;\r\n        const { currBoard } = this.props\r\n        const { cardLists } = currBoard\r\n        const { source, destination, type } = result;\r\n\r\n        switch (type) {\r\n            case \"card\":\r\n                const sourcecardList = cardLists.find(list => source.droppableId === list.id);\r\n                const destcardList = cardLists.find(list => destination.droppableId === list.id);\r\n\r\n                const sourcecards = sourcecardList.cards;\r\n                const destcards = destcardList.cards;\r\n                const [removed] = sourcecards.splice(source.index, 1);\r\n                destcards.splice(destination.index, 0, removed);\r\n                this.props.saveBoard(currBoard)\r\n                break;\r\n\r\n            case \"list\":\r\n                const [removedList] = cardLists.splice(source.index, 1);\r\n                cardLists.splice(destination.index, 0, removedList);\r\n                this.props.saveBoard(currBoard)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n    };\r\n\r\n    getBackground(board) {\r\n        return board.background.content ? {\r\n            backgroundImage: \"url(\" + `${board.background.content}` + \")\",\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'no-repeat'\r\n        } : { background: board.background.color }\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        if (e._targetInst.memoizedProps.className === 'card-lists flex ') this.setState({ ...this.state, isScrolling: true });\r\n\r\n    }\r\n    onMouseUp = () => {\r\n        this.setState({ ...this.state, isScrolling: false });\r\n    }\r\n    onMouseMove = ({ movementX }) => {\r\n        if (this.state.isScrolling) window.scrollBy(-movementX, 0);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { onDragEnd, onAddList, onAddCard } = this;\r\n        const { currBoard, history } = this.props;\r\n        const { animation } = this.state;\r\n\r\n        const { cardId } = this.props.match.params;\r\n        if (!currBoard) return <div>loading</div>;\r\n        const { cardLists } = currBoard;\r\n\r\n\r\n        return (\r\n            <div className=\"board-app-container\"  >\r\n                <div className=\"board-background\" style={this.getBackground(currBoard)}></div>\r\n                <div className={`wrap-card-lists flex`} >\r\n                    <DragDropContext onDragEnd={result => onDragEnd(result)} >\r\n                        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n                            {(provided, snapshot) => (\r\n                                <div className={`card-lists flex ${snapshot.isDraggingOver ? \"light\" : \"\"}`}\r\n                                    {...provided.droppableProps} ref={provided.innerRef} onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp} onMouseMove={this.onMouseMove}\r\n                                >\r\n                                    {cardLists.map((cardList, index) => {\r\n                                        return (<CardListPreview currBoard={currBoard} onAddCard={onAddCard} key={cardList.id} cardList={cardList} index={index} history={history} animation={animation} />\r\n                                        );\r\n                                    })}\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                    </DragDropContext>\r\n\r\n                    <AddListForm onAddList={onAddList} />\r\n                </div >\r\n                {cardId && <CardDetails currBoard={currBoard} history={history} cardId={cardId} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.boardApp.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setBoards,\r\n    setBoard,\r\n    clearCurrBoard,\r\n    removeBoard,\r\n    saveBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board)\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from './pages/Home.jsx'\r\nimport NavBar from './cmps/NavBar.jsx'\r\nimport UserDetails from './pages/UserDetails.jsx'\r\nimport DashBoard from './pages/DashBoard.jsx';\r\nimport Board from './pages/Board.jsx';\r\n// import DndBoard from './pages/DndBoard.jsx';\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <main className=\"app-main-container\">\r\n        <Switch>\r\n          {/* <Route component={DndBoard} path=\"/board/:boardId/:cardId?\" /> */}\r\n          <Route component={Board} path=\"/board/:boardId/:cardId?\" />\r\n          <Route component={UserDetails} path=\"/user/:userId\" />\r\n          <Route component={DashBoard} path=\"/board\" />\r\n          <Route component={Home} path=\"/\" />\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    boards: [],\r\n    currBoard: null\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: action.boards\r\n            }\r\n        case 'SET_BOARD':\r\n\r\n            return {\r\n                ...state,\r\n                currBoard: action.board\r\n            }\r\n\r\n        case 'RESET_BOARD':\r\n            return {\r\n                ...state,\r\n                currBoard: null\r\n            }\r\n\r\n        case 'ADD_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: [...state.boards, action.board]\r\n            }\r\n        case 'UPDATE_BOARD':\r\n            // console.log('updating.........', action.board);\r\n\r\n            return {\r\n                ...state,\r\n                currBoard: action.board,\r\n                boards: state.boards.map(board => {\r\n                    if (board._id === action.board._id) return action.board;\r\n                    return board;\r\n                })\r\n            }\r\n        case 'REMOVE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.filter(board => board._id !== action.boardId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n","// let localLoggedinUser = null;\r\n// if (sessionStorage.user) localLoggedinUser = JSON.parse(sessionStorage.user);\r\n\r\nconst initialState = {\r\n  users: [],\r\n  loggedInUser: null\r\n};\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n \r\n  switch (action.type) {\r\n    case 'SET_USERS':\r\n      return {\r\n        ...state,\r\n        users: action.users\r\n      };\r\n    case 'SET_USER':\r\n     \r\n      \r\n      return {\r\n        ...state,\r\n        loggedInUser: action.user,\r\n      };\r\n    case 'USER_REMOVE':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { boardReducer } from './reducers/boardReducer'\r\nimport { userReducer } from './reducers/UserReducer'\r\n\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({\r\n    boardApp: boardReducer,\r\n    user: userReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store/store.js';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}